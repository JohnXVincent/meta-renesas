From 1fb9b4fd62ceccfb458cac9d720d6e41b8a795e6 Mon Sep 17 00:00:00 2001
From: Tram Nguyen <tram.nguyen.xw@rvc.renesas.com>
Date: Thu, 30 Nov 2017 15:35:34 +0700
Subject: [PATCH 3/3] iwg22m: u-boot: Fix several warnings

Signed-off-by: Tram Nguyen <tram.nguyen.xw@rvc.renesas.com>
---
 arch/arm/lib/bootm.c                |  1 +
 board/renesas/iwg22m_sm/iwg22m_sm.c | 13 +++--------
 board/renesas/iwg22m_sm/iwg22m_sm.h |  1 +
 common/fdt_support.c                |  8 +++----
 drivers/net/phy/micrel.c            | 46 +------------------------------------
 drivers/usb/eth/asix.c              | 38 +-----------------------------
 6 files changed, 11 insertions(+), 96 deletions(-)

diff --git a/arch/arm/lib/bootm.c b/arch/arm/lib/bootm.c
index e248b68..911c5a2 100644
--- a/arch/arm/lib/bootm.c
+++ b/arch/arm/lib/bootm.c
@@ -47,6 +47,7 @@ static struct tag *params;
 #endif
 
 extern void iwg20m_fdt_update(void *fdt);
+extern void iwg22m_fdt_update(void *fdt);
 
 static ulong get_sp(void)
 {
diff --git a/board/renesas/iwg22m_sm/iwg22m_sm.c b/board/renesas/iwg22m_sm/iwg22m_sm.c
index 8d6733c..280ee68 100644
--- a/board/renesas/iwg22m_sm/iwg22m_sm.c
+++ b/board/renesas/iwg22m_sm/iwg22m_sm.c
@@ -123,6 +123,7 @@ int start_dma_transfer(void)
 		"orr	r0, r0, #(1 << 6)\n"		/* set SMP */
 		"mcr	p15, 0, r0, c1, c0, 1\n");	/* write ACTLR */
 #endif
+	return 0;
 }
 
 #define TMU0_MSTP125	(1 << 25)
@@ -218,7 +219,6 @@ int board_early_init_f(void)
 int board_init(void)
 {
 	u32 val;
-
 	/* adress of boot parameters */
 	gd->bd->bi_boot_params = IWG22M_SDRAM_BASE + 0x100;
 
@@ -351,8 +351,6 @@ int board_init(void)
 int board_eth_init(bd_t *bis)
 {
 	int ret = -ENODEV;
-	u32 val;
-	unsigned char enetaddr[6];
 
 #ifdef CONFIG_SH_ETHER
 	ret = sh_eth_initialize(bis);
@@ -440,9 +438,8 @@ void reset_cpu(ulong addr)
 
 void iwg22m_fdt_update(void *fdt)
 {
-	int node, node1;
+	int node;
         int nodeoffset, size;
-        int addr;
         struct fdt_property *prop;
         u32 *reg;
 
@@ -464,7 +461,7 @@ void iwg22m_fdt_update(void *fdt)
 
                 prop = fdt_get_property_w(fdt, nodeoffset, "pinctrl-0", &size);
         }
-	node = fdt_node_check_compatible(fdt, NULL, "iwave,cam-pd-g22");
+	node = fdt_node_check_compatible(fdt, 0, "iwave,cam-pd-g22");
 	if (node < 0)
 		return;
 
@@ -480,10 +477,6 @@ void iwg22m_fdt_update(void *fdt)
 		}
 	}
 
-	node1 = fdt_node_check_compatible(fdt, NULL, "iwave,lcd-pwr-g22");
-	if (node < 0)
-		return;
-
 	/* iWave: FDT: camera selection */
 	if (!strcmp("hdmi", getenv ("disp"))) 
 		do_fixup_by_path_u32(fdt, "/lcd_power_g22", "lcd", 0, 0);
diff --git a/board/renesas/iwg22m_sm/iwg22m_sm.h b/board/renesas/iwg22m_sm/iwg22m_sm.h
index 79e7bd5..d81a4fe 100644
--- a/board/renesas/iwg22m_sm/iwg22m_sm.h
+++ b/board/renesas/iwg22m_sm/iwg22m_sm.h
@@ -26,6 +26,7 @@
 extern int sh_timer_init(void);
 extern int mmcif_mmc_init(void);
 extern int sdhi_mmc_init(unsigned long addr, int ch);
+extern int ravb_initialize(bd_t *bd);
 
 extern void arch_preboot_os(void);
 
diff --git a/common/fdt_support.c b/common/fdt_support.c
index 77efbe6..a1536af 100644
--- a/common/fdt_support.c
+++ b/common/fdt_support.c
@@ -446,7 +446,7 @@ int fdt_fixup_memory(void *blob, u64 start, u64 size)
 void fdt_fixup_ethernet(void *fdt)
 {
 	int node, i = 0;
-	char enet[16], *tmp;
+	char enet[16];
 	char mac[16] = "ethaddr";
 	const char *path;
 	unsigned char mac_addr[6];
@@ -475,7 +475,7 @@ sprintf(enet, "eth1");
                         debug("No alias for %s\n", enet);
                         sprintf(mac, "eth%daddr", ++i);
                         }
-                tmp = eth_getenv_enetaddr("ethaddr", mac_addr);
+                eth_getenv_enetaddr("ethaddr", mac_addr);
                 do_fixup_by_path(fdt, path, "mac-address", &mac_addr, 6, 0);
                 do_fixup_by_path(fdt, path, "local-mac-address",
                                 &mac_addr, 6, 1);
@@ -485,7 +485,7 @@ sprintf(enet, "eth");
                         debug("No alias for %s\n", enet);
                         sprintf(mac, "eth%daddr", ++i);
                         }
-                tmp = eth_getenv_enetaddr("ethaddr1", mac_addr);
+                eth_getenv_enetaddr("ethaddr1", mac_addr);
                 do_fixup_by_path(fdt, path, "mac-address1", &mac_addr, 6, 0);
                 do_fixup_by_path(fdt, path, "local-mac-address",
                                 &mac_addr, 6, 1);
@@ -495,7 +495,7 @@ sprintf(enet, "eth");
 
 	i = 0;
 	while ((tmp = getenv(mac)) != NULL) {
-		char *end;
+		char *end, *tmp;
 		int j;
 		sprintf(enet, "ethernet%d", i);
 		path = fdt_getprop(fdt, node, enet, NULL);
diff --git a/drivers/net/phy/micrel.c b/drivers/net/phy/micrel.c
index acb62ce..d3bc678 100644
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@ -35,24 +35,7 @@ static struct phy_driver KSZ804_driver = {
 	.shutdown = &genphy_shutdown,
 };
 
-#ifndef CONFIG_PHY_MICREL_KSZ9021
-/*
- * I can't believe Micrel used the exact same part number
- * for the KSZ9021
- * Shame Micrel, Shame!!!!!
- */
-static struct phy_driver KS8721_driver = {
-	.name = "Micrel KS8721BL",
-	.uid = 0x221610,
-	.mask = 0xfffff0,
-	.features = PHY_BASIC_FEATURES,
-	.config = &genphy_config,
-	.startup = &genphy_startup,
-	.shutdown = &genphy_shutdown,
-};
-#endif
-
-#if defined(CONFIG_IWG20M) || defined(CONFIG_IWG22M)
+#ifdef CONFIG_IWG20M
 /**
  * KSZ9021 - KSZ9031 common
  */
@@ -271,33 +254,6 @@ int ksz9031_phy_extended_read(struct phy_device *phydev, int devaddr,
 		  MII_KSZ9031_MMD_ACCES_CTRL, (devaddr | mode));
 	return phy_read(phydev, MDIO_DEVAD_NONE, MII_KSZ9031_MMD_REG_DATA);
 }
-
-static int ksz9031_phy_extread(struct phy_device *phydev, int addr, int devaddr,
-			       int regnum)
-{
-	return ksz9031_phy_extended_read(phydev, devaddr, regnum,
-					 MII_KSZ9031_MOD_DATA_NO_POST_INC);
-};
-
-static int ksz9031_phy_extwrite(struct phy_device *phydev, int addr,
-				int devaddr, int regnum, u16 val)
-{
-	return ksz9031_phy_extended_write(phydev, devaddr, regnum,
-					 MII_KSZ9031_MOD_DATA_POST_INC_RW, val);
-};
-
-
-static struct phy_driver ksz9031_driver = {
-	.name = "Micrel ksz9031",
-	.uid  = 0x221620,
-	.mask = 0xfffff0,
-	.features = PHY_GBIT_FEATURES,
-	.config   = &genphy_config,
-	.startup  = &ksz90xx_startup,
-	.shutdown = &genphy_shutdown,
-	.writeext = &ksz9031_phy_extwrite,
-	.readext = &ksz9031_phy_extread,
-};
 #endif
 
 #ifdef CONFIG_PHY_MICREL_KSZ8081
diff --git a/drivers/usb/eth/asix.c b/drivers/usb/eth/asix.c
index 50470cf..685004b 100644
--- a/drivers/usb/eth/asix.c
+++ b/drivers/usb/eth/asix.c
@@ -720,35 +720,6 @@ int asix_eth_probe(struct usb_device *dev, unsigned int ifnum,
 	return 1;
 }
 
-/* Get the PHY Identifier from the PHYSID1 & PHYSID2 MII registers */
-static u32 asix_get_phyid(struct ueth_data *dev)
-{
-	int phy_reg;
-	u32 phy_id;
-	int i;
-
-	/* Poll for the rare case the FW or phy isn't ready yet.  */
-	for (i = 0; i < 100; i++) {
-		phy_reg = asix_mdio_read(dev, dev->phy_id, MII_PHYSID1);
-		if (phy_reg != 0 && phy_reg != 0xFFFF)
-			break;
-		mdelay(1);
-	}
-
-	if (phy_reg <= 0 || phy_reg == 0xFFFF)
-		return 0;
-
-	phy_id = (phy_reg & 0xffff) << 16;
-
-	phy_reg = asix_mdio_read(dev, dev->phy_id, MII_PHYSID2);
-	if (phy_reg < 0)
-		return 0;
-
-	phy_id |= (phy_reg & 0xffff);
-
-	return phy_id;
-}
-
 static int marvell_phy_init(struct ueth_data *dev)
 {
 	u16 reg;
@@ -777,7 +748,7 @@ static int marvell_phy_init(struct ueth_data *dev)
 
 static int rtl8211cl_phy_init(struct ueth_data *dev)
 {
-	printf("%s : not support rtl8211cl.\n");
+	printf("Not support rtl8211cl.\n");
 
 	return 0;
 }
@@ -785,8 +756,6 @@ static int rtl8211cl_phy_init(struct ueth_data *dev)
 static int ax88178_reset(struct ueth_data *dev)
 {
 	int ret;
-	int gpio0 = 0;
-	u32 phyid;
 	u8 status __aligned(ARCH_DMA_MINALIGN);
 	__le16 eeprom __aligned(ARCH_DMA_MINALIGN);
 
@@ -799,11 +768,9 @@ static int ax88178_reset(struct ueth_data *dev)
 	if (eeprom == cpu_to_le16(0xffff)) {
 		dev->phymode = PHY_MODE_MARVELL;
 		dev->ledmode = 0;
-		gpio0 = 1;
 	} else {
 		dev->phymode = le16_to_cpu(eeprom) & 0x7F;
 		dev->ledmode = le16_to_cpu(eeprom) >> 8;
-		gpio0 = (le16_to_cpu(eeprom) & 0x80) ? 0 : 1;
 	}
 
 	/* Power up external GigaPHY through AX88178 GPIO pin */
@@ -817,9 +784,6 @@ static int ax88178_reset(struct ueth_data *dev)
 		asix_write_gpio(dev, AX_GPIO_GPO1EN | AX_GPIO_GPO_1, 30);
 	}
 
-	/* Read PHYID register *AFTER* powering up PHY */
-	phyid = asix_get_phyid(dev);
-
 	/* Set AX88178 to enable MII/GMII/RGMII interface for external PHY */
 	asix_write_cmd(dev, AX_CMD_SW_PHY_SELECT, 0, 0, 0, NULL);
 
-- 
1.9.1


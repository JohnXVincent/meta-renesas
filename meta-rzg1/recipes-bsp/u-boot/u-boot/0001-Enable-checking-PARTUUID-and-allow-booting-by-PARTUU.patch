From ad97ab3de920ca0b2d9c2e6278799b59a6b28ca3 Mon Sep 17 00:00:00 2001
From: Hung Tran <hung.tran.jy@renesas.com>
Date: Thu, 28 Sep 2017 15:38:46 +0900
Subject: [PATCH 1/2] Enable checking PARTUUID and allow booting by PARTUUID

When booting from SD, micro-SD, or eMMC, user must provide
the dev name /dev/mmcblk...
However, this is difficult because the dev name can be changed
because kernel decide the device name based on loading order.
For example, if micro-SD card is available, micro-SD card will
have dev name /dev/mmcblk0 and eMMC takes /dev/mmcblk1.
But if there is no micro-SD or SD card, eMMC will get
device name /dev/mmcblk0.

The solution here is using the PARTUUID instead of the dev name.
PARTUUID is a permanent name of the disk device and partitions.
(not change even when user format the partition)

This patch enables related configs for "part" command,
then uses this command to identify PARTUUID of SD, micro-SD,
or eMMC device.
Note that without this patch user can manually check
the PARTUUID by "mmc part" command.

Signed-off-by: Hung Tran <hung.tran.jy@renesas.com>
---
 include/configs/iwg20m_q7.h | 32 ++++++++++++++++++++++++++------
 1 file changed, 26 insertions(+), 6 deletions(-)

diff --git a/include/configs/iwg20m_q7.h b/include/configs/iwg20m_q7.h
index 77b07fd..664cfaa 100644
--- a/include/configs/iwg20m_q7.h
+++ b/include/configs/iwg20m_q7.h
@@ -67,6 +67,9 @@
 #define CONFIG_CMD_EXT4_WRITE
 #define CONFIG_CMD_SF
 #define CONFIG_CMD_SPI
+#define CONFIG_CMD_PART
+
+#define CONFIG_PARTITION_UUIDS
 
 #define CONFIG_CMDLINE_TAG
 #define CONFIG_SETUP_MEMORY_TAGS
@@ -175,12 +178,29 @@
 	"fdt_check=if test ${fdtforce} = \"0\"; then dynamicfdt;fi;\0" \
 	"vin2_camera=ov5640\0" \
 	"kernel=uImage\0" \
-                "bootargs_base=console=ttySC0,115200n8 ignore_loglevel vmalloc=384M\0" \
-                "bootargs_mmc=setenv bootargs ${bootargs_base} " \
-                        "root=/dev/mmcblk2p2 rootwait rootfstype=ext3 rw\0" \
-                "bootcmd_mmc=run bootargs_mmc;run fdt_check;mmc dev 2;" \
-                        "fatload mmc 2 ${loadaddr} ${kernel};fatload mmc 2 ${fdt_addr} ${fdt_file};bootm ${loadaddr} - ${fdt_addr}\0" \
-                "bootcmd=run bootcmd_mmc\0" \
+	"bootargs_base=console=ttySC0,115200n8 ignore_loglevel vmalloc=384M\0" \
+	"bootargs_sd=part uuid mmc 0:2 sd_uuid;" \
+		"setenv bootargs ${bootargs_base} root=PARTUUID=${sd_uuid}" \
+		" rootwait rootfstype=ext3 rw\0" \
+	"bootcmd_sd=run bootargs_sd;run fdt_check;" \
+		"fatload mmc 0:1 ${loadaddr} ${kernel};" \
+		'fatload mmc 0:1 ${fdt_addr} ${fdt_file};' \
+		"bootm ${loadaddr} - ${fdt_addr}\0" \
+	"bootargs_usd=part uuid mmc 1:2 usd_uuid;" \
+		"setenv bootargs ${bootargs_base} root=PARTUUID=${usd_uuid}" \
+		" rootwait rootfstype=ext3 rw\0" \
+	"bootcmd_usd=run bootargs_usd;run fdt_check;"\
+		"fatload mmc 1:1 ${loadaddr} ${kernel};" \
+		'fatload mmc 1:1 ${fdt_addr} ${fdt_file};' \
+		"bootm ${loadaddr} - ${fdt_addr}\0" \
+	"bootargs_mmc=part uuid mmc 2:2 mmc_uuid;" \
+		"setenv bootargs ${bootargs_base} root=PARTUUID=${mmc_uuid}" \
+		" rootwait rootfstype=ext3 rw\0" \
+	"bootcmd_mmc=run bootargs_mmc;run fdt_check;" \
+		"fatload mmc 2:1 ${loadaddr} ${kernel};" \
+		'fatload mmc 2:1 ${fdt_addr} ${fdt_file};i' \
+		"bootm ${loadaddr} - ${fdt_addr}\0" \
+	"bootcmd=run bootcmd_mmc\0" \
 
 /* SH Ether */
 #define CONFIG_NET_MULTI
-- 
2.1.4


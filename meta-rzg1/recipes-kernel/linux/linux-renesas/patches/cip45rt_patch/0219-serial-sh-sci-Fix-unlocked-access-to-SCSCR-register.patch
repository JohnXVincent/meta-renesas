From 938b710387f45d7b51a9c4c1f6a322c69d9712cc Mon Sep 17 00:00:00 2001
From: Quynh Nguyen <quynh.nguyen.xb@renesas.com>
Date: Thu, 24 May 2018 14:21:23 +0700
Subject: [PATCH 219/504] serial: sh-sci: Fix unlocked access to SCSCR register

	Commit: <16a094a0dddd6b731f25579494e195f948acc502>
	From:	git://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-backport.git

	The SCSCR register access in sci_break_ctl() is not locked.
	The unlocked access may cause conflicts of settings to the SCSCR register.
	Therefore, this patch adds lock during register access in sci_break_ctl().

Signed-off-by: Mitsuru Ezo <mitsuru.ezo.pz@ps.hitachi-solutions.com>
Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Signed-off-by: tungvo <tung.vo.eb@rvc.renesas.com>
Signed-off-by: Quynh Nguyen <quynh.nguyen.xb@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 83751ed..14df292 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1897,6 +1897,7 @@ static void sci_enable_ms(struct uart_port *port)
 static void sci_break_ctl(struct uart_port *port, int break_state)
 {
 	unsigned short scscr, scsptr;
+	unsigned long flags;
 
 	/* check wheter the port has SCSPTR */
 	if (!sci_getreg(port, SCSPTR)->size) {
@@ -1907,6 +1908,7 @@ static void sci_break_ctl(struct uart_port *port, int break_state)
 		return;
 	}
 
+	spin_lock_irqsave(&port->lock, flags);
 	scsptr = serial_port_in(port, SCSPTR);
 	scscr = serial_port_in(port, SCSCR);
 
@@ -1920,6 +1922,7 @@ static void sci_break_ctl(struct uart_port *port, int break_state)
 
 	serial_port_out(port, SCSPTR, scsptr);
 	serial_port_out(port, SCSCR, scscr);
+	spin_unlock_irqrestore(&port->lock, flags);
 }
 
 static int sci_startup(struct uart_port *port)
-- 
2.7.4


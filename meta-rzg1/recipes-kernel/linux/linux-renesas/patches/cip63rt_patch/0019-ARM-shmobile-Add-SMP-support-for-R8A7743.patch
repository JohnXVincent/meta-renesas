From 2136b933a94d95a808b74c119bb9e0aeabecdf9d Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Tue, 14 Jul 2020 08:39:43 +0700
Subject: [PATCH 019/441] ARM: shmobile: Add SMP support for R8A7743

This patch supports SMP of r8a7743.

Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 arch/arm/mach-shmobile/r8a7743.h     |  6 ++++
 arch/arm/mach-shmobile/smp-r8a7743.c | 65 ++++++++++++++++++++++++++++++++++++
 2 files changed, 71 insertions(+)
 create mode 100644 arch/arm/mach-shmobile/r8a7743.h
 create mode 100644 arch/arm/mach-shmobile/smp-r8a7743.c

diff --git a/arch/arm/mach-shmobile/r8a7743.h b/arch/arm/mach-shmobile/r8a7743.h
new file mode 100644
index 0000000..248eb59
--- /dev/null
+++ b/arch/arm/mach-shmobile/r8a7743.h
@@ -0,0 +1,6 @@
+#ifndef __ASM_R8A7743_H__
+#define __ASM_R8A7743_H__
+
+extern struct smp_operations r8a7743_smp_ops;
+
+#endif /* __ASM_R8A7743_H__ */
diff --git a/arch/arm/mach-shmobile/smp-r8a7743.c b/arch/arm/mach-shmobile/smp-r8a7743.c
new file mode 100644
index 0000000..09b1e76
--- /dev/null
+++ b/arch/arm/mach-shmobile/smp-r8a7743.c
@@ -0,0 +1,65 @@
+/*
+ * SMP support for r8a7743
+ *
+ * Copyright (C) 2013 Renesas Solutions Corp.
+ * Copyright (C) 2013 Magnus Damm
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/smp.h>
+#include <linux/io.h>
+
+#include <asm/smp_plat.h>
+
+#include "common.h"
+#include "platsmp-apmu.h"
+#include "r8a7743.h"
+#include "rcar-gen2.h"
+
+static struct rcar_apmu_config r8a7743_apmu_config[] = {
+	{
+		.iomem = DEFINE_RES_MEM(0xe6152000, 0x188),
+		.cpus = { 0, 1 },
+	}
+};
+
+static void __init r8a7743_smp_prepare_cpus(unsigned int max_cpus)
+{
+	/* let APMU code install data related to shmobile_boot_vector */
+	shmobile_smp_apmu_prepare_cpus(max_cpus,
+				       r8a7743_apmu_config,
+				       ARRAY_SIZE(r8a7743_apmu_config));
+
+	rcar_gen2_pm_init();
+}
+
+static int r8a7743_smp_boot_secondary(unsigned int cpu,
+				      struct task_struct *idle)
+{
+	/* Error out when hardware debug mode is enabled */
+	if (rcar_gen2_read_mode_pins() & BIT(21)) {
+		pr_warn("Unable to boot CPU%u when MD21 is set\n", cpu);
+		return -ENOTSUPP;
+	}
+
+	return shmobile_smp_apmu_boot_secondary(cpu, idle);
+}
+
+struct smp_operations r8a7743_smp_ops __initdata = {
+	.smp_prepare_cpus	= r8a7743_smp_prepare_cpus,
+	.smp_boot_secondary	= r8a7743_smp_boot_secondary,
+#ifdef CONFIG_HOTPLUG_CPU
+	.cpu_can_disable	= shmobile_smp_cpu_can_disable,
+	.cpu_die		= shmobile_smp_apmu_cpu_die,
+	.cpu_kill		= shmobile_smp_apmu_cpu_kill,
+#endif
+};
-- 
2.7.4


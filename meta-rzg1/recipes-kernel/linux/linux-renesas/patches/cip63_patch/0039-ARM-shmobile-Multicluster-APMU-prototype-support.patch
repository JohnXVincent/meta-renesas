From 62c5200e9d3e01bee9757d42c545eb80f3b2aabd Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Thu, 10 May 2018 18:14:38 +0700
Subject: [PATCH 039/442] ARM: shmobile: Multicluster APMU prototype support

refer to https://patchwork.kernel.org/patch/3948791/

Allow APMU multicluster operation when enabled via
the kernel command line. Default is still single
cluster operation. Use together with appropriate
scheduler modifcations or static CPU affinity.

Signed-off-by: Magnus Damm <damm@opensource.se>
Signed-off-by: Binh Nguyen <binh.nguyen.uw@rvc.renesas.com>
Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 arch/arm/mach-shmobile/platsmp-apmu.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-shmobile/platsmp-apmu.c b/arch/arm/mach-shmobile/platsmp-apmu.c
index 429ae75..39648f8 100644
--- a/arch/arm/mach-shmobile/platsmp-apmu.c
+++ b/arch/arm/mach-shmobile/platsmp-apmu.c
@@ -26,6 +26,19 @@
 #include "platsmp-apmu.h"
 #include "rcar-gen2.h"
 
+/* only enable the cluster that includes the boot CPU by default */
+static bool enable_multicluster;
+
+static __init int apmu_setup(char *opt)
+{
+	if (!opt)
+		return -EINVAL;
+	if (!strncmp(opt, "multicluster", 12))
+		enable_multicluster = true;
+	return 0;
+}
+early_param("apmu", apmu_setup);
+
 static struct {
 	void __iomem *iomem;
 	int bit;
@@ -111,8 +124,7 @@ static void apmu_parse_cfg(void (*fn)(struct resource *res, int cpu, int bit),
 	bool is_allowed;
 
 	for (k = 0; k < num; k++) {
-		/* only enable the cluster that includes the boot CPU */
-		is_allowed = false;
+		is_allowed = enable_multicluster;
 		for (bit = 0; bit < ARRAY_SIZE(apmu_config[k].cpus); bit++) {
 			id = apmu_config[k].cpus[bit];
 			if (id >= 0) {
-- 
2.7.4


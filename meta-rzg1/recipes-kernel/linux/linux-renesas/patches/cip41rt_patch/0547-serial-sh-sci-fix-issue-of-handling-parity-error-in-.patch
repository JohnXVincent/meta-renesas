From e9ccd126ea02bd53d9a32fcf68f73a91b163f779 Mon Sep 17 00:00:00 2001
From: Hao Bui <hao.bui.yg@renesas.com>
Date: Tue, 10 Mar 2020 11:02:44 +0700
Subject: [PATCH 547/559] serial: sh-sci: fix issue of handling parity error in
 PIO mode

Current SCIF driver does not treat parity error properly when working
with SCIF|HSCIF interface types in PIO mode.

In sci_receive_chars() of drivers/tty/serial/sh-sci.c, SCxRDR is read
before reading SCxSR which is wrong sequence for SCIF|HSCIF. Therefore,
parity errors cannot be detected correctly.

Signed-off-by: Hao Bui <hao.bui.yg@renesas.com>
---
 drivers/tty/serial/sh-sci.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index b917218..a00a22e 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -808,9 +808,17 @@ static void sci_receive_chars(struct uart_port *port)
 				tty_insert_flip_char(tport, c, TTY_NORMAL);
 		} else {
 			for (i = 0; i < count; i++) {
-				char c = serial_port_in(port, SCxRDR);
-
-				status = serial_port_in(port, SCxSR);
+				char c;
+
+				if (port->type == PORT_SCIF ||
+						port->type == PORT_HSCIF)
+				{
+					status = serial_port_in(port, SCxSR);
+					c = serial_port_in(port, SCxRDR);
+				} else {
+					c = serial_port_in(port, SCxRDR);
+					status = serial_port_in(port, SCxSR);
+				}
 #if defined(CONFIG_CPU_SH3)
 				/* Skip "chars" during break */
 				if (sci_port->break_flag) {
-- 
2.7.4


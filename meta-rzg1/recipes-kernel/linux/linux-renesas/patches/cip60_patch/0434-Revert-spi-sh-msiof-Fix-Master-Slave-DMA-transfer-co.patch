From edea3c12d5114c5a8e781d140971cc613d4adf9d Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Mon, 18 Jan 2021 14:38:28 +0700
Subject: [PATCH 434/440] Revert "spi: sh-msiof: Fix Master/Slave DMA transfer
 completion timeout"

This reverts commit a33aa39d802f2bbb4c4fd2419bfc5caeac06b930.

Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 drivers/spi/spi-sh-msiof.c   | 11 ++---------
 include/linux/spi/sh_msiof.h |  5 -----
 2 files changed, 2 insertions(+), 14 deletions(-)

diff --git a/drivers/spi/spi-sh-msiof.c b/drivers/spi/spi-sh-msiof.c
index c0645e4..4da8183 100644
--- a/drivers/spi/spi-sh-msiof.c
+++ b/drivers/spi/spi-sh-msiof.c
@@ -57,7 +57,6 @@ struct sh_msiof_spi_priv {
 	dma_addr_t rx_dma_addr;
 	bool native_cs_inited;
 	bool native_cs_high;
-	int mode;
 };
 
 #define MAX_SS	3	/* Maximum number of native chip selects */
@@ -644,9 +643,6 @@ static int sh_msiof_spi_txrx_once(struct sh_msiof_spi_priv *p,
 {
 	int fifo_shift;
 	int ret;
-	unsigned long timeout;
-
-	timeout = (p->mode == SPI_MSIOF_MASTER) ? HZ : MAX_SCHEDULE_TIMEOUT;
 
 	/* limit maximum word transfer to rx/tx fifo size */
 	if (tx_buf)
@@ -677,7 +673,7 @@ static int sh_msiof_spi_txrx_once(struct sh_msiof_spi_priv *p,
 	}
 
 	/* wait for tx fifo to be emptied / rx fifo to be filled */
-	if (!wait_for_completion_timeout(&p->done, timeout)) {
+	if (!wait_for_completion_timeout(&p->done, HZ)) {
 		dev_err(&p->pdev->dev, "PIO timeout\n");
 		ret = -ETIMEDOUT;
 		goto stop_reset;
@@ -721,9 +717,6 @@ static int sh_msiof_dma_once(struct sh_msiof_spi_priv *p, const void *tx,
 	struct dma_async_tx_descriptor *desc_tx = NULL, *desc_rx = NULL;
 	dma_cookie_t cookie;
 	int ret;
-	unsigned long timeout;
-
-	timeout = (p->mode == SPI_MSIOF_MASTER) ? HZ : MAX_SCHEDULE_TIMEOUT;
 
 	/* First prepare and submit the DMA request(s), as this may fail */
 	if (rx) {
@@ -790,7 +783,7 @@ static int sh_msiof_dma_once(struct sh_msiof_spi_priv *p, const void *tx,
 	}
 
 	/* wait for tx fifo to be emptied / rx fifo to be filled */
-	if (!wait_for_completion_timeout(&p->done, timeout)) {
+	if (!wait_for_completion_timeout(&p->done, HZ)) {
 		dev_err(&p->pdev->dev, "DMA timeout\n");
 		ret = -ETIMEDOUT;
 		goto stop_reset;
diff --git a/include/linux/spi/sh_msiof.h b/include/linux/spi/sh_msiof.h
index 023fbed..b087a85 100644
--- a/include/linux/spi/sh_msiof.h
+++ b/include/linux/spi/sh_msiof.h
@@ -11,9 +11,4 @@ struct sh_msiof_spi_info {
 	u32 syncdl;
 };
 
-enum {
-	SPI_MSIOF_MASTER,
-	SPI_MSIOF_SLAVE,
-};
-
 #endif /* __SPI_SH_MSIOF_H__ */
-- 
2.7.4


From 1d5e7390b46ee3d2e91b878c421f21a8fb52a072 Mon Sep 17 00:00:00 2001
From: Loc Vu <loc.vu.zn@renesas.com>
Date: Mon, 13 Jul 2020 16:16:48 +0700
Subject: [PATCH 017/440] soc: renesas: rcar-sysc: Add R8A7743 support

Add support for RZ/G1M (R8A7743) SoC power areas to the R-Car SYSC
driver.

Signed-off-by: Loc Vu <loc.vu.zn@renesas.com>
---
 drivers/soc/renesas/Makefile             |  1 +
 drivers/soc/renesas/r8a7743-sysc.c       | 31 +++++++++++++++++++++++++++++++
 include/dt-bindings/power/r8a7743-sysc.h | 26 ++++++++++++++++++++++++++
 3 files changed, 58 insertions(+)
 create mode 100644 drivers/soc/renesas/r8a7743-sysc.c
 create mode 100644 include/dt-bindings/power/r8a7743-sysc.h

diff --git a/drivers/soc/renesas/Makefile b/drivers/soc/renesas/Makefile
index 77e8f95..c901317 100644
--- a/drivers/soc/renesas/Makefile
+++ b/drivers/soc/renesas/Makefile
@@ -1,3 +1,4 @@
 obj-$(CONFIG_ARCH_RCAR_GEN2)	+= rcar-rst.o
+obj-$(CONFIG_ARCH_R8A7743)	+= rcar-sysc.o r8a7743-sysc.o
 
 obj-$(CONFIG_SOC_BUS)		+= renesas-soc.o
diff --git a/drivers/soc/renesas/r8a7743-sysc.c b/drivers/soc/renesas/r8a7743-sysc.c
new file mode 100644
index 0000000..b19e8f3
--- /dev/null
+++ b/drivers/soc/renesas/r8a7743-sysc.c
@@ -0,0 +1,31 @@
+/*
+ * Renesas R-Car M2-W/N System Controller
+ *
+ * Copyright (C) 2016 Glider bvba
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ */
+
+#include <linux/bug.h>
+#include <linux/kernel.h>
+#include <dt-bindings/power/r8a7743-sysc.h>
+#include "rcar-sysc.h"
+
+static const struct rcar_sysc_area r8a7743_areas[] __initconst = {
+	{ "always-on",      0, 0, R8A7743_PD_ALWAYS_ON, -1, PD_ALWAYS_ON },
+	{ "ca15-scu",   0x180, 0, R8A7743_PD_CA15_SCU,  R8A7743_PD_ALWAYS_ON,
+	  PD_SCU },
+	{ "ca15-cpu0",   0x40, 0, R8A7743_PD_CA15_CPU0, R8A7743_PD_CA15_SCU,
+	  PD_CPU_NOCR },
+	{ "ca15-cpu1",   0x40, 1, R8A7743_PD_CA15_CPU1, R8A7743_PD_CA15_SCU,
+	  PD_CPU_NOCR },
+	{ "sh-4a",       0x80, 0, R8A7743_PD_SH_4A,     R8A7743_PD_ALWAYS_ON },
+	{ "sgx",         0xc0, 0, R8A7743_PD_SGX,       R8A7743_PD_ALWAYS_ON },
+};
+
+const struct rcar_sysc_info r8a7743_sysc_info __initconst = {
+	.areas = r8a7743_areas,
+	.num_areas = ARRAY_SIZE(r8a7743_areas),
+};
diff --git a/include/dt-bindings/power/r8a7743-sysc.h b/include/dt-bindings/power/r8a7743-sysc.h
new file mode 100644
index 0000000..f3df0a6
--- /dev/null
+++ b/include/dt-bindings/power/r8a7743-sysc.h
@@ -0,0 +1,26 @@
+/*
+ * Copyright (C) 2016 Glider bvba
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; version 2 of the License.
+ */
+#ifndef __DT_BINDINGS_POWER_R8A7743_SYSC_H__
+#define __DT_BINDINGS_POWER_R8A7743_SYSC_H__
+
+/*
+ * These power domain indices match the numbers of the interrupt bits
+ * representing the power areas in the various Interrupt Registers
+ * (e.g. SYSCISR, Interrupt Status Register)
+ */
+
+#define R8A7743_PD_CA15_CPU0		 0
+#define R8A7743_PD_CA15_CPU1		 1
+#define R8A7743_PD_CA15_SCU		12
+#define R8A7743_PD_SH_4A		16
+#define R8A7743_PD_SGX			20
+
+/* Always-on power area */
+#define R8A7743_PD_ALWAYS_ON		32
+
+#endif /* __DT_BINDINGS_POWER_R8A7743_SYSC_H__ */
-- 
2.7.4


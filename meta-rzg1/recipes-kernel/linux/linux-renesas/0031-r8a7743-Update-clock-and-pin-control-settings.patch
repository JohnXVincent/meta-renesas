From 8098acdb09928732db4547e95ad9dbd516be596f Mon Sep 17 00:00:00 2001
From: HungTran <hung.tran.jy@rvc.renesas.com>
Date: Fri, 6 May 2016 01:56:44 +0700
Subject: [PATCH] r8a7743: Update clock and pin control settings

There are some missing components in previous settings.
This patch adds these missing components.

Signed-off-by: HungTran <hung.tran.jy@rvc.renesas.com>
---
 arch/arm/mach-shmobile/clock-r8a7743.c |   45 +-
 arch/arm/mach-shmobile/r8a7743.h       |   20 +
 arch/arm/mach-shmobile/setup-r8a7743.c |    8 +
 drivers/pinctrl/sh-pfc/pfc-r8a7743.c   | 1365 ++++++++++++++++++++++++--------
 4 files changed, 1108 insertions(+), 330 deletions(-)

diff --git a/arch/arm/mach-shmobile/clock-r8a7743.c b/arch/arm/mach-shmobile/clock-r8a7743.c
index f31311f..5fef035 100644
--- a/arch/arm/mach-shmobile/clock-r8a7743.c
+++ b/arch/arm/mach-shmobile/clock-r8a7743.c
@@ -82,7 +82,7 @@ static struct clk_mapping cpg_mapping = {
 };
 
 static struct clk extal_clk = {
-	/* .rate will be updated on r8a7791_clock_init() */
+	/* .rate will be updated on r8a7743_clock_init() */
 	.mapping	= &cpg_mapping,
 };
 
@@ -169,6 +169,7 @@ static struct clk div6_clks[DIV6_NR] = {
 
 /* MSTP */
 enum {
+	MSTP1108, MSTP1107, MSTP1106,
 	MSTP931, MSTP930, MSTP929, MSTP928, MSTP927, MSTP925,
 	MSTP917,
 	MSTP815, MSTP814,
@@ -181,8 +182,9 @@ enum {
 	MSTP502, MSTP501,
 	MSTP314, MSTP312, MSTP311,
 	MSTP219,
-	MSTP208, MSTP205,
-	MSTP131, MSTP119, MSTP118, MSTP115, MSTP103, MSTP101,
+	MSTP216, MSTP208, MSTP207, MSTP206, MSTP205,
+	MSTP204, MSTP203, MSTP202,
+	MSTP131, MSTP119, MSTP118, MSTP115, MSTP109, MSTP103, MSTP101,
 	MSTP128, MSTP127,
 	MSTP124,
 	MSTP112,
@@ -191,6 +193,9 @@ enum {
 };
 
 static struct clk mstp_clks[MSTP_NR] = {
+	[MSTP1108] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR11, 8, MSTPSR11, 0), /* SCIFA5 */
+	[MSTP1107] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR11, 7, MSTPSR11, 0), /* SCIFA4 */
+	[MSTP1106] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR11, 6, MSTPSR11, 0), /* SCIFA3 */
 	[MSTP931] = SH_CLK_MSTP32_STS(&hp_clk, SMSTPCR9, 31, MSTPSR9, 0), /* I2C0 */
 	[MSTP930] = SH_CLK_MSTP32_STS(&hp_clk, SMSTPCR9, 30, MSTPSR9, 0), /* I2C1 */
 	[MSTP929] = SH_CLK_MSTP32_STS(&hp_clk, SMSTPCR9, 29, MSTPSR9, 0), /* I2C2 */
@@ -225,8 +230,14 @@ static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP312] = SH_CLK_MSTP32_STS(&div6_clks[DIV6_SD1], SMSTPCR3, 12, MSTPSR3, 0), /* SDHI1 */
 	[MSTP311] = SH_CLK_MSTP32_STS(&div6_clks[DIV6_SD2], SMSTPCR3, 11, MSTPSR3, 0), /* SDHI2 */
 	[MSTP219] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 19, MSTPSR2, 0), /* SYS-DMAC LOW */
+	[MSTP216] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 16, MSTPSR2, 0), /* SCIFB2 */
 	[MSTP208] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 8, MSTPSR2, 0), /* MSIOF1 */
+	[MSTP207] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 7, MSTPSR2, 0), /* SCIFB1 */
+	[MSTP206] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 6, MSTPSR2, 0), /* SCIFB0 */
 	[MSTP205] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 5, MSTPSR2, 0), /* MSIOF2 */
+	[MSTP204] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 4, MSTPSR2, 0), /* SCIFA0 */
+	[MSTP203] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 3, MSTPSR2, 0), /* SCIFA1 */
+	[MSTP202] = SH_CLK_MSTP32_STS(&mp_clk, SMSTPCR2, 2, MSTPSR2, 0), /* SCIFA2 */
 	[MSTP131] = SH_CLK_MSTP32_STS(&zs_clk, SMSTPCR1, 31, MSTPSR1, 0), /* VSPS */
 	[MSTP128] = SH_CLK_MSTP32_STS(&zs_clk, SMSTPCR1, 28, MSTPSR1, 0), /* VSP1 (DU0) */
 	[MSTP127] = SH_CLK_MSTP32_STS(&zs_clk, SMSTPCR1, 27, MSTPSR1, 0), /* VSP1 (DU1) */
@@ -261,6 +272,12 @@ static struct clk_lookup lookups[] = {
 
 
 	/* MSTP */
+	CLKDEV_DEV_ID("sh-sci.0", &mstp_clks[MSTP204]), /* SCIFA0 */
+	CLKDEV_DEV_ID("sh-sci.1", &mstp_clks[MSTP203]), /* SCIFA1 */
+	CLKDEV_DEV_ID("sh-sci.2", &mstp_clks[MSTP206]), /* SCIFB0 */
+	CLKDEV_DEV_ID("sh-sci.3", &mstp_clks[MSTP207]), /* SCIFB1 */
+	CLKDEV_DEV_ID("sh-sci.4", &mstp_clks[MSTP216]), /* SCIFB2 */
+	CLKDEV_DEV_ID("sh-sci.5", &mstp_clks[MSTP202]), /* SCIFA2 */
 	CLKDEV_DEV_ID("sh-sci.6", &mstp_clks[MSTP721]), /* SCIF0 */
 	CLKDEV_DEV_ID("sh-sci.7", &mstp_clks[MSTP720]), /* SCIF1 */
 	CLKDEV_DEV_ID("sh-sci.8", &mstp_clks[MSTP717]), /* HSCIF0 */
@@ -269,6 +286,9 @@ static struct clk_lookup lookups[] = {
 	CLKDEV_DEV_ID("sh-sci.11", &mstp_clks[MSTP718]), /* SCIF3 */
 	CLKDEV_DEV_ID("sh-sci.12", &mstp_clks[MSTP715]), /* SCIF4 */
 	CLKDEV_DEV_ID("sh-sci.13", &mstp_clks[MSTP714]), /* SCIF5 */
+	CLKDEV_DEV_ID("sh-sci.14", &mstp_clks[MSTP1106]), /* SCIFA3 */
+	CLKDEV_DEV_ID("sh-sci.15", &mstp_clks[MSTP1107]), /* SCIFA4 */
+	CLKDEV_DEV_ID("sh-sci.16", &mstp_clks[MSTP1108]), /* SCIFA5 */
 	CLKDEV_DEV_ID("sh-sci.17", &mstp_clks[MSTP713]), /* HSCIF2 */
 	CLKDEV_DEV_ID("sh_mobile_sdhi.0", &mstp_clks[MSTP314]),
 	CLKDEV_DEV_ID("sh_mobile_sdhi.1", &mstp_clks[MSTP312]),
@@ -288,12 +308,12 @@ static struct clk_lookup lookups[] = {
 	CLKDEV_DEV_ID("i2c-rcar_gen2.3", &mstp_clks[MSTP928]),
 	CLKDEV_DEV_ID("i2c-rcar_gen2.4", &mstp_clks[MSTP927]),
 	CLKDEV_DEV_ID("i2c-rcar_gen2.5", &mstp_clks[MSTP925]),
-	CLKDEV_DEV_ID("r8a7791-ether", &mstp_clks[MSTP813]), /* Ether */
-	CLKDEV_DEV_ID("r8a7791-vin.0", &mstp_clks[MSTP811]),
-	CLKDEV_DEV_ID("r8a7791-vin.1", &mstp_clks[MSTP810]),
-	CLKDEV_DEV_ID("r8a7791-vin.2", &mstp_clks[MSTP809]),
-	CLKDEV_DEV_ID("sata-r8a7791.0", &mstp_clks[MSTP815]),
-	CLKDEV_DEV_ID("sata-r8a7791.1", &mstp_clks[MSTP814]),
+	CLKDEV_DEV_ID("r8a7743-ether", &mstp_clks[MSTP813]), /* Ether */
+	CLKDEV_DEV_ID("r8a7743-vin.0", &mstp_clks[MSTP811]),
+	CLKDEV_DEV_ID("r8a7743-vin.1", &mstp_clks[MSTP810]),
+	CLKDEV_DEV_ID("r8a7743-vin.2", &mstp_clks[MSTP809]),
+	CLKDEV_DEV_ID("sata-r8a7743.0", &mstp_clks[MSTP815]),
+	CLKDEV_DEV_ID("sata-r8a7743.1", &mstp_clks[MSTP814]),
 	CLKDEV_DEV_ID("pci-rcar-gen2.0", &mstp_clks[MSTP703]),
 	CLKDEV_DEV_ID("pci-rcar-gen2.1", &mstp_clks[MSTP703]),
 	CLKDEV_CON_ID("vsps", &mstp_clks[MSTP131]),
@@ -307,9 +327,9 @@ static struct clk_lookup lookups[] = {
 	CLKDEV_DEV_ID("pvrsrvkm", &mstp_clks[MSTP112]),
 
 	/* ICK */
-	CLKDEV_ICK_ID("lvds.0", "rcar-du-r8a7791", &mstp_clks[MSTP726]),
-	CLKDEV_ICK_ID("du.0", "rcar-du-r8a7791", &mstp_clks[MSTP724]),
-	CLKDEV_ICK_ID("du.1", "rcar-du-r8a7791", &mstp_clks[MSTP723]),
+	CLKDEV_ICK_ID("lvds.0", "rcar-du-r8a7743", &mstp_clks[MSTP726]),
+	CLKDEV_ICK_ID("du.0", "rcar-du-r8a7743", &mstp_clks[MSTP724]),
+	CLKDEV_ICK_ID("du.1", "rcar-du-r8a7743", &mstp_clks[MSTP723]),
 	CLKDEV_ICK_ID("usbhs", "usb_phy_rcar_gen2", &mstp_clks[MSTP704]),
 };
 
diff --git a/arch/arm/mach-shmobile/r8a7743.h b/arch/arm/mach-shmobile/r8a7743.h
index 7cfa7ad..18af877 100644
--- a/arch/arm/mach-shmobile/r8a7743.h
+++ b/arch/arm/mach-shmobile/r8a7743.h
@@ -88,6 +88,8 @@ enum {
 	AUDIOPP_DMAC_SLAVE_SSI8_TO_SCU8,
 	AUDIOPP_DMAC_SLAVE_SSI9_TO_SCU9,
 	AUDIOPP_DMAC_SLAVE_CMD0_TO_SSI0,
+	SYS_DMAC_SLAVE_MMCIF0_TX,
+	SYS_DMAC_SLAVE_MMCIF0_RX,
 	SYS_DMAC_SLAVE_SDHI0_TX,
 	SYS_DMAC_SLAVE_SDHI0_RX,
 	SYS_DMAC_SLAVE_SDHI1_TX,
@@ -106,6 +108,24 @@ enum {
 	SYS_DMAC_SLAVE_SCIF4_RX,
 	SYS_DMAC_SLAVE_SCIF5_TX,
 	SYS_DMAC_SLAVE_SCIF5_RX,
+	SYS_DMAC_SLAVE_SCIFA0_TX,
+	SYS_DMAC_SLAVE_SCIFA0_RX,
+	SYS_DMAC_SLAVE_SCIFA1_TX,
+	SYS_DMAC_SLAVE_SCIFA1_RX,
+	SYS_DMAC_SLAVE_SCIFA2_TX,
+	SYS_DMAC_SLAVE_SCIFA2_RX,
+	SYS_DMAC_SLAVE_SCIFA3_TX,
+	SYS_DMAC_SLAVE_SCIFA3_RX,
+	SYS_DMAC_SLAVE_SCIFA4_TX,
+	SYS_DMAC_SLAVE_SCIFA4_RX,
+	SYS_DMAC_SLAVE_SCIFA5_TX,
+	SYS_DMAC_SLAVE_SCIFA5_RX,
+	SYS_DMAC_SLAVE_SCIFB0_TX,
+	SYS_DMAC_SLAVE_SCIFB0_RX,
+	SYS_DMAC_SLAVE_SCIFB1_TX,
+	SYS_DMAC_SLAVE_SCIFB1_RX,
+	SYS_DMAC_SLAVE_SCIFB2_TX,
+	SYS_DMAC_SLAVE_SCIFB2_RX,
 	SYS_DMAC_SLAVE_HSCIF0_TX,
 	SYS_DMAC_SLAVE_HSCIF0_RX,
 	SYS_DMAC_SLAVE_HSCIF1_TX,
diff --git a/arch/arm/mach-shmobile/setup-r8a7743.c b/arch/arm/mach-shmobile/setup-r8a7743.c
index ace8ada..7be1082 100644
--- a/arch/arm/mach-shmobile/setup-r8a7743.c
+++ b/arch/arm/mach-shmobile/setup-r8a7743.c
@@ -106,6 +106,8 @@ static struct resource scif##index##_resources[] = {			\
 #define r8a7743_HSCIF(index, baseaddr, irq)				\
 	__r8a7743_SCIF(PORT_HSCIF, index, baseaddr, irq)
 
+#define r8a7743_SCIFB(index, baseaddr, irq)				\
+	__r8a7743_SCIF(PORT_SCIFB, index, baseaddr, irq)
 
 r8a7743_SCIF(0,   0xe6e60000, gic_spi(152)); /* SCIF0 */
 r8a7743_SCIF(1,   0xe6e68000, gic_spi(153)); /* SCIF1 */
@@ -116,6 +118,9 @@ r8a7743_SCIF(5,  0xe6ea8000, gic_spi(23)); /* SCIF3 */
 r8a7743_SCIF(6,  0xe6ee0000, gic_spi(24)); /* SCIF4 */
 r8a7743_SCIF(7,  0xe6ee8000, gic_spi(25)); /* SCIF5 */
 r8a7743_HSCIF(8, 0xe62d0000, gic_spi(21)); /* HSCIF2 */
+r8a7743_SCIFB(9,  0xe6c20000, gic_spi(148)); /* SCIFB0 */
+r8a7743_SCIFB(10,  0xe6c30000, gic_spi(149)); /* SCIFB1 */
+r8a7743_SCIFB(11,  0xe6ce0000, gic_spi(150)); /* SCIFB2 */
 
 #define r8a7743_register_scif(index)					       \
 	platform_device_register_resndata(&platform_bus, "sh-sci", index,      \
@@ -264,6 +264,9 @@ void __init r8a7743_add_standard_devices(void)
 	r8a7743_register_scif(6);
 	r8a7743_register_scif(7);
 	r8a7743_register_scif(8);
+	r8a7743_register_scif(9);
+	r8a7743_register_scif(10);
+	r8a7743_register_scif(11);
 
 	r8a7743_add_dt_devices();
 	r8a7743_register_irqc(0);
diff --git a/drivers/pinctrl/sh-pfc/pfc-r8a7743.c b/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
index c167352..4f740ad 100644
--- a/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
+++ b/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
@@ -123,18 +123,18 @@ enum {
 	FN_A13, FN_ATAG0_N_C, FN_MSIOF1_SS1_D,
 	FN_A14, FN_ATADIR0_N_C, FN_MSIOF1_SYNC_D,
 	FN_A15,
-	FN_A16, FN_DREQ2_B,
+	FN_A16, FN_DREQ2_B, FN_SCIFA1_SCK_B,
 	FN_A17, FN_DACK2_B, FN_SDA0_C,
-	FN_A18, FN_DREQ1,
+	FN_A18, FN_DREQ1, FN_SCIFA1_RXD_C, FN_SCIFB1_RXD_C,
 
 	/* IPSR2 */
-	FN_A19, FN_DACK1,
+	FN_A19, FN_DACK1, FN_SCIFA1_TXD_C, FN_SCIFB1_TXD_C, FN_SCIFB1_SCK_B,
 	FN_A20, FN_SPCLK,
 	FN_A21, FN_ATAWR0_N_B, FN_MOSI_IO0,
-	FN_A22, FN_MISO_IO1, FN_TX0,
-	FN_A23, FN_IO2, FN_RX0,
-	FN_A24, FN_DREQ2, FN_IO3, FN_TX1,
-	FN_A25, FN_DACK2, FN_SSL, FN_DREQ1_C, FN_RX1,
+	FN_A22, FN_MISO_IO1, FN_TX0, FN_SCIFA0_TXD,
+	FN_A23, FN_IO2, FN_RX0, FN_SCIFA0_RXD,
+	FN_A24, FN_DREQ2, FN_IO3, FN_TX1, FN_SCIFA1_TXD,
+	FN_A25, FN_DACK2, FN_SSL, FN_DREQ1_C, FN_RX1, FN_SCIFA1_RXD,
 	FN_CS0_N, FN_ATAG0_N_B, FN_SCL1,
 	FN_CS1_N_A26, FN_ATADIR0_N_B, FN_SDA1,
 	FN_EX_CS1_N, FN_MSIOF2_SCK,
@@ -144,23 +144,25 @@ enum {
 	/* IPSR3 */
 	FN_EX_CS4_N, FN_ATARD0_N, FN_MSIOF2_RXD, FN_EX_WAIT2,
 	FN_EX_CS5_N, FN_ATACS00_N, FN_MSIOF2_SS1, FN_HRX1_B,
-	FN_PWM1, FN_TPU_TO1,
-	FN_BS_N, FN_ATACS10_N, FN_MSIOF2_SS2, FN_HTX1_B, FN_PWM2, FN_TPU_TO2,
-	FN_RD_WR_N, FN_HRX2_B, FN_DREQ1_D,
-	FN_WE0_N, FN_HCTS2_N_B,
-	FN_WE1_N, FN_ATARD0_N_B, FN_HTX2_B,
-	FN_EX_WAIT0, FN_HRTS2_N_B,
+	FN_SCIFB1_RXD_B, FN_PWM1, FN_TPU_TO1,
+	FN_BS_N, FN_ATACS10_N, FN_MSIOF2_SS2, FN_HTX1_B,
+	FN_SCIFB1_TXD_B, FN_PWM2, FN_TPU_TO2,
+	FN_RD_WR_N, FN_HRX2_B, FN_SCIFB0_RXD_B, FN_DREQ1_D,
+	FN_WE0_N, FN_HCTS2_N_B, FN_SCIFB0_TXD_B,
+	FN_WE1_N, FN_ATARD0_N_B, FN_HTX2_B, FN_SCIFB0_RTS_N_B,
+	FN_EX_WAIT0, FN_HRTS2_N_B, FN_SCIFB0_CTS_N_B,
 	FN_DREQ0, FN_PWM3, FN_TPU_TO3,
 	FN_DACK0, FN_DRACK0,
-	FN_HSCK0_C, FN_HSCK2_C, FN_DREQ2_C, FN_HTX2_D,
-	FN_SSI_SCK0129, FN_HRX0_C, FN_HRX2_C,
-	FN_SSI_WS0129, FN_HTX0_C, FN_HTX2_C,
+	FN_HSCK0_C, FN_HSCK2_C, FN_SCIFB0_SCK_B, FN_SCIFB2_SCK_B,
+	FN_DREQ2_C, FN_HTX2_D,
+	FN_SSI_SCK0129, FN_HRX0_C, FN_HRX2_C, FN_SCIFB0_RXD_C, FN_SCIFB2_RXD_C,
+	FN_SSI_WS0129, FN_HTX0_C, FN_HTX2_C, FN_SCIFB0_TXD_C, FN_SCIFB2_TXD_C,
 
 	/* IPSR4 */
-	FN_SSI_SDATA0, FN_SCL0_B, FN_MSIOF2_SCK_C,
-	FN_SSI_SCK1, FN_SDA0_B, FN_MSIOF2_SYNC_C,
-	FN_SSI_WS1, FN_SCL1_B, FN_MSIOF2_TXD_C,
-	FN_SSI_SDATA1, FN_SDA1_B, FN_MSIOF2_RXD_C,
+	FN_SSI_SDATA0, FN_SCL0_B, FN_SCL7_B, FN_MSIOF2_SCK_C,
+	FN_SSI_SCK1, FN_SDA0_B, FN_SDA7_B, FN_MSIOF2_SYNC_C,
+	FN_SSI_WS1, FN_SCL1_B, FN_SCL8_B, FN_MSIOF2_TXD_C,
+	FN_SSI_SDATA1, FN_SDA1_B, FN_SDA8_B, FN_MSIOF2_RXD_C,
 	FN_SSI_SCK2, FN_SCL2, FN_HSCK1_E,
 	FN_SSI_WS2, FN_SDA2, FN_RX2_E, FN_HCTS1_N_E,
 	FN_SSI_SDATA2, FN_TX2_E, FN_HRTS1_N_E,
@@ -170,16 +170,19 @@ enum {
 	FN_SSI_SCK4,
 	FN_SSI_WS4,
 	FN_SSI_SDATA4, FN_MSIOF2_SCK_D,
-	FN_SSI_SCK5, FN_MSIOF1_SCK_C, FN_TS_SDATA0,
-	FN_MSIOF2_SYNC_D, FN_VI1_R2_B,
+	FN_SSI_SCK5, FN_MSIOF1_SCK_C, FN_TS_SDATA0, FN_MSIOF2_SYNC_D,
+	FN_VI1_R2_B,
 
 	/* IPSR5 */
-	FN_SSI_WS5, FN_MSIOF1_SYNC_C, FN_TS_SCK0, FN_MSIOF2_TXD_D, FN_VI1_R3_B,
-	FN_SSI_SDATA5, FN_MSIOF1_TXD_C, FN_TS_SDEN0, FN_MSIOF2_SS1_D, FN_VI1_R4_B,
-	FN_SSI_SCK6, FN_MSIOF1_RXD_C, FN_TS_SPSYNC0, FN_MSIOF2_RXD_D, FN_VI1_R5_B,
-	FN_SSI_WS6, FN_GLO_SCLK, FN_MSIOF2_SS2_D, FN_VI1_R6_B,
-	FN_SSI_SDATA6, FN_GLO_SDATA, FN_VI1_R7_B,
-	FN_SSI_SCK78, FN_GLO_SS,
+	FN_SSI_WS5, FN_MSIOF1_SYNC_C, FN_TS_SCK0, FN_MSIOF2_TXD_D,
+	FN_VI1_R3_B,
+	FN_SSI_SDATA5, FN_MSIOF1_TXD_C, FN_TS_SDEN0, FN_MSIOF2_SS1_D,
+	FN_VI1_R4_B,
+	FN_SSI_SCK6, FN_MSIOF1_RXD_C, FN_TS_SPSYNC0, FN_MSIOF2_RXD_D,
+	FN_VI1_R5_B,
+	FN_SSI_WS6, FN_MSIOF2_SS2_D, FN_VI1_R6_B,
+	FN_SSI_SDATA6, FN_VI1_R7_B,
+	FN_SSI_SCK78,
 	FN_SSI_WS78, FN_TX0_D,
 	FN_SSI_SDATA7, FN_RX0_D,
 	FN_SSI_SDATA8, FN_TX1_D,
@@ -189,11 +189,12 @@ enum {
 
 	/* IPSR6 */
 	FN_AUDIO_CLKB, FN_MSIOF1_SCK_B,	FN_SCIF_CLK, FN_DVC_MUTE,
-	FN_AUDIO_CLKC, FN_MSIOF1_SYNC_B, FN_RX2,
-	FN_AUDIO_CLKOUT, FN_MSIOF1_SS1_B, FN_TX2,
-	FN_IRQ0,
-	FN_IRQ1,
-	FN_IRQ2,
+	FN_AUDIO_CLKC, FN_SCIFB0_SCK_C, FN_MSIOF1_SYNC_B, FN_RX2,
+	FN_SCIFA2_RXD,
+	FN_AUDIO_CLKOUT, FN_MSIOF1_SS1_B, FN_TX2, FN_SCIFA2_TXD,
+	FN_IRQ0, FN_SCIFB1_RXD_D,
+	FN_IRQ1, FN_SCIFB1_SCK_C,
+	FN_IRQ2, FN_SCIFB1_TXD_D,
 	FN_IRQ3, FN_SCL4_C, FN_MSIOF2_TXD_E,
 	FN_IRQ4, FN_HRX1_C, FN_SDA4_C, FN_MSIOF2_RXD_E,
 	FN_IRQ5, FN_HTX1_C, FN_SCL1_E, FN_MSIOF2_SCK_E,
@@ -203,34 +203,38 @@ enum {
 
 	/* IPSR7 */
 	FN_IRQ9, FN_DU1_DOTCLKIN_B, FN_CAN_CLK_D, FN_SCIF_CLK_B,
-	FN_DU1_DR0, FN_VI1_DATA0_B, FN_TX0_B, FN_MSIOF2_SCK_B,
-	FN_DU1_DR1, FN_VI1_DATA1_B, FN_RX0_B, FN_MSIOF2_SYNC_B,
+	FN_DU1_DR0, FN_VI1_DATA0_B, FN_TX0_B, FN_SCIFA0_TXD_B, FN_MSIOF2_SCK_B,
+	FN_DU1_DR1, FN_VI1_DATA1_B, FN_RX0_B, FN_SCIFA0_RXD_B, FN_MSIOF2_SYNC_B,
 	FN_DU1_DR2, FN_SSI_SCK0129_B,
 	FN_DU1_DR3, FN_SSI_WS0129_B,
 	FN_DU1_DR4, FN_SSI_SDATA0_B,
 	FN_DU1_DR5, FN_SSI_SCK1_B,
 	FN_DU1_DR6, FN_SSI_WS1_B,
 	FN_DU1_DR7, FN_SSI_SDATA1_B,
-	FN_DU1_DG0, FN_VI1_DATA2_B, FN_TX1_B, FN_MSIOF2_SS1_B,
-	FN_DU1_DG1, FN_VI1_DATA3_B, FN_RX1_B, FN_MSIOF2_SS2_B,
-	FN_DU1_DG2, FN_VI1_DATA4_B, FN_SCIF1_SCK_B, FN_SSI_SCK78_B,
+	FN_DU1_DG0, FN_VI1_DATA2_B, FN_TX1_B, FN_SCIFA1_TXD_B, FN_MSIOF2_SS1_B,
+	FN_DU1_DG1, FN_VI1_DATA3_B, FN_RX1_B, FN_SCIFA1_RXD_B, FN_MSIOF2_SS2_B,
+	FN_DU1_DG2, FN_VI1_DATA4_B, FN_SCIF1_SCK_B, FN_SCIFA1_SCK,
+	FN_SSI_SCK78_B,
 
 	/* IPSR8 */
 	FN_DU1_DG3, FN_VI1_DATA5_B, FN_SSI_WS78_B,
-	FN_DU1_DG4, FN_VI1_DATA6_B, FN_HRX0_B, FN_SSI_SDATA7_B,
-	FN_DU1_DG5, FN_VI1_DATA7_B, FN_HCTS0_N_B, FN_SSI_SDATA8_B,
-	FN_DU1_DG6, FN_HRTS0_N_B,   FN_SSI_SCK9_B,
-	FN_DU1_DG7, FN_HTX0_B, FN_SSI_WS9_B,
-	FN_DU1_DB0, FN_VI1_CLK_B, FN_TX2_B, FN_MSIOF2_TXD_B,
-	FN_DU1_DB1, FN_VI1_HSYNC_N_B, FN_RX2_B, FN_MSIOF2_RXD_B,
-	FN_DU1_DB2, FN_VI1_VSYNC_N_B, FN_SCIF2_SCK_B, FN_SSI_SDATA9_B,
+	FN_DU1_DG4, FN_VI1_DATA6_B, FN_HRX0_B, FN_SCIFB2_RXD_B, FN_SSI_SDATA7_B,
+	FN_DU1_DG5, FN_VI1_DATA7_B, FN_HCTS0_N_B, FN_SCIFB2_TXD_B,
+	FN_SSI_SDATA8_B,
+	FN_DU1_DG6, FN_HRTS0_N_B, FN_SCIFB2_CTS_N_B, FN_SSI_SCK9_B,
+	FN_DU1_DG7, FN_HTX0_B, FN_SCIFB2_RTS_N_B, FN_SSI_WS9_B,
+	FN_DU1_DB0, FN_VI1_CLK_B, FN_TX2_B, FN_SCIFA2_TXD_B, FN_MSIOF2_TXD_B,
+	FN_DU1_DB1, FN_VI1_HSYNC_N_B, FN_RX2_B, FN_SCIFA2_RXD_B,
+	FN_MSIOF2_RXD_B,
+	FN_DU1_DB2, FN_VI1_VSYNC_N_B, FN_SCIF2_SCK_B, FN_SCIFA2_SCK,
+	FN_SSI_SDATA9_B,
 	FN_DU1_DB3, FN_VI1_CLKENB_B,
 	FN_DU1_DB4, FN_VI1_FIELD_B, FN_CAN1_RX,
-	FN_DU1_DB5, FN_TX3, FN_CAN1_TX,
+	FN_DU1_DB5, FN_TX3, FN_SCIFA3_TXD, FN_CAN1_TX,
 
 	/* IPSR9 */
-	FN_DU1_DB6, FN_SCL3_C, FN_RX3,
-	FN_DU1_DB7, FN_SDA3_C, FN_SCIF3_SCK,
+	FN_DU1_DB6, FN_SCL3_C, FN_RX3, FN_SCIFA3_RXD,
+	FN_DU1_DB7, FN_SDA3_C, FN_SCIF3_SCK, FN_SCIFA3_SCK,
 	FN_DU1_DOTCLKIN,
 	FN_DU1_DOTCLKOUT0,
 	FN_DU1_DOTCLKOUT1, FN_CAN0_TX, FN_TX3_B, FN_SCL2_B, FN_PWM4,
@@ -239,19 +239,21 @@ enum {
 	FN_DU1_EXODDF_DU1_ODDF_DISP_CDE, FN_CAN0_RX, FN_RX3_B, FN_SDA2_B,
 	FN_DU1_DISP,
 	FN_DU1_CDE, FN_PWM4_B,
-	FN_VI0_CLKENB, FN_TX4, FN_TS_SDATA0_D,
-	FN_VI0_FIELD, FN_RX4, FN_TS_SCK0_D,
-	FN_VI0_HSYNC_N, FN_TX5, FN_TS_SDEN0_D,
-	FN_VI0_VSYNC_N, FN_RX5, FN_TS_SPSYNC0_D,
-	FN_VI0_DATA3_VI0_B3, FN_SCIF3_SCK_B,
-	FN_VI0_G0, FN_SCL4, FN_HCTS2_N, FN_ATAWR1_N,
+	FN_VI0_CLKENB, FN_TX4, FN_SCIFA4_TXD, FN_TS_SDATA0_D,
+	FN_VI0_FIELD, FN_RX4, FN_SCIFA4_RXD, FN_TS_SCK0_D,
+	FN_VI0_HSYNC_N, FN_TX5, FN_SCIFA5_TXD, FN_TS_SDEN0_D,
+	FN_VI0_VSYNC_N, FN_RX5, FN_SCIFA5_RXD, FN_TS_SPSYNC0_D,
+	FN_VI0_DATA3_VI0_B3, FN_SCIF3_SCK_B, FN_SCIFA3_SCK_B,
+	FN_VI0_G0, FN_SCL8, FN_SCL4, FN_HCTS2_N, FN_SCIFB2_CTS_N, FN_ATAWR1_N,
 
 	/* IPSR10 */
-	FN_VI0_G1, FN_SDA4, FN_HRTS2_N, FN_ATADIR1_N,
-	FN_VI0_G2, FN_VI2_HSYNC_N, FN_SCL3_B, FN_HSCK2, FN_ATARD1_N,
-	FN_VI0_G3, FN_VI2_VSYNC_N, FN_SDA3_B, FN_HRX2, FN_ATACS01_N,
-	FN_VI0_G4, FN_VI2_CLKENB, FN_HTX2,
-	FN_VI0_G5, FN_VI2_FIELD, FN_CAN0_TX_E, FN_HTX1_D,
+	FN_VI0_G1, FN_SDA8, FN_SDA4, FN_HRTS2_N, FN_SCIFB2_RTS_N, FN_ATADIR1_N,
+	FN_VI0_G2, FN_VI2_HSYNC_N, FN_SCL3_B, FN_HSCK2, FN_SCIFB2_SCK,
+	FN_ATARD1_N,
+	FN_VI0_G3, FN_VI2_VSYNC_N, FN_SDA3_B, FN_HRX2, FN_SCIFB2_RXD,
+	FN_ATACS01_N,
+	FN_VI0_G4, FN_VI2_CLKENB, FN_HTX2, FN_SCIFB2_TXD, FN_SCIFB0_SCK_D,
+	FN_VI0_G5, FN_VI2_FIELD, FN_CAN0_TX_E, FN_HTX1_D, FN_SCIFB0_TXD_D,
 	FN_VI0_G6, FN_VI2_CLK,
 	FN_VI0_G7, FN_VI2_DATA0,
 	FN_VI0_R0, FN_VI2_DATA1, FN_TS_SDATA0_C, FN_ATACS11_N,
@@ -264,34 +266,42 @@ enum {
 	FN_VI0_R5, FN_VI2_DATA6, FN_RX0_C, FN_SDA1_D,
 	FN_VI0_R6, FN_VI2_DATA7, FN_TX1_C, FN_SCL4_B,
 	FN_VI0_R7, FN_RX1_C, FN_CAN0_RX_E, FN_SDA4_B, FN_HRX1_D,
-	FN_VI1_HSYNC_N, FN_AVB_RXD0, FN_TS_SDATA0_B, FN_TX4_B,
-	FN_VI1_VSYNC_N, FN_AVB_RXD1, FN_TS_SCK0_B, FN_RX4_B,
+	FN_SCIFB0_RXD_D,
+	FN_VI1_HSYNC_N, FN_AVB_RXD0, FN_TS_SDATA0_B, FN_TX4_B, FN_SCIFA4_TXD_B,
+	FN_VI1_VSYNC_N, FN_AVB_RXD1, FN_TS_SCK0_B, FN_RX4_B, FN_SCIFA4_RXD_B,
 	FN_VI1_CLKENB, FN_AVB_RXD2, FN_TS_SDEN0_B,
 	FN_VI1_FIELD, FN_AVB_RXD3, FN_TS_SPSYNC0_B,
-	FN_VI1_CLK, FN_AVB_RXD4, FN_VI1_DATA0, FN_AVB_RXD5,
-	FN_VI1_DATA1, FN_AVB_RXD6, FN_VI1_DATA2, FN_AVB_RXD7,
-	FN_VI1_DATA3, FN_AVB_RX_ER, FN_VI1_DATA4, FN_AVB_MDIO,
-	FN_VI1_DATA5, FN_AVB_RX_DV, FN_VI1_DATA6, FN_AVB_MAGIC,
+	FN_VI1_CLK, FN_AVB_RXD4,
+	FN_VI1_DATA0, FN_AVB_RXD5,
+	FN_VI1_DATA1, FN_AVB_RXD6,
+	FN_VI1_DATA2, FN_AVB_RXD7,
+	FN_VI1_DATA3, FN_AVB_RX_ER,
+	FN_VI1_DATA4, FN_AVB_MDIO,
+	FN_VI1_DATA5, FN_AVB_RX_DV,
+	FN_VI1_DATA6, FN_AVB_MAGIC,
 	FN_VI1_DATA7, FN_AVB_MDC,
 	FN_ETH_MDIO, FN_AVB_RX_CLK, FN_SCL2_C,
 	FN_ETH_CRS_DV, FN_AVB_LINK, FN_SDA2_C,
 
 	/* IPSR12 */
-	FN_ETH_RX_ER, FN_AVB_CRS, FN_SCL3,
-	FN_ETH_RXD0, FN_AVB_PHY_INT, FN_SDA3,
-	FN_ETH_RXD1, FN_AVB_GTXREFCLK, FN_CAN0_TX_C, FN_SCL2_D, FN_MSIOF1_RXD_E,
+	FN_ETH_RX_ER, FN_AVB_CRS, FN_SCL3, FN_SCL7,
+	FN_ETH_RXD0, FN_AVB_PHY_INT, FN_SDA3, FN_SDA7,
+	FN_ETH_RXD1, FN_AVB_GTXREFCLK, FN_CAN0_TX_C,
+	FN_SCL2_D, FN_MSIOF1_RXD_E,
 	FN_ETH_LINK, FN_AVB_TXD0, FN_CAN0_RX_C, FN_SDA2_D, FN_MSIOF1_SCK_E,
-	FN_ETH_REFCLK, FN_AVB_TXD1, FN_CAN1_RX_C, FN_MSIOF1_SYNC_E,
-	FN_ETH_TXD1, FN_AVB_TXD2, FN_CAN1_TX_C, FN_MSIOF1_TXD_E,
+	FN_ETH_REFCLK, FN_AVB_TXD1, FN_SCIFA3_RXD_B,
+	FN_CAN1_RX_C, FN_MSIOF1_SYNC_E,
+	FN_ETH_TXD1, FN_AVB_TXD2, FN_SCIFA3_TXD_B,
+	FN_CAN1_TX_C, FN_MSIOF1_TXD_E,
 	FN_ETH_TX_EN, FN_AVB_TXD3, FN_TCLK1_B, FN_CAN_CLK_B,
 	FN_ETH_MAGIC, FN_AVB_TXD4,
 	FN_ETH_TXD0, FN_AVB_TXD5,
 	FN_ETH_MDC, FN_AVB_TXD6,
-	FN_AVB_TXD7, FN_MSIOF0_SYNC_C,
-	FN_AVB_TX_EN, FN_MSIOF0_SCK_C,
+	FN_AVB_TXD7, FN_SCIFB2_TXD_D, FN_MSIOF0_SYNC_C,
+	FN_AVB_TX_EN, FN_SCIFB2_RXD_D, FN_MSIOF0_SCK_C,
 
 	/* IPSR13 */
-	FN_AVB_TX_ER, FN_MSIOF0_SS1_C,
+	FN_AVB_TX_ER, FN_SCIFB2_SCK_C, FN_MSIOF0_SS1_C,
 	FN_AVB_TX_CLK, FN_MSIOF0_SS2_C,
 	FN_AVB_COL, FN_MSIOF0_RXD_C,
 	FN_AVB_GTX_CLK, FN_PWM0_B, FN_MSIOF0_TXD_C,
@@ -301,52 +311,62 @@ enum {
 	FN_SD0_DATA1, FN_IO2_B,
 	FN_SD0_DATA2, FN_IO3_B,
 	FN_SD0_DATA3, FN_SSL_B,
-	FN_SD0_CD, FN_MMC_D6_B, FN_CAN0_RX_F, FN_TX3_C,
-	FN_SD0_WP, FN_MMC_D7_B, FN_CAN0_TX_F, FN_RX3_C,
-	FN_SD1_CMD, FN_SD1_DATA0,
-	FN_SD1_DATA1, FN_SD1_DATA2,
+	FN_SD0_CD, FN_MMC_D6_B, FN_CAN0_RX_F, FN_SCIFA5_TXD_B, FN_TX3_C,
+	FN_SD0_WP, FN_MMC_D7_B, FN_CAN0_TX_F, FN_SCIFA5_RXD_B, FN_RX3_C,
+	FN_SD1_CMD,
+	FN_SD1_DATA0,
+	FN_SD1_DATA1,
+	FN_SD1_DATA2,
 	FN_SD1_DATA3,
 	FN_SD1_CD, FN_PWM0, FN_TPU_TO0, FN_SCL1_C,
 
 	/* IPSR14 */
 	FN_SD1_WP, FN_PWM1_B, FN_SDA1_C,
-	FN_SD2_CLK, FN_MMC_CLK, FN_SD2_CMD, FN_MMC_CMD,
+	FN_SD2_CLK, FN_MMC_CLK,
+	FN_SD2_CMD, FN_MMC_CMD,
 	FN_SD2_DATA0, FN_MMC_D0,
 	FN_SD2_DATA1, FN_MMC_D1,
 	FN_SD2_DATA2, FN_MMC_D2,
 	FN_SD2_DATA3, FN_MMC_D3,
-	FN_SD2_CD, FN_MMC_D4, FN_TX5_B,
-	FN_SD2_WP, FN_MMC_D5, FN_RX5_B,
+	FN_SD2_CD, FN_MMC_D4, FN_SCL8_C, FN_TX5_B, FN_SCIFA5_TXD_C,
+	FN_SD2_WP, FN_MMC_D5, FN_SDA8_C, FN_RX5_B, FN_SCIFA5_RXD_C,
 	FN_MSIOF0_SCK, FN_RX2_C, FN_VI1_CLK_C, FN_VI1_G0_B,
 	FN_MSIOF0_SYNC, FN_TX2_C, FN_VI1_CLKENB_C, FN_VI1_G1_B,
 	FN_MSIOF0_TXD, FN_VI1_FIELD_C, FN_VI1_G2_B,
 	FN_MSIOF0_RXD, FN_VI1_DATA0_C, FN_VI1_G3_B,
-	FN_MSIOF0_SS1, FN_MMC_D6, FN_TX0_E, FN_VI1_HSYNC_N_C, FN_VI1_G4_B,
-	FN_MSIOF0_SS2, FN_MMC_D7, FN_RX0_E, FN_VI1_VSYNC_N_C, FN_VI1_G5_B,
+	FN_MSIOF0_SS1, FN_MMC_D6, FN_TX0_E, FN_VI1_HSYNC_N_C,
+	FN_SCL7_C, FN_VI1_G4_B,
+	FN_MSIOF0_SS2, FN_MMC_D7, FN_RX0_E, FN_VI1_VSYNC_N_C,
+	FN_SDA7_C, FN_VI1_G5_B,
 
 	/* IPSR15 */
 	FN_CAN1_TX_D,
 	FN_CAN_CLK_C,
 	FN_CAN1_RX_D,
-	FN_DU1_DOTCLKIN_C, FN_AUDIO_CLKB_B, FN_PWM5_B,
-	FN_TX4_C, FN_PWM5, FN_VI1_G6_B,
-	FN_RX4_C, FN_PWM6, FN_VI1_G7_B,
-	FN_HCTS0_N, FN_TCLK1, FN_VI1_DATA1_C,
-	FN_HRTS0_N, FN_VI1_DATA2_C,
-	FN_HSCK0, FN_CAN_CLK, FN_TCLK2, FN_VI1_DATA3_C,
-	FN_HRX0, FN_CAN0_RX_B, FN_VI1_DATA4_C,
-	FN_HTX0, FN_CAN0_TX_B, FN_VI1_DATA5_C,
+	FN_DU1_DOTCLKIN_C, FN_AUDIO_CLKB_B, FN_PWM5_B, FN_SCIFA3_TXD_C,
+	FN_TX4_C, FN_SCIFA4_TXD_C, FN_PWM5, FN_VI1_G6_B, FN_SCIFA3_RXD_C,
+	FN_RX4_C, FN_SCIFA4_RXD_C, FN_PWM6, FN_VI1_G7_B, FN_SCIFA3_SCK_C,
+	FN_HCTS0_N, FN_SCIFB0_CTS_N, FN_TCLK1, FN_VI1_DATA1_C,
+	FN_HRTS0_N, FN_SCIFB0_RTS_N, FN_VI1_DATA2_C,
+	FN_HSCK0, FN_SCIFB0_SCK, FN_CAN_CLK, FN_TCLK2, FN_VI1_DATA3_C,
+	FN_HRX0, FN_SCIFB0_RXD, FN_CAN0_RX_B, FN_VI1_DATA4_C,
+	FN_HTX0, FN_SCIFB0_TXD, FN_CAN0_TX_B, FN_VI1_DATA5_C,
 
 	/* IPSR16 */
-	FN_HRX1, FN_VI1_R0_B, FN_VI1_DATA6_C,
-	FN_HTX1, FN_VI1_R1_B, FN_VI1_DATA7_C,
-	FN_HSCK1,
-	FN_HCTS1_N, FN_CAN1_TX_B,
-	FN_HRTS1_N, FN_CAN1_RX_B,
+	FN_HRX1, FN_SCIFB1_RXD, FN_VI1_R0_B, FN_VI1_DATA6_C,
+	FN_HTX1, FN_SCIFB1_TXD, FN_VI1_R1_B, FN_VI1_DATA7_C,
+	FN_HSCK1, FN_SCIFB1_SCK,
+	FN_HCTS1_N, FN_SCIFB1_CTS_N, FN_CAN1_TX_B,
+	FN_HRTS1_N, FN_SCIFB1_RTS_N, FN_CAN1_RX_B,
 
 	/* MOD_SEL */
 	FN_SEL_SCIF1_0, FN_SEL_SCIF1_1, FN_SEL_SCIF1_2, FN_SEL_SCIF1_3,
+	FN_SEL_SCIFB_0, FN_SEL_SCIFB_1, FN_SEL_SCIFB_2, FN_SEL_SCIFB_3,
+	FN_SEL_SCIFB2_0, FN_SEL_SCIFB2_1, FN_SEL_SCIFB2_2, FN_SEL_SCIFB2_3,
+	FN_SEL_SCIFB1_0, FN_SEL_SCIFB1_1, FN_SEL_SCIFB1_2, FN_SEL_SCIFB1_3,
+	FN_SEL_SCIFA1_0, FN_SEL_SCIFA1_1, FN_SEL_SCIFA1_2,
 	FN_SEL_SSI9_0, FN_SEL_SSI9_1,
+	FN_SEL_SCFA_0, FN_SEL_SCFA_1,
 	FN_SEL_QSP_0, FN_SEL_QSP_1,
 	FN_SEL_SSI7_0, FN_SEL_SSI7_1,
 	FN_SEL_HSCIF1_0, FN_SEL_HSCIF1_1, FN_SEL_HSCIF1_2, FN_SEL_HSCIF1_3,
@@ -364,13 +384,19 @@ enum {
 	FN_SEL_CAN0_0, FN_SEL_CAN0_1, FN_SEL_CAN0_2, FN_SEL_CAN0_3,
 	FN_SEL_CAN0_4, FN_SEL_CAN0_5,
 	FN_SEL_CAN1_0, FN_SEL_CAN1_1, FN_SEL_CAN1_2, FN_SEL_CAN1_3,
+	FN_SEL_SCIFA2_0, FN_SEL_SCIFA2_1,
 	FN_SEL_SCIF4_0, FN_SEL_SCIF4_1, FN_SEL_SCIF4_2,
 	FN_SEL_ADG_0, FN_SEL_ADG_1,
+	FN_SEL_SCIFA5_0, FN_SEL_SCIFA5_1, FN_SEL_SCIFA5_2,
+	FN_SEL_SCIFA4_0, FN_SEL_SCIFA4_1, FN_SEL_SCIFA4_2,
+	FN_SEL_SCIFA3_0, FN_SEL_SCIFA3_1, FN_SEL_SCIFA3_2,
 	FN_SEL_SSI8_0, FN_SEL_SSI8_1,
 
 	/* MOD_SEL3 */
 	FN_SEL_HSCIF2_0, FN_SEL_HSCIF2_1, FN_SEL_HSCIF2_2, FN_SEL_HSCIF2_3,
 	FN_SEL_CANCLK_0, FN_SEL_CANCLK_1, FN_SEL_CANCLK_2, FN_SEL_CANCLK_3,
+	FN_SEL_IIC8_0, FN_SEL_IIC8_1, FN_SEL_IIC8_2,
+	FN_SEL_IIC7_0, FN_SEL_IIC7_1, FN_SEL_IIC7_2,
 	FN_SEL_IIC4_0, FN_SEL_IIC4_1, FN_SEL_IIC4_2,
 	FN_SEL_IIC3_0, FN_SEL_IIC3_1, FN_SEL_IIC3_2, FN_SEL_IIC3_3,
 	FN_SEL_SCIF3_0, FN_SEL_SCIF3_1, FN_SEL_SCIF3_2, FN_SEL_SCIF3_3,
@@ -431,18 +457,20 @@ enum {
 	A13_MARK, ATAG0_N_C_MARK, MSIOF1_SS1_D_MARK,
 	A14_MARK, ATADIR0_N_C_MARK, MSIOF1_SYNC_D_MARK,
 	A15_MARK,
-	A16_MARK, DREQ2_B_MARK,
+	A16_MARK, DREQ2_B_MARK, SCIFA1_SCK_B_MARK,
 	A17_MARK, DACK2_B_MARK, SDA0_C_MARK,
-	A18_MARK, DREQ1_MARK,
+	A18_MARK, DREQ1_MARK, SCIFA1_RXD_C_MARK, SCIFB1_RXD_C_MARK,
 
 	/* IPSR2 */
-	A19_MARK, DACK1_MARK,
+	A19_MARK, DACK1_MARK, SCIFA1_TXD_C_MARK,
+		SCIFB1_TXD_C_MARK, SCIFB1_SCK_B_MARK,
 	A20_MARK, SPCLK_MARK,
 	A21_MARK, ATAWR0_N_B_MARK, MOSI_IO0_MARK,
-	A22_MARK, MISO_IO1_MARK, TX0_MARK,
-	A23_MARK, IO2_MARK, RX0_MARK,
-	A24_MARK, DREQ2_MARK, IO3_MARK, TX1_MARK,
-	A25_MARK, DACK2_MARK, SSL_MARK, DREQ1_C_MARK, RX1_MARK,
+	A22_MARK, MISO_IO1_MARK, TX0_MARK, SCIFA0_TXD_MARK,
+	A23_MARK, IO2_MARK, RX0_MARK, SCIFA0_RXD_MARK,
+	A24_MARK, DREQ2_MARK, IO3_MARK, TX1_MARK, SCIFA1_TXD_MARK,
+	A25_MARK, DACK2_MARK, SSL_MARK, DREQ1_C_MARK,
+		RX1_MARK, SCIFA1_RXD_MARK,
 	CS0_N_MARK, ATAG0_N_B_MARK, SCL1_MARK,
 	CS1_N_A26_MARK, ATADIR0_N_B_MARK, SDA1_MARK,
 	EX_CS1_N_MARK, MSIOF2_SCK_MARK,
@@ -452,24 +480,29 @@ enum {
 
 	/* IPSR3 */
 	EX_CS4_N_MARK, ATARD0_N_MARK, MSIOF2_RXD_MARK, EX_WAIT2_MARK,
-	EX_CS5_N_MARK, ATACS00_N_MARK, MSIOF2_SS1_MARK, HRX1_B_MARK, PWM1_MARK, TPU_TO1_MARK,
+	EX_CS5_N_MARK, ATACS00_N_MARK, MSIOF2_SS1_MARK, HRX1_B_MARK,
+		SCIFB1_RXD_B_MARK, PWM1_MARK, TPU_TO1_MARK,
 	BS_N_MARK, ATACS10_N_MARK, MSIOF2_SS2_MARK, HTX1_B_MARK,
-	PWM2_MARK, TPU_TO2_MARK,
-	RD_WR_N_MARK, HRX2_B_MARK, DREQ1_D_MARK,
-	WE0_N_MARK, HCTS2_N_B_MARK,
-	WE1_N_MARK, ATARD0_N_B_MARK, HTX2_B_MARK,
-	EX_WAIT0_MARK, HRTS2_N_B_MARK,
+		SCIFB1_TXD_B_MARK, PWM2_MARK, TPU_TO2_MARK,
+	RD_WR_N_MARK, HRX2_B_MARK, SCIFB0_RXD_B_MARK, DREQ1_D_MARK,
+	WE0_N_MARK, HCTS2_N_B_MARK, SCIFB0_TXD_B_MARK,
+	WE1_N_MARK, ATARD0_N_B_MARK, HTX2_B_MARK, SCIFB0_RTS_N_B_MARK,
+	EX_WAIT0_MARK, HRTS2_N_B_MARK, SCIFB0_CTS_N_B_MARK,
 	DREQ0_MARK, PWM3_MARK, TPU_TO3_MARK,
 	DACK0_MARK, DRACK0_MARK,
-	HSCK0_C_MARK, HSCK2_C_MARK, DREQ2_C_MARK, HTX2_D_MARK,
-	SSI_SCK0129_MARK, HRX0_C_MARK, HRX2_C_MARK,
-	SSI_WS0129_MARK, HTX0_C_MARK, HTX2_C_MARK,
+	HSCK0_C_MARK, HSCK2_C_MARK, SCIFB0_SCK_B_MARK, 	SCIFB2_SCK_B_MARK,
+		DREQ2_C_MARK, HTX2_D_MARK,
+	SSI_SCK0129_MARK, HRX0_C_MARK, HRX2_C_MARK, SCIFB0_RXD_C_MARK,
+		SCIFB2_RXD_C_MARK,
+	SSI_WS0129_MARK, HTX0_C_MARK, HTX2_C_MARK, SCIFB0_TXD_C_MARK,
+		SCIFB2_TXD_C_MARK,
+
 
 	/* IPSR4 */
-	SSI_SDATA0_MARK, SCL0_B_MARK, MSIOF2_SCK_C_MARK,
-	SSI_SCK1_MARK, SDA0_B_MARK, MSIOF2_SYNC_C_MARK,
-	SSI_WS1_MARK, SCL1_B_MARK, MSIOF2_TXD_C_MARK,
-	SSI_SDATA1_MARK, SDA1_B_MARK,  MSIOF2_RXD_C_MARK,
+	SSI_SDATA0_MARK, SCL0_B_MARK, SCL7_B_MARK, MSIOF2_SCK_C_MARK,
+	SSI_SCK1_MARK, SDA0_B_MARK, SDA7_B_MARK, MSIOF2_SYNC_C_MARK,
+	SSI_WS1_MARK, SCL1_B_MARK, SCL8_B_MARK, MSIOF2_TXD_C_MARK,
+	SSI_SDATA1_MARK, SDA1_B_MARK, SDA8_B_MARK, MSIOF2_RXD_C_MARK,
 	SSI_SCK2_MARK, SCL2_MARK, HSCK1_E_MARK,
 	SSI_WS2_MARK, SDA2_MARK, RX2_E_MARK, HCTS1_N_E_MARK,
 	SSI_SDATA2_MARK, TX2_E_MARK, HRTS1_N_E_MARK,
@@ -479,15 +479,19 @@ enum {
 	SSI_SCK4_MARK,
 	SSI_WS4_MARK,
 	SSI_SDATA4_MARK, MSIOF2_SCK_D_MARK,
-	SSI_SCK5_MARK, MSIOF1_SCK_C_MARK, TS_SDATA0_MARK, MSIOF2_SYNC_D_MARK, VI1_R2_B_MARK,
+	SSI_SCK5_MARK, MSIOF1_SCK_C_MARK, TS_SDATA0_MARK, MSIOF2_SYNC_D_MARK,
+		VI1_R2_B_MARK,
 
 	/* IPSR5 */
-	SSI_WS5_MARK, MSIOF1_SYNC_C_MARK, TS_SCK0_MARK, MSIOF2_TXD_D_MARK, VI1_R3_B_MARK,
-	SSI_SDATA5_MARK, MSIOF1_TXD_C_MARK, TS_SDEN0_MARK, MSIOF2_SS1_D_MARK, VI1_R4_B_MARK,
-	SSI_SCK6_MARK, MSIOF1_RXD_C_MARK, TS_SPSYNC0_MARK, MSIOF2_RXD_D_MARK, VI1_R5_B_MARK,
-	SSI_WS6_MARK, GLO_SCLK_MARK, MSIOF2_SS2_D_MARK, VI1_R6_B_MARK,
-	SSI_SDATA6_MARK, GLO_SDATA_MARK, VI1_R7_B_MARK,
-	SSI_SCK78_MARK, GLO_SS_MARK,
+	SSI_WS5_MARK, MSIOF1_SYNC_C_MARK, TS_SCK0_MARK, MSIOF2_TXD_D_MARK,
+		VI1_R3_B_MARK,
+	SSI_SDATA5_MARK, MSIOF1_TXD_C_MARK, TS_SDEN0_MARK, MSIOF2_SS1_D_MARK,
+		VI1_R4_B_MARK,
+	SSI_SCK6_MARK, MSIOF1_RXD_C_MARK, TS_SPSYNC0_MARK, MSIOF2_RXD_D_MARK,
+		VI1_R5_B_MARK,
+	SSI_WS6_MARK, MSIOF2_SS2_D_MARK, VI1_R6_B_MARK,
+	SSI_SDATA6_MARK, VI1_R7_B_MARK,
+	SSI_SCK78_MARK,
 	SSI_WS78_MARK, TX0_D_MARK,
 	SSI_SDATA7_MARK, RX0_D_MARK,
 	SSI_SDATA8_MARK, TX1_D_MARK,
@@ -496,71 +500,89 @@ enum {
 	SSI_SDATA9_MARK, RX3_D_MARK, CAN0_RX_D_MARK,
 
 	/* IPSR6 */
-	AUDIO_CLKB_MARK, MSIOF1_SCK_B_MARK, SCIF_CLK_MARK,
-	AUDIO_CLKC_MARK, MSIOF1_SYNC_B_MARK, RX2_MARK,
-	AUDIO_CLKOUT_MARK, MSIOF1_SS1_B_MARK, TX2_MARK,
-	IRQ0_MARK,
-	IRQ1_MARK,
-	IRQ2_MARK,
+	AUDIO_CLKB_MARK, MSIOF1_SCK_B_MARK, SCIF_CLK_MARK, DVC_MUTE_MARK,
+	AUDIO_CLKC_MARK, SCIFB0_SCK_C_MARK, MSIOF1_SYNC_B_MARK, RX2_MARK,
+		SCIFA2_RXD_MARK,
+	AUDIO_CLKOUT_MARK, MSIOF1_SS1_B_MARK, TX2_MARK, SCIFA2_TXD_MARK,
+	IRQ0_MARK, SCIFB1_RXD_D_MARK,
+	IRQ1_MARK, SCIFB1_SCK_C_MARK,
+	IRQ2_MARK, SCIFB1_TXD_D_MARK,
 	IRQ3_MARK, SCL4_C_MARK, MSIOF2_TXD_E_MARK,
 	IRQ4_MARK, HRX1_C_MARK, SDA4_C_MARK, MSIOF2_RXD_E_MARK,
 	IRQ5_MARK, HTX1_C_MARK, SCL1_E_MARK, MSIOF2_SCK_E_MARK,
-	IRQ6_MARK, HSCK1_C_MARK, MSIOF1_SS2_B_MARK, SDA1_E_MARK, MSIOF2_SYNC_E_MARK,
+	IRQ6_MARK, HSCK1_C_MARK, MSIOF1_SS2_B_MARK,
+		SDA1_E_MARK, MSIOF2_SYNC_E_MARK,
 	IRQ7_MARK, HCTS1_N_C_MARK, MSIOF1_TXD_B_MARK,
 	IRQ8_MARK, HRTS1_N_C_MARK, MSIOF1_RXD_B_MARK,
 
 	/* IPSR7 */
 	IRQ9_MARK, DU1_DOTCLKIN_B_MARK, CAN_CLK_D_MARK, SCIF_CLK_B_MARK,
-	DU1_DR0_MARK, VI1_DATA0_B_MARK, TX0_B_MARK, MSIOF2_SCK_B_MARK,
-	DU1_DR1_MARK, VI1_DATA1_B_MARK, RX0_B_MARK, MSIOF2_SYNC_B_MARK,
+	DU1_DR0_MARK, VI1_DATA0_B_MARK, TX0_B_MARK, SCIFA0_TXD_B_MARK,
+		MSIOF2_SCK_B_MARK,
+	DU1_DR1_MARK, VI1_DATA1_B_MARK, RX0_B_MARK, SCIFA0_RXD_B_MARK,
+		MSIOF2_SYNC_B_MARK,
 	DU1_DR2_MARK, SSI_SCK0129_B_MARK,
 	DU1_DR3_MARK, SSI_WS0129_B_MARK,
 	DU1_DR4_MARK, SSI_SDATA0_B_MARK,
 	DU1_DR5_MARK, SSI_SCK1_B_MARK,
 	DU1_DR6_MARK, SSI_WS1_B_MARK,
 	DU1_DR7_MARK, SSI_SDATA1_B_MARK,
-	DU1_DG0_MARK, VI1_DATA2_B_MARK, TX1_B_MARK, MSIOF2_SS1_B_MARK,
-	DU1_DG1_MARK, VI1_DATA3_B_MARK, RX1_B_MARK, MSIOF2_SS2_B_MARK,
-	DU1_DG2_MARK, VI1_DATA4_B_MARK, SCIF1_SCK_B_MARK, SSI_SCK78_B_MARK,
+	DU1_DG0_MARK, VI1_DATA2_B_MARK, TX1_B_MARK, SCIFA1_TXD_B_MARK,
+		MSIOF2_SS1_B_MARK,
+	DU1_DG1_MARK, VI1_DATA3_B_MARK, RX1_B_MARK, SCIFA1_RXD_B_MARK,
+		MSIOF2_SS2_B_MARK,
+	DU1_DG2_MARK, VI1_DATA4_B_MARK, SCIF1_SCK_B_MARK, SCIFA1_SCK_MARK,
+		SSI_SCK78_B_MARK,
 
 	/* IPSR8 */
 	DU1_DG3_MARK, VI1_DATA5_B_MARK, SSI_WS78_B_MARK,
-	DU1_DG4_MARK, VI1_DATA6_B_MARK, HRX0_B_MARK, SSI_SDATA7_B_MARK,
-	DU1_DG5_MARK, VI1_DATA7_B_MARK, HCTS0_N_B_MARK, SSI_SDATA8_B_MARK,
-	DU1_DG6_MARK, HRTS0_N_B_MARK, SSI_SCK9_B_MARK,
-	DU1_DG7_MARK, HTX0_B_MARK, SSI_WS9_B_MARK,
-	DU1_DB0_MARK, VI1_CLK_B_MARK, TX2_B_MARK, MSIOF2_TXD_B_MARK,
-	DU1_DB1_MARK, VI1_HSYNC_N_B_MARK, RX2_B_MARK, MSIOF2_RXD_B_MARK,
-	DU1_DB2_MARK, VI1_VSYNC_N_B_MARK, SCIF2_SCK_B_MARK, SSI_SDATA9_B_MARK,
+	DU1_DG4_MARK, VI1_DATA6_B_MARK, HRX0_B_MARK, SCIFB2_RXD_B_MARK,
+		SSI_SDATA7_B_MARK,
+	DU1_DG5_MARK, VI1_DATA7_B_MARK, HCTS0_N_B_MARK, SCIFB2_TXD_B_MARK,
+		SSI_SDATA8_B_MARK,
+	DU1_DG6_MARK, HRTS0_N_B_MARK, SCIFB2_CTS_N_B_MARK, SSI_SCK9_B_MARK,
+	DU1_DG7_MARK, HTX0_B_MARK, SCIFB2_RTS_N_B_MARK, SSI_WS9_B_MARK,
+	DU1_DB0_MARK, VI1_CLK_B_MARK, TX2_B_MARK, SCIFA2_TXD_B_MARK,
+		MSIOF2_TXD_B_MARK,
+	DU1_DB1_MARK, VI1_HSYNC_N_B_MARK, RX2_B_MARK, SCIFA2_RXD_B_MARK,
+		MSIOF2_RXD_B_MARK,
+	DU1_DB2_MARK, VI1_VSYNC_N_B_MARK, SCIF2_SCK_B_MARK, SCIFA2_SCK_MARK,
+		SSI_SDATA9_B_MARK,
 	DU1_DB3_MARK, VI1_CLKENB_B_MARK,
 	DU1_DB4_MARK, VI1_FIELD_B_MARK, CAN1_RX_MARK,
-	DU1_DB5_MARK, TX3_MARK, CAN1_TX_MARK,
+	DU1_DB5_MARK, TX3_MARK, SCIFA3_TXD_MARK, CAN1_TX_MARK,
 
 	/* IPSR9 */
-	DU1_DB6_MARK, SCL3_C_MARK, RX3_MARK,
-	DU1_DB7_MARK, SDA3_C_MARK, SCIF3_SCK_MARK,
+	DU1_DB6_MARK, SCL3_C_MARK, RX3_MARK, SCIFA3_RXD_MARK,
+	DU1_DB7_MARK, SDA3_C_MARK, SCIF3_SCK_MARK, SCIFA3_SCK_MARK,
 	DU1_DOTCLKIN_MARK,
 	DU1_DOTCLKOUT0_MARK,
 	DU1_DOTCLKOUT1_MARK, CAN0_TX_MARK, TX3_B_MARK, SCL2_B_MARK, PWM4_MARK,
 	DU1_EXHSYNC_DU1_HSYNC_MARK,
 	DU1_EXVSYNC_DU1_VSYNC_MARK,
-	DU1_EXODDF_DU1_ODDF_DISP_CDE_MARK, CAN0_RX_MARK, RX3_B_MARK, SDA2_B_MARK,
+	DU1_EXODDF_DU1_ODDF_DISP_CDE_MARK, CAN0_RX_MARK, RX3_B_MARK,
+		SDA2_B_MARK,
 	DU1_DISP_MARK,
 	DU1_CDE_MARK, PWM4_B_MARK,
-	VI0_CLKENB_MARK, TX4_MARK, TS_SDATA0_D_MARK,
-	VI0_FIELD_MARK, RX4_MARK, TS_SCK0_D_MARK,
-	VI0_HSYNC_N_MARK, TX5_MARK, TS_SDEN0_D_MARK,
-	VI0_VSYNC_N_MARK, RX5_MARK, TS_SPSYNC0_D_MARK,
-	VI0_DATA3_VI0_B3_MARK, SCIF3_SCK_B_MARK,
-	VI0_G0_MARK, SCL4_MARK, HCTS2_N_MARK, ATAWR1_N_MARK,
+	VI0_CLKENB_MARK, TX4_MARK, SCIFA4_TXD_MARK, TS_SDATA0_D_MARK,
+	VI0_FIELD_MARK, RX4_MARK, SCIFA4_RXD_MARK, TS_SCK0_D_MARK,
+	VI0_HSYNC_N_MARK, TX5_MARK, SCIFA5_TXD_MARK, TS_SDEN0_D_MARK,
+	VI0_VSYNC_N_MARK, RX5_MARK, SCIFA5_RXD_MARK, TS_SPSYNC0_D_MARK,
+	VI0_DATA3_VI0_B3_MARK, SCIF3_SCK_B_MARK, SCIFA3_SCK_B_MARK,
+	VI0_G0_MARK, SCL8_MARK, SCL4_MARK, HCTS2_N_MARK, SCIFB2_CTS_N_MARK,
+		ATAWR1_N_MARK,
 
 	/* IPSR10 */
-	VI0_G1_MARK, SDA4_MARK,	HRTS2_N_MARK, ATADIR1_N_MARK,
-	VI0_G2_MARK, VI2_HSYNC_N_MARK, SCL3_B_MARK, HSCK2_MARK, ATARD1_N_MARK,
-	VI0_G3_MARK, VI2_VSYNC_N_MARK, SDA3_B_MARK,
-	HRX2_MARK, ATACS01_N_MARK,
-	VI0_G4_MARK, VI2_CLKENB_MARK, HTX2_MARK,
+	VI0_G1_MARK, SDA8_MARK, SDA4_MARK, HRTS2_N_MARK, SCIFB2_RTS_N_MARK,
+		ATADIR1_N_MARK,
+	VI0_G2_MARK, VI2_HSYNC_N_MARK, SCL3_B_MARK, HSCK2_MARK, SCIFB2_SCK_MARK,
+		HRX2_MARK, ATARD1_N_MARK,
+	VI0_G3_MARK, VI2_VSYNC_N_MARK, SDA3_B_MARK, SCIFB2_RXD_MARK,
+		ATACS01_N_MARK,
+	VI0_G4_MARK, VI2_CLKENB_MARK, HTX2_MARK, SCIFB2_TXD_MARK,
+		SCIFB0_SCK_D_MARK,
 	VI0_G5_MARK, VI2_FIELD_MARK, CAN0_TX_E_MARK, HTX1_D_MARK,
+		SCIFB0_TXD_D_MARK,
 	VI0_G6_MARK, VI2_CLK_MARK,
 	VI0_G7_MARK, VI2_DATA0_MARK,
 	VI0_R0_MARK, VI2_DATA1_MARK, TS_SDATA0_C_MARK, ATACS11_N_MARK,
@@ -573,8 +595,11 @@ enum {
 	VI0_R5_MARK, VI2_DATA6_MARK, RX0_C_MARK, SDA1_D_MARK,
 	VI0_R6_MARK, VI2_DATA7_MARK, TX1_C_MARK, SCL4_B_MARK,
 	VI0_R7_MARK, RX1_C_MARK, CAN0_RX_E_MARK, SDA4_B_MARK, HRX1_D_MARK,
+		SCIFB0_RXD_D_MARK,
 	VI1_HSYNC_N_MARK, AVB_RXD0_MARK, TS_SDATA0_B_MARK, TX4_B_MARK,
+		SCIFA4_TXD_B_MARK,
 	VI1_VSYNC_N_MARK, AVB_RXD1_MARK, TS_SCK0_B_MARK, RX4_B_MARK,
+		SCIFA4_RXD_B_MARK,
 	VI1_CLKENB_MARK, AVB_RXD2_MARK, TS_SDEN0_B_MARK,
 	VI1_FIELD_MARK, AVB_RXD3_MARK, TS_SPSYNC0_B_MARK,
 	VI1_CLK_MARK, AVB_RXD4_MARK,
@@ -590,21 +615,25 @@ enum {
 	ETH_CRS_DV_MARK, AVB_LINK_MARK, SDA2_C_MARK,
 
 	/* IPSR12 */
-	ETH_RX_ER_MARK, AVB_CRS_MARK, SCL3_MARK,
-	ETH_RXD0_MARK, AVB_PHY_INT_MARK, SDA3_MARK,
-	ETH_RXD1_MARK, AVB_GTXREFCLK_MARK, CAN0_TX_C_MARK, SCL2_D_MARK, MSIOF1_RXD_E_MARK,
-	ETH_LINK_MARK, AVB_TXD0_MARK, CAN0_RX_C_MARK, SDA2_D_MARK, MSIOF1_SCK_E_MARK,
-	ETH_REFCLK_MARK, AVB_TXD1_MARK, CAN1_RX_C_MARK, MSIOF1_SYNC_E_MARK,
-	ETH_TXD1_MARK, AVB_TXD2_MARK, CAN1_TX_C_MARK, MSIOF1_TXD_E_MARK,
+	ETH_RX_ER_MARK, AVB_CRS_MARK, SCL3_MARK, SCL7_MARK,
+	ETH_RXD0_MARK, AVB_PHY_INT_MARK, SDA3_MARK, SDA7_MARK,
+	ETH_RXD1_MARK, AVB_GTXREFCLK_MARK, CAN0_TX_C_MARK, SCL2_D_MARK,
+		MSIOF1_RXD_E_MARK,
+	ETH_LINK_MARK, AVB_TXD0_MARK, CAN0_RX_C_MARK, SDA2_D_MARK,
+		MSIOF1_SCK_E_MARK,
+	ETH_REFCLK_MARK, AVB_TXD1_MARK, SCIFA3_RXD_B_MARK,
+		CAN1_RX_C_MARK, MSIOF1_SYNC_E_MARK,
+	ETH_TXD1_MARK, AVB_TXD2_MARK, SCIFA3_TXD_B_MARK,
+		CAN1_TX_C_MARK, MSIOF1_TXD_E_MARK,
 	ETH_TX_EN_MARK, AVB_TXD3_MARK, TCLK1_B_MARK, CAN_CLK_B_MARK,
 	ETH_MAGIC_MARK, AVB_TXD4_MARK,
 	ETH_TXD0_MARK, AVB_TXD5_MARK,
 	ETH_MDC_MARK, AVB_TXD6_MARK,
-	AVB_TXD7_MARK, MSIOF0_SYNC_C_MARK,
-	AVB_TX_EN_MARK, MSIOF0_SCK_C_MARK,
+	AVB_TXD7_MARK, SCIFB2_TXD_D_MARK, MSIOF0_SYNC_C_MARK,
+	AVB_TX_EN_MARK, SCIFB2_RXD_D_MARK, MSIOF0_SCK_C_MARK,
 
 	/* IPSR13 */
-	AVB_TX_ER_MARK, MSIOF0_SS1_C_MARK,
+	AVB_TX_ER_MARK, SCIFB2_SCK_C_MARK, MSIOF0_SS1_C_MARK,
 	AVB_TX_CLK_MARK, MSIOF0_SS2_C_MARK,
 	AVB_COL_MARK, MSIOF0_RXD_C_MARK,
 	AVB_GTX_CLK_MARK, PWM0_B_MARK, MSIOF0_TXD_C_MARK,
@@ -612,9 +641,12 @@ enum {
 	SD0_CMD_MARK, MOSI_IO0_B_MARK,
 	SD0_DATA0_MARK, MISO_IO1_B_MARK,
 	SD0_DATA1_MARK, IO2_B_MARK,
-	SD0_DATA2_MARK, IO3_B_MARK, SD0_DATA3_MARK, SSL_B_MARK,
-	SD0_CD_MARK, MMC_D6_B_MARK, CAN0_RX_F_MARK, TX3_C_MARK,
-	SD0_WP_MARK, MMC_D7_B_MARK, CAN0_TX_F_MARK, RX3_C_MARK,
+	SD0_DATA2_MARK, IO3_B_MARK,
+	SD0_DATA3_MARK, SSL_B_MARK,
+	SD0_CD_MARK, MMC_D6_B_MARK, CAN0_RX_F_MARK, SCIFA5_TXD_B_MARK,
+		TX3_C_MARK,
+	SD0_WP_MARK, MMC_D7_B_MARK, CAN0_TX_F_MARK, SCIFA5_RXD_B_MARK,
+		RX3_C_MARK,
 	SD1_CMD_MARK,
 	SD1_DATA0_MARK,
 	SD1_DATA1_MARK,
@@ -630,34 +662,39 @@ enum {
 	SD2_DATA1_MARK, MMC_D1_MARK,
 	SD2_DATA2_MARK, MMC_D2_MARK,
 	SD2_DATA3_MARK, MMC_D3_MARK,
-	SD2_CD_MARK, MMC_D4_MARK, TX5_B_MARK,
-	SD2_WP_MARK, MMC_D5_MARK, RX5_B_MARK,
+	SD2_CD_MARK, MMC_D4_MARK, SCL8_C_MARK, TX5_B_MARK, SCIFA5_TXD_C_MARK,
+	SD2_WP_MARK, MMC_D5_MARK, SDA8_C_MARK, RX5_B_MARK, SCIFA5_RXD_C_MARK,
 	MSIOF0_SCK_MARK, RX2_C_MARK, VI1_CLK_C_MARK, VI1_G0_B_MARK,
 	MSIOF0_SYNC_MARK, TX2_C_MARK, VI1_CLKENB_C_MARK, VI1_G1_B_MARK,
 	MSIOF0_TXD_MARK, VI1_FIELD_C_MARK, VI1_G2_B_MARK,
 	MSIOF0_RXD_MARK, VI1_DATA0_C_MARK, VI1_G3_B_MARK,
-	MSIOF0_SS1_MARK, MMC_D6_MARK,TX0_E_MARK, VI1_HSYNC_N_C_MARK, VI1_G4_B_MARK,
-	MSIOF0_SS2_MARK, MMC_D7_MARK, RX0_E_MARK, VI1_VSYNC_N_C_MARK, VI1_G5_B_MARK,
+	MSIOF0_SS1_MARK, MMC_D6_MARK, TX0_E_MARK, VI1_HSYNC_N_C_MARK,
+		SCL7_C_MARK, VI1_G4_B_MARK,
+	MSIOF0_SS2_MARK, MMC_D7_MARK, RX0_E_MARK, VI1_VSYNC_N_C_MARK,
+		SDA7_C_MARK, VI1_G5_B_MARK,
 
 	/* IPSR15 */
 	CAN1_TX_D_MARK,
 	CAN_CLK_C_MARK,
 	CAN1_RX_D_MARK,
-	DU1_DOTCLKIN_C_MARK, AUDIO_CLKB_B_MARK,	PWM5_B_MARK,
-	TX4_C_MARK, PWM5_MARK,	VI1_G6_B_MARK,
-	RX4_C_MARK, PWM6_MARK,	VI1_G7_B_MARK,
-	HCTS0_N_MARK, TCLK1_MARK, VI1_DATA1_C_MARK,
-	HRTS0_N_MARK,VI1_DATA2_C_MARK,
-	HSCK0_MARK, CAN_CLK_MARK, TCLK2_MARK, VI1_DATA3_C_MARK,
-	HRX0_MARK, CAN0_RX_B_MARK, VI1_DATA4_C_MARK,
-	HTX0_MARK, CAN0_TX_B_MARK, VI1_DATA5_C_MARK,
+	DU1_DOTCLKIN_C_MARK, AUDIO_CLKB_B_MARK, PWM5_B_MARK, SCIFA3_TXD_C_MARK,
+	TX4_C_MARK, SCIFA4_TXD_C_MARK, PWM5_MARK, VI1_G6_B_MARK,
+		SCIFA3_RXD_C_MARK,
+	RX4_C_MARK, SCIFA4_RXD_C_MARK, PWM6_MARK, VI1_G7_B_MARK,
+		SCIFA3_SCK_C_MARK,
+	HCTS0_N_MARK, SCIFB0_CTS_N_MARK, TCLK1_MARK, VI1_DATA1_C_MARK,
+	HRTS0_N_MARK, SCIFB0_RTS_N_MARK, VI1_DATA2_C_MARK,
+	HSCK0_MARK, SCIFB0_SCK_MARK, CAN_CLK_MARK, TCLK2_MARK,
+		VI1_DATA3_C_MARK,
+	HRX0_MARK, SCIFB0_RXD_MARK, CAN0_RX_B_MARK, VI1_DATA4_C_MARK,
+	HTX0_MARK, SCIFB0_TXD_MARK, CAN0_TX_B_MARK, VI1_DATA5_C_MARK,
 
 	/* IPSR16 */
-	HRX1_MARK, VI1_R0_B_MARK, VI1_DATA6_C_MARK,
-	HTX1_MARK, VI1_R1_B_MARK, VI1_DATA7_C_MARK,
-	HSCK1_MARK,
-	HCTS1_N_MARK, CAN1_TX_B_MARK,
-	HRTS1_N_MARK, CAN1_RX_B_MARK,
+	HRX1_MARK, SCIFB1_RXD_MARK, VI1_R0_B_MARK, VI1_DATA6_C_MARK,
+	HTX1_MARK, SCIFB1_TXD_MARK, VI1_R1_B_MARK, VI1_DATA7_C_MARK,
+	HSCK1_MARK, SCIFB1_SCK_MARK,
+	HCTS1_N_MARK, SCIFB1_CTS_N_MARK, CAN1_TX_B_MARK,
+	HRTS1_N_MARK, SCIFB1_RTS_N_MARK, CAN1_RX_B_MARK,
 	PINMUX_MARK_END,
 };
 
@@ -745,15 +782,21 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP1_22_20, A15),
 	PINMUX_IPSR_DATA(IP1_25_23, A16),
 	PINMUX_IPSR_MODSEL_DATA(IP1_25_23, DREQ2_B, SEL_LBS_1),
+	PINMUX_IPSR_MODSEL_DATA(IP1_25_23, SCIFA1_SCK_B, SEL_SCIFA1_1),
 	PINMUX_IPSR_DATA(IP1_28_26, A17),
 	PINMUX_IPSR_MODSEL_DATA(IP1_28_26, DACK2_B, SEL_LBS_1),
 	PINMUX_IPSR_MODSEL_DATA(IP1_28_26, SDA0_C, SEL_IIC0_2),
 	PINMUX_IPSR_DATA(IP1_31_29, A18),
 	PINMUX_IPSR_MODSEL_DATA(IP1_31_29, DREQ1, SEL_LBS_0),
+	PINMUX_IPSR_MODSEL_DATA(IP1_31_29, SCIFA1_RXD_C, SEL_SCIFA1_2),
+	PINMUX_IPSR_MODSEL_DATA(IP1_31_29, SCIFB1_RXD_C, SEL_SCIFB1_2),
 
 	/* IPSR2 */
 	PINMUX_IPSR_DATA(IP2_2_0, A19),
 	PINMUX_IPSR_DATA(IP2_2_0, DACK1),
+	PINMUX_IPSR_MODSEL_DATA(IP2_2_0, SCIFA1_TXD_C, SEL_SCIFA1_2),
+	PINMUX_IPSR_MODSEL_DATA(IP2_2_0, SCIFB1_TXD_C, SEL_SCIFB1_2),
+	PINMUX_IPSR_MODSEL_DATA(IP2_2_0, SCIFB1_SCK_B, SEL_SCIFB1_0),
 	PINMUX_IPSR_DATA(IP2_2_0, A20),
 	PINMUX_IPSR_MODSEL_DATA(IP2_4_3, SPCLK, SEL_QSP_0),
 	PINMUX_IPSR_DATA(IP2_6_5, A21),
@@ -762,18 +805,22 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP2_9_7, A22),
 	PINMUX_IPSR_MODSEL_DATA(IP2_9_7, MISO_IO1, SEL_QSP_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_9_7, TX0, SEL_SCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP2_9_7, SCIFA0_TXD, SEL_SCFA_0),
 	PINMUX_IPSR_DATA(IP2_12_10, A23),
 	PINMUX_IPSR_MODSEL_DATA(IP2_12_10, IO2, SEL_QSP_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_12_10, RX0, SEL_SCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP2_12_10, SCIFA0_RXD, SEL_SCFA_0),
 	PINMUX_IPSR_DATA(IP2_15_13, A24),
 	PINMUX_IPSR_MODSEL_DATA(IP2_15_13, DREQ2, SEL_LBS_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_15_13, IO3, SEL_QSP_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_15_13, TX1, SEL_SCIF1_0),
+	PINMUX_IPSR_MODSEL_DATA(IP2_15_13, SCIFA1_TXD, SEL_SCIFA1_0),
 	PINMUX_IPSR_DATA(IP2_18_16, A25),
 	PINMUX_IPSR_MODSEL_DATA(IP2_18_16, DACK2, SEL_LBS_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_18_16, SSL, SEL_QSP_0),
 	PINMUX_IPSR_MODSEL_DATA(IP2_18_16, DREQ1_C, SEL_LBS_2),
 	PINMUX_IPSR_MODSEL_DATA(IP2_18_16, RX1, SEL_SCIF1_0),
+	PINMUX_IPSR_MODSEL_DATA(IP2_18_16, SCIFA1_RXD, SEL_SCIFA1_0),
 	PINMUX_IPSR_DATA(IP2_20_19, CS0_N),
 	PINMUX_IPSR_MODSEL_DATA(IP2_20_19, ATAG0_N_B, SEL_LBS_1),
 	PINMUX_IPSR_MODSEL_DATA(IP2_20_19, SCL1, SEL_IIC1_0),
@@ -800,24 +847,30 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP3_5_3, ATACS00_N),
 	PINMUX_IPSR_MODSEL_DATA(IP3_5_3, MSIOF2_SS1, SEL_SOF2_0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_5_3, HRX1_B, SEL_HSCIF1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_5_3, SCIFB1_RXD_B, SEL_SCIFB1_1),
 	PINMUX_IPSR_DATA(IP3_5_3, PWM1),
 	PINMUX_IPSR_DATA(IP3_5_3, TPU_TO1),
 	PINMUX_IPSR_DATA(IP3_8_6, BS_N),
 	PINMUX_IPSR_DATA(IP3_8_6, ATACS10_N),
 	PINMUX_IPSR_MODSEL_DATA(IP3_8_6, MSIOF2_SS2, SEL_SOF2_0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_8_6, HTX1_B, SEL_HSCIF1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_8_6, SCIFB1_TXD_B, SEL_SCIFB1_1),
 	PINMUX_IPSR_DATA(IP3_8_6, PWM2),
 	PINMUX_IPSR_DATA(IP3_8_6, TPU_TO2),
 	PINMUX_IPSR_DATA(IP3_11_9, RD_WR_N),
 	PINMUX_IPSR_MODSEL_DATA(IP3_11_9, HRX2_B, SEL_HSCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_11_9, SCIFB0_RXD_B, SEL_SCIFB_1),
 	PINMUX_IPSR_MODSEL_DATA(IP3_11_9, DREQ1_D, SEL_LBS_1),
 	PINMUX_IPSR_DATA(IP3_13_12, WE0_N),
 	PINMUX_IPSR_MODSEL_DATA(IP3_13_12, HCTS2_N_B, SEL_HSCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_13_12, SCIFB0_TXD_B, SEL_SCIFB_1),
 	PINMUX_IPSR_DATA(IP3_15_14, WE1_N),
 	PINMUX_IPSR_MODSEL_DATA(IP3_15_14, ATARD0_N_B, SEL_LBS_1),
 	PINMUX_IPSR_MODSEL_DATA(IP3_15_14, HTX2_B, SEL_HSCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_15_14, SCIFB0_RTS_N_B, SEL_SCIFB_1),
 	PINMUX_IPSR_DATA(IP3_17_16, EX_WAIT0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_17_16, HRTS2_N_B, SEL_HSCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_17_16, SCIFB0_CTS_N_B, SEL_SCIFB_1),
 	PINMUX_IPSR_DATA(IP3_19_18, DREQ0),
 	PINMUX_IPSR_DATA(IP3_19_18, PWM3),
 	PINMUX_IPSR_DATA(IP3_19_18, TPU_TO3),
@@ -825,27 +878,37 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP3_21_20, DRACK0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_24_22, HSCK0_C, SEL_HSCIF0_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_24_22, HSCK2_C, SEL_HSCIF2_2),
+	PINMUX_IPSR_MODSEL_DATA(IP3_24_22, SCIFB0_SCK_B, SEL_SCIFB_1),
+	PINMUX_IPSR_MODSEL_DATA(IP3_24_22, SCIFB2_SCK_B, SEL_SCIFB2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP3_24_22, DREQ2_C, SEL_LBS_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, HTX2_C, SEL_HSCIF2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_27_25, SSI_SCK0129, SEL_SSI0_0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_27_25, HRX0_C, SEL_HSCIF0_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_27_25, HRX2_C, SEL_HSCIF2_2),
+	PINMUX_IPSR_MODSEL_DATA(IP3_27_25, SCIFB0_RXD_C, SEL_SCIFB_2),
+	PINMUX_IPSR_MODSEL_DATA(IP3_27_25, SCIFB2_RXD_C, SEL_SCIFB2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, SSI_WS0129, SEL_SSI0_0),
 	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, HTX0_C, SEL_HSCIF0_2),
 	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, HTX2_C, SEL_HSCIF2_2),
+	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, SCIFB0_TXD_C, SEL_SCIFB_2),
+	PINMUX_IPSR_MODSEL_DATA(IP3_30_28, SCIFB2_TXD_C, SEL_SCIFB2_2),
 
 	/* IPSR4 */
 	PINMUX_IPSR_MODSEL_DATA(IP4_1_0, SSI_SDATA0, SEL_SSI0_0),
 	PINMUX_IPSR_MODSEL_DATA(IP4_1_0, SCL0_B, SEL_IIC0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP4_1_0, SCL7_B, SEL_IIC7_1),
 	PINMUX_IPSR_MODSEL_DATA(IP4_1_0, MSIOF2_SCK_C, SEL_SOF2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP4_4_2, SSI_SCK1, SEL_SSI1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP4_4_2, SDA0_B, SEL_IIC0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP4_4_2, SDA7_B, SEL_IIC7_1),
 	PINMUX_IPSR_MODSEL_DATA(IP4_4_2, MSIOF2_SYNC_C, SEL_SOF2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP4_7_5, SSI_WS1, SEL_SSI1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP4_7_5, SCL1_B, SEL_IIC1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP4_7_5, SCL8_B, SEL_IIC8_1),
 	PINMUX_IPSR_MODSEL_DATA(IP4_7_5, MSIOF2_TXD_C, SEL_SOF2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP4_9_8, SSI_SDATA1, SEL_SSI1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP4_9_8, SDA1_B, SEL_IIC1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP4_9_8, SDA8_B, SEL_IIC8_1),
 	PINMUX_IPSR_MODSEL_DATA(IP4_9_8, MSIOF2_RXD_C, SEL_SOF2_2),
 	PINMUX_IPSR_DATA(IP4_12_10, SSI_SCK2),
 	PINMUX_IPSR_MODSEL_DATA(IP4_12_10, SCL2, SEL_IIC2_0),
@@ -909,14 +1013,20 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP6_2_0, MSIOF1_SCK_B, SEL_SOF1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP6_2_0, SCIF_CLK, SEL_SCIF_0),
 	PINMUX_IPSR_DATA(IP6_5_3, AUDIO_CLKC),
+	PINMUX_IPSR_MODSEL_DATA(IP6_5_3, SCIFB0_SCK_C, SEL_SCIFB_2),
 	PINMUX_IPSR_MODSEL_DATA(IP6_5_3, MSIOF1_SYNC_B, SEL_SOF1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP6_5_3, RX2, SEL_SCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP6_5_3, SCIFA2_RXD, SEL_SCIFA2_0),
 	PINMUX_IPSR_DATA(IP6_7_6, AUDIO_CLKOUT),
 	PINMUX_IPSR_MODSEL_DATA(IP6_7_6, MSIOF1_SS1_B, SEL_SOF1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP6_5_3, TX2, SEL_SCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP6_7_6, SCIFA2_TXD, SEL_SCIFA2_0),
 	PINMUX_IPSR_DATA(IP6_9_8, IRQ0),
+	PINMUX_IPSR_MODSEL_DATA(IP6_9_8, SCIFB1_RXD_D, SEL_SCIFB1_3),
 	PINMUX_IPSR_DATA(IP6_11_10, IRQ1),
+	PINMUX_IPSR_MODSEL_DATA(IP6_11_10, SCIFB1_SCK_C, SEL_SCIFB1_2),
 	PINMUX_IPSR_DATA(IP6_13_12, IRQ2),
+	PINMUX_IPSR_MODSEL_DATA(IP6_13_12, SCIFB1_TXD_D, SEL_SCIFB1_3),
 	PINMUX_IPSR_DATA(IP6_15_14, IRQ3),
 	PINMUX_IPSR_MODSEL_DATA(IP6_15_14, SCL4_C, SEL_IIC4_2),
 	PINMUX_IPSR_MODSEL_DATA(IP6_15_14, MSIOF2_TXD_E, SEL_SOF2_4),
@@ -948,10 +1058,12 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP7_5_3, DU1_DR0),
 	PINMUX_IPSR_MODSEL_DATA(IP7_5_3, VI1_DATA0_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_5_3, TX0_B, SEL_SCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP7_5_3, SCIFA0_TXD_B, SEL_SCFA_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_5_3, MSIOF2_SCK_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP7_8_6, DU1_DR1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_8_6, VI1_DATA1_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_8_6, RX0_B, SEL_SCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP7_8_6, SCIFA0_RXD_B, SEL_SCFA_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_8_6, MSIOF2_SYNC_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP7_10_9, DU1_DR2),
 	PINMUX_IPSR_MODSEL_DATA(IP7_10_9, SSI_SCK0129_B, SEL_SSI0_1),
@@ -968,14 +1080,17 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP7_23_21, DU1_DG0),
 	PINMUX_IPSR_MODSEL_DATA(IP7_23_21, VI1_DATA2_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_23_21, TX1_B, SEL_SCIF1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP7_23_21, SCIFA1_TXD_B, SEL_SCIFA1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_23_21, MSIOF2_SS1_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP7_26_24, DU1_DG1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_26_24, VI1_DATA3_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_26_24, RX1_B, SEL_SCIF1_1),
+	PINMUX_IPSR_MODSEL_DATA(IP7_26_24, SCIFA1_RXD_B, SEL_SCIFA1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP7_26_24, MSIOF2_SS2_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP7_29_27, DU1_DG2),
 	PINMUX_IPSR_MODSEL_DATA(IP7_29_27, VI1_DATA4_B, SEL_VI1_1),
 	PINMUX_IPSR_DATA(IP7_29_27, SCIF1_SCK_B),
+	PINMUX_IPSR_MODSEL_DATA(IP7_29_27, SCIFA1_SCK, SEL_SCIFA1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP7_29_27, SSI_SCK78_B, SEL_SSI7_1),
 
 	/* IPSR8 */
@@ -985,28 +1100,35 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP8_5_3, DU1_DG4),
 	PINMUX_IPSR_MODSEL_DATA(IP8_5_3, VI1_DATA6_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_5_3, HRX0_B, SEL_HSCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_5_3, SCIFB2_RXD_B, SEL_SCIFB2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_5_3, SSI_SDATA7_B, SEL_SSI7_1),
 	PINMUX_IPSR_DATA(IP8_8_6, DU1_DG5),
 	PINMUX_IPSR_MODSEL_DATA(IP8_8_6, VI1_DATA7_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_8_6, HCTS0_N_B, SEL_HSCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_8_6, SCIFB2_TXD_B, SEL_SCIFB2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_8_6, SSI_SDATA8_B, SEL_SSI8_1),
 	PINMUX_IPSR_DATA(IP8_11_9, DU1_DG6),
 	PINMUX_IPSR_MODSEL_DATA(IP8_11_9, HRTS0_N_B, SEL_HSCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_11_9, SCIFB2_CTS_N_B, SEL_SCIFB2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_11_9, SSI_SCK9_B, SEL_SSI9_1),
 	PINMUX_IPSR_DATA(IP8_14_12, DU1_DG7),
 	PINMUX_IPSR_MODSEL_DATA(IP8_14_12, HTX0_B, SEL_HSCIF0_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_14_12, SCIFB2_RTS_N_B, SEL_SCIFB2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_14_12, SSI_WS9_B, SEL_SSI9_1),
 	PINMUX_IPSR_DATA(IP8_17_15, DU1_DB0),
 	PINMUX_IPSR_MODSEL_DATA(IP8_17_15, VI1_CLK_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_17_15, TX2_B, SEL_SCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_17_15, SCIFA2_TXD_B, SEL_SCIFA2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_17_15, MSIOF2_TXD_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP8_20_18, DU1_DB1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_20_18, VI1_HSYNC_N_B, SEL_VI1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_20_18, RX2_B, SEL_SCIF2_1),
+	PINMUX_IPSR_MODSEL_DATA(IP8_20_18, SCIFA2_RXD_B, SEL_SCIFA2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_20_18, MSIOF2_RXD_B, SEL_SOF2_1),
 	PINMUX_IPSR_DATA(IP8_23_21, DU1_DB2),
 	PINMUX_IPSR_MODSEL_DATA(IP8_23_21, VI1_VSYNC_N_B, SEL_VI1_1),
 	PINMUX_IPSR_DATA(IP8_23_21, SCIF2_SCK_B),
+	PINMUX_IPSR_MODSEL_DATA(IP8_23_21, SCIFA2_SCK, SEL_SCIFA2_1),
 	PINMUX_IPSR_MODSEL_DATA(IP8_23_21, SSI_SDATA9_B, SEL_SSI9_1),
 	PINMUX_IPSR_DATA(IP8_25_24, DU1_DB3),
 	PINMUX_IPSR_MODSEL_DATA(IP8_25_24, VI1_CLKENB_B, SEL_VI1_1),
@@ -1015,15 +1137,18 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP8_27_26, CAN1_RX, SEL_CAN1_0),
 	PINMUX_IPSR_DATA(IP8_30_28, DU1_DB5),
 	PINMUX_IPSR_MODSEL_DATA(IP8_30_28, TX3, SEL_SCIF3_0),
+	PINMUX_IPSR_MODSEL_DATA(IP8_30_28, SCIFA3_TXD, SEL_SCIFA3_0),
 	PINMUX_IPSR_MODSEL_DATA(IP8_30_28, CAN1_TX, SEL_CAN1_0),
 
 	/* IPSR9 */
 	PINMUX_IPSR_DATA(IP9_2_0, DU1_DB6),
 	PINMUX_IPSR_MODSEL_DATA(IP9_2_0, SCL3_C, SEL_IIC3_2),
 	PINMUX_IPSR_MODSEL_DATA(IP9_2_0, RX3, SEL_SCIF3_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_2_0, SCIFA3_RXD, SEL_SCIFA3_0),
 	PINMUX_IPSR_DATA(IP9_5_3, DU1_DB7),
 	PINMUX_IPSR_MODSEL_DATA(IP9_5_3, SDA3_C, SEL_IIC3_2),
 	PINMUX_IPSR_MODSEL_DATA(IP9_5_3, SCIF3_SCK, SEL_SCIF3_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_5_3, SCIFA3_SCK, SEL_SCIFA3_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_6, DU1_DOTCLKIN, SEL_DIS_0),
 	PINMUX_IPSR_DATA(IP9_7, DU1_DOTCLKOUT0),
 	PINMUX_IPSR_DATA(IP9_10_8, DU1_DOTCLKOUT1),
@@ -1040,46 +1165,61 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP9_16, DU1_DISP),
 	PINMUX_IPSR_DATA(IP9_18_17, DU1_CDE),
 	PINMUX_IPSR_DATA(IP9_18_17, PWM4_B),
+	PINMUX_IPSR_DATA(IP9_20_19, VI0_CLKENB),
 	PINMUX_IPSR_MODSEL_DATA(IP9_20_19, TX4, SEL_SCIF4_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_20_19, SCIFA4_TXD, SEL_SCIFA4_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_20_19, TS_SDATA0_D, SEL_TSIF0_3),
 	PINMUX_IPSR_DATA(IP9_22_21, VI0_FIELD),
 	PINMUX_IPSR_MODSEL_DATA(IP9_22_21, RX4, SEL_SCIF4_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_22_21, SCIFA4_RXD, SEL_SCIFA4_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_22_21, TS_SCK0_D, SEL_TSIF0_3),
 	PINMUX_IPSR_DATA(IP9_24_23, VI0_HSYNC_N),
 	PINMUX_IPSR_MODSEL_DATA(IP9_24_23, TX5, SEL_SCIF5_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_24_23, SCIFA5_TXD, SEL_SCIFA5_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_24_23, TS_SDEN0_D, SEL_TSIF0_3),
 	PINMUX_IPSR_DATA(IP9_26_25, VI0_VSYNC_N),
 	PINMUX_IPSR_MODSEL_DATA(IP9_26_25, RX5, SEL_SCIF5_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_26_25, SCIFA5_RXD, SEL_SCIFA5_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_26_25, TS_SPSYNC0_D, SEL_TSIF0_3),
 	PINMUX_IPSR_DATA(IP9_28_27, VI0_DATA3_VI0_B3),
 	PINMUX_IPSR_MODSEL_DATA(IP9_28_27, SCIF3_SCK_B, SEL_SCIF3_1),
+	PINMUX_IPSR_MODSEL_DATA(IP9_28_27, SCIFA3_SCK_B, SEL_SCIFA3_1),
 	PINMUX_IPSR_DATA(IP9_31_29, VI0_G0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_31_29, SCL8, SEL_IIC8_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_31_29, SCL4, SEL_IIC4_0),
 	PINMUX_IPSR_MODSEL_DATA(IP9_31_29, HCTS2_N, SEL_HSCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP9_31_29, SCIFB2_CTS_N, SEL_SCIFB2_0),
 	PINMUX_IPSR_DATA(IP9_31_29, ATAWR1_N),
 
 	/* IPSR10 */
 	PINMUX_IPSR_DATA(IP10_2_0, VI0_G1),
+	PINMUX_IPSR_MODSEL_DATA(IP10_2_0, SDA8, SEL_IIC8_0),
 	PINMUX_IPSR_MODSEL_DATA(IP10_2_0, SDA4, SEL_IIC4_0),
 	PINMUX_IPSR_MODSEL_DATA(IP10_2_0, HRTS2_N, SEL_HSCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP10_2_0, SCIFB2_RTS_N, SEL_SCIFB2_0),
 	PINMUX_IPSR_DATA(IP10_2_0, ATADIR1_N),
 	PINMUX_IPSR_DATA(IP10_5_3, VI0_G2),
 	PINMUX_IPSR_DATA(IP10_5_3, VI2_HSYNC_N),
 	PINMUX_IPSR_MODSEL_DATA(IP10_5_3, SCL3_B, SEL_IIC3_1),
 	PINMUX_IPSR_MODSEL_DATA(IP10_5_3, HSCK2, SEL_HSCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP10_5_3, SCIFB2_SCK, SEL_SCIFB2_0),
 	PINMUX_IPSR_DATA(IP10_5_3, ATARD1_N),
 	PINMUX_IPSR_DATA(IP10_8_6, VI0_G3),
 	PINMUX_IPSR_DATA(IP10_8_6, VI2_VSYNC_N),
 	PINMUX_IPSR_MODSEL_DATA(IP10_8_6, SDA3_B, SEL_IIC3_1),
 	PINMUX_IPSR_MODSEL_DATA(IP10_8_6, HRX2, SEL_HSCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP10_8_6, SCIFB2_RXD, SEL_SCIFB2_0),
 	PINMUX_IPSR_DATA(IP10_8_6, ATACS01_N),
 	PINMUX_IPSR_DATA(IP10_11_9, VI0_G4),
 	PINMUX_IPSR_DATA(IP10_11_9, VI2_CLKENB),
 	PINMUX_IPSR_MODSEL_DATA(IP10_11_9, HTX2, SEL_HSCIF2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP10_11_9, SCIFB2_TXD, SEL_SCIFB2_0),
+	PINMUX_IPSR_MODSEL_DATA(IP10_11_9, SCIFB0_SCK_D, SEL_SCIFB_3),
 	PINMUX_IPSR_DATA(IP10_14_12, VI0_G5),
 	PINMUX_IPSR_DATA(IP10_14_12, VI2_FIELD),
 	PINMUX_IPSR_MODSEL_DATA(IP10_14_12, CAN0_TX_E, SEL_CAN0_4),
 	PINMUX_IPSR_MODSEL_DATA(IP10_14_12, HTX1_D, SEL_HSCIF1_3),
+	PINMUX_IPSR_MODSEL_DATA(IP10_14_12, SCIFB0_TXD_D, SEL_SCIFB_3),
 	PINMUX_IPSR_DATA(IP10_16_15, VI0_G6),
 	PINMUX_IPSR_DATA(IP10_16_15, VI2_CLK),
 	PINMUX_IPSR_DATA(IP10_18_17, VI0_G7),
@@ -1117,14 +1257,17 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP11_8_6, CAN0_RX_E, SEL_CAN0_4),
 	PINMUX_IPSR_MODSEL_DATA(IP11_8_6, SDA4_B, SEL_IIC4_1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_8_6, HRX1_D, SEL_HSCIF1_3),
+	PINMUX_IPSR_MODSEL_DATA(IP11_8_6, SCIFB0_RXD_D, SEL_SCIFB_3),
 	PINMUX_IPSR_MODSEL_DATA(IP11_11_9, VI1_HSYNC_N, SEL_VI1_0),
 	PINMUX_IPSR_DATA(IP11_11_9, AVB_RXD0),
 	PINMUX_IPSR_MODSEL_DATA(IP11_11_9, TS_SDATA0_B, SEL_TSIF0_1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_11_9, TX4_B, SEL_SCIF4_1),
+	PINMUX_IPSR_MODSEL_DATA(IP11_11_9, SCIFA4_TXD_B, SEL_SCIFA4_1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_14_12, VI1_VSYNC_N, SEL_VI1_0),
 	PINMUX_IPSR_DATA(IP11_14_12, AVB_RXD1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_14_12, TS_SCK0_B, SEL_TSIF0_1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_14_12, RX4_B, SEL_SCIF4_1),
+	PINMUX_IPSR_MODSEL_DATA(IP11_14_12, SCIFA4_RXD_B, SEL_SCIFA4_1),
 	PINMUX_IPSR_MODSEL_DATA(IP11_16_15, VI1_CLKENB, SEL_VI1_0),
 	PINMUX_IPSR_DATA(IP11_16_15, AVB_RXD2),
 	PINMUX_IPSR_MODSEL_DATA(IP11_16_15, TS_SDEN0_B, SEL_TSIF0_1),
@@ -1160,9 +1303,11 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP12_1_0, ETH_RX_ER),
 	PINMUX_IPSR_DATA(IP12_1_0, AVB_CRS),
 	PINMUX_IPSR_MODSEL_DATA(IP12_1_0, SCL3, SEL_IIC3_0),
+	PINMUX_IPSR_MODSEL_DATA(IP12_1_0, SCL7, SEL_IIC7_0),
 	PINMUX_IPSR_DATA(IP12_3_2, ETH_RXD0),
 	PINMUX_IPSR_DATA(IP12_3_2, AVB_PHY_INT),
 	PINMUX_IPSR_MODSEL_DATA(IP12_3_2, SDA3, SEL_IIC3_0),
+	PINMUX_IPSR_MODSEL_DATA(IP12_3_2, SDA7, SEL_IIC7_0),
 	PINMUX_IPSR_DATA(IP12_6_4, ETH_RXD1),
 	PINMUX_IPSR_DATA(IP12_6_4, AVB_GTXREFCLK),
 	PINMUX_IPSR_MODSEL_DATA(IP12_6_4, CAN0_TX_C, SEL_CAN0_2),
@@ -1175,10 +1320,12 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP12_9_7, MSIOF1_SCK_E, SEL_SOF1_4),
 	PINMUX_IPSR_DATA(IP12_12_10, ETH_REFCLK),
 	PINMUX_IPSR_DATA(IP12_12_10, AVB_TXD1),
+	PINMUX_IPSR_MODSEL_DATA(IP12_12_10, SCIFA3_RXD_B, SEL_SCIFA3_1),
 	PINMUX_IPSR_MODSEL_DATA(IP12_12_10, CAN1_RX_C, SEL_CAN1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP12_12_10, MSIOF1_SYNC_E, SEL_SOF1_4),
 	PINMUX_IPSR_DATA(IP12_15_13, ETH_TXD1),
 	PINMUX_IPSR_DATA(IP12_15_13, AVB_TXD2),
+	PINMUX_IPSR_MODSEL_DATA(IP12_15_13, SCIFA3_TXD_B, SEL_SCIFA3_1),
 	PINMUX_IPSR_MODSEL_DATA(IP12_15_13, CAN1_TX_C, SEL_CAN1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP12_15_13, MSIOF1_TXD_E, SEL_SOF1_4),
 	PINMUX_IPSR_DATA(IP12_17_16, ETH_TX_EN),
@@ -1192,12 +1339,15 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP12_23_22, ETH_MDC),
 	PINMUX_IPSR_DATA(IP12_23_22, AVB_TXD6),
 	PINMUX_IPSR_DATA(IP12_26_24, AVB_TXD7),
+	PINMUX_IPSR_MODSEL_DATA(IP12_26_24, SCIFB2_TXD_D, SEL_SCIFB2_3),
 	PINMUX_IPSR_MODSEL_DATA(IP12_26_24, MSIOF0_SYNC_C, SEL_SOF0_2),
 	PINMUX_IPSR_DATA(IP12_29_27, AVB_TX_EN),
+	PINMUX_IPSR_MODSEL_DATA(IP12_29_27, SCIFB2_RXD_D, SEL_SCIFB2_3),
 	PINMUX_IPSR_MODSEL_DATA(IP12_29_27, MSIOF0_SCK_C, SEL_SOF0_2),
 
 	/* IPSR13 */
 	PINMUX_IPSR_DATA(IP13_2_0, AVB_TX_ER),
+	PINMUX_IPSR_MODSEL_DATA(IP13_2_0, SCIFB2_SCK_C, SEL_SCIFB2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP13_2_0, MSIOF0_SS1_C, SEL_SOF0_2),
 	PINMUX_IPSR_DATA(IP13_4_3, AVB_TX_CLK),
 	PINMUX_IPSR_MODSEL_DATA(IP13_4_3, MSIOF0_SS2_C, SEL_SOF0_2),
@@ -1221,10 +1371,12 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP13_18_16, SD0_CD),
 	PINMUX_IPSR_MODSEL_DATA(IP13_18_16, MMC_D6_B, SEL_MMC_1),
 	PINMUX_IPSR_MODSEL_DATA(IP13_18_16, CAN0_RX_F, SEL_CAN0_5),
+	PINMUX_IPSR_MODSEL_DATA(IP13_18_16, SCIFA5_TXD_B, SEL_SCIFA5_1),
 	PINMUX_IPSR_MODSEL_DATA(IP13_18_16, TX3_C, SEL_SCIF3_2),
 	PINMUX_IPSR_DATA(IP13_21_19, SD0_WP),
 	PINMUX_IPSR_MODSEL_DATA(IP13_21_19, MMC_D7_B, SEL_MMC_1),
 	PINMUX_IPSR_MODSEL_DATA(IP13_21_19, CAN0_TX_F, SEL_CAN0_5),
+	PINMUX_IPSR_MODSEL_DATA(IP13_21_19, SCIFA5_RXD_B, SEL_SCIFA5_1),
 	PINMUX_IPSR_MODSEL_DATA(IP13_21_19, RX3_C, SEL_SCIF3_2),
 	PINMUX_IPSR_DATA(IP13_22, SD1_CMD),
 	PINMUX_IPSR_DATA(IP13_24_23, SD1_DATA0),
@@ -1254,10 +1406,14 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_DATA(IP14_7, MMC_D3),
 	PINMUX_IPSR_DATA(IP14_10_8, SD2_CD),
 	PINMUX_IPSR_DATA(IP14_10_8, MMC_D4),
+	PINMUX_IPSR_MODSEL_DATA(IP14_10_8, SCL8_C, SEL_IIC8_2),
 	PINMUX_IPSR_MODSEL_DATA(IP14_10_8, TX5_B, SEL_SCIF5_1),
+	PINMUX_IPSR_MODSEL_DATA(IP14_10_8, SCIFA5_TXD_C, SEL_SCIFA5_2),
 	PINMUX_IPSR_DATA(IP14_13_11, SD2_WP),
 	PINMUX_IPSR_DATA(IP14_13_11, MMC_D5),
+	PINMUX_IPSR_MODSEL_DATA(IP14_13_11, SDA8_C, SEL_IIC8_2),
 	PINMUX_IPSR_MODSEL_DATA(IP14_13_11, RX5_B, SEL_SCIF5_1),
+	PINMUX_IPSR_MODSEL_DATA(IP14_13_11, SCIFA5_RXD_C, SEL_SCIFA5_2),
 	PINMUX_IPSR_MODSEL_DATA(IP14_16_14, MSIOF0_SCK, SEL_SOF0_0),
 	PINMUX_IPSR_MODSEL_DATA(IP14_16_14, RX2_C, SEL_SCIF2_2),
 	PINMUX_IPSR_MODSEL_DATA(IP14_16_14, VI1_CLK_C, SEL_VI1_2),
@@ -1276,11 +1432,13 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP14_28_26, MMC_D6, SEL_MMC_0),
 	PINMUX_IPSR_MODSEL_DATA(IP14_28_26, TX0_E, SEL_SCIF0_4),
 	PINMUX_IPSR_MODSEL_DATA(IP14_28_26, VI1_HSYNC_N_C, SEL_VI1_2),
+	PINMUX_IPSR_MODSEL_DATA(IP14_28_26, SCL7_C, SEL_IIC7_2),
 	PINMUX_IPSR_DATA(IP14_28_26, VI1_G4_B),
 	PINMUX_IPSR_MODSEL_DATA(IP14_31_29, MSIOF0_SS2, SEL_SOF0_0),
 	PINMUX_IPSR_MODSEL_DATA(IP14_31_29, MMC_D7, SEL_MMC_0),
 	PINMUX_IPSR_MODSEL_DATA(IP14_31_29, RX0_E, SEL_SCIF0_4),
 	PINMUX_IPSR_MODSEL_DATA(IP14_31_29, VI1_VSYNC_N_C, SEL_VI1_2),
+	PINMUX_IPSR_MODSEL_DATA(IP14_31_29, SDA7_C, SEL_IIC7_2),
 	PINMUX_IPSR_DATA(IP14_31_29, VI1_G5_B),
 
 	/* IPSR15 */
@@ -1290,39 +1448,54 @@ static const u16 pinmux_data[] = {
 	PINMUX_IPSR_MODSEL_DATA(IP15_8_6, DU1_DOTCLKIN_C, SEL_DIS_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_8_6, AUDIO_CLKB_B, SEL_ADG_1),
 	PINMUX_IPSR_DATA(IP15_8_6, PWM5_B),
+	PINMUX_IPSR_MODSEL_DATA(IP15_8_6, SCIFA3_TXD_C, SEL_SCIFA3_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_11_9, TX4_C, SEL_SCIF4_2),
+	PINMUX_IPSR_MODSEL_DATA(IP15_11_9, SCIFA4_TXD_C, SEL_SCIFA4_2),
 	PINMUX_IPSR_DATA(IP15_11_9, PWM5),
 	PINMUX_IPSR_DATA(IP15_11_9, VI1_G6_B),
+	PINMUX_IPSR_MODSEL_DATA(IP15_11_9, SCIFA3_RXD_C, SEL_SCIFA3_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_14_12, RX4_C, SEL_SCIF4_2),
+	PINMUX_IPSR_MODSEL_DATA(IP15_14_12, SCIFA4_RXD_C, SEL_SCIFA4_2),
 	PINMUX_IPSR_DATA(IP15_14_12, PWM6),
 	PINMUX_IPSR_DATA(IP15_14_12, VI1_G7_B),
+	PINMUX_IPSR_MODSEL_DATA(IP15_14_12, SCIFA3_SCK_C, SEL_SCIFA3_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_17_15, HCTS0_N, SEL_HSCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP15_17_15, SCIFB0_CTS_N, SEL_SCIFB_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_17_15, TCLK1, SEL_TMU1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_17_15, VI1_DATA1_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_20_18, HRTS0_N, SEL_HSCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP15_20_18, SCIFB0_RTS_N, SEL_SCIFB_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_20_18, VI1_DATA2_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_23_21, HSCK0, SEL_HSCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP15_23_21, SCIFB0_SCK, SEL_SCIFB_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_23_21, CAN_CLK, SEL_CANCLK_0),
 	PINMUX_IPSR_DATA(IP15_23_21, TCLK2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_23_21, VI1_DATA3_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_26_24, HRX0, SEL_HSCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP15_26_24, SCIFB0_RXD, SEL_SCIFB_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_26_24, CAN0_RX_B, SEL_CAN0_1),
 	PINMUX_IPSR_MODSEL_DATA(IP15_26_24, VI1_DATA4_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP15_29_27, HTX0, SEL_HSCIF0_0),
+	PINMUX_IPSR_MODSEL_DATA(IP15_29_27, SCIFB0_TXD, SEL_SCIFB_0),
 	PINMUX_IPSR_MODSEL_DATA(IP15_29_27, CAN0_TX_B, SEL_CAN0_1),
 	PINMUX_IPSR_MODSEL_DATA(IP15_29_27, VI1_DATA5_C, SEL_VI1_2),
 
 	/* IPSR16 */
 	PINMUX_IPSR_MODSEL_DATA(IP16_2_0, HRX1, SEL_HSCIF1_0),
+	PINMUX_IPSR_MODSEL_DATA(IP16_2_0, SCIFB1_RXD, SEL_SCIFB1_0),
 	PINMUX_IPSR_DATA(IP16_2_0, VI1_R0_B),
 	PINMUX_IPSR_MODSEL_DATA(IP16_2_0, VI1_DATA6_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP16_5_3, HTX1, SEL_HSCIF1_0),
+	PINMUX_IPSR_MODSEL_DATA(IP16_5_3, SCIFB1_TXD, SEL_SCIFB1_0),
 	PINMUX_IPSR_DATA(IP16_5_3, VI1_R1_B),
 	PINMUX_IPSR_MODSEL_DATA(IP16_5_3, VI1_DATA7_C, SEL_VI1_2),
 	PINMUX_IPSR_MODSEL_DATA(IP16_7_6, HSCK1, SEL_HSCIF1_0),
+	PINMUX_IPSR_MODSEL_DATA(IP16_7_6, SCIFB1_SCK, SEL_SCIFB1_0),
 	PINMUX_IPSR_MODSEL_DATA(IP16_9_8, HCTS1_N, SEL_HSCIF1_0),
+	PINMUX_IPSR_DATA(IP16_9_8, SCIFB1_CTS_N),
 	PINMUX_IPSR_MODSEL_DATA(IP16_9_8, CAN1_TX_B, SEL_CAN1_1),
 	PINMUX_IPSR_MODSEL_DATA(IP16_11_10, HRTS1_N, SEL_HSCIF1_0),
+	PINMUX_IPSR_DATA(IP16_11_10, SCIFB1_RTS_N),
 	PINMUX_IPSR_MODSEL_DATA(IP16_11_10, CAN1_RX_B, SEL_CAN1_1),
 };
 
@@ -1376,6 +1549,15 @@ static const unsigned int audio_clkout_mux[] = {
 	AUDIO_CLKOUT_MARK,
 };
 
+/* - TPU -------------------------------------------------------------------- */
+
+static const unsigned int tpu_to3_pins[] = {
+	/* CLK */
+	RCAR_GP_PIN(1, 24),
+};
+static const unsigned int tpu_to3_mux[] = {
+	TPU_TO3_MARK,
+};
 
 /* - CAN -------------------------------------------------------------------- */
 
@@ -1961,6 +2143,50 @@ static const unsigned int i2c4_c_pins[] = {
 static const unsigned int i2c4_c_mux[] = {
 	SCL4_C_MARK, SDA4_C_MARK,
 };
+/* - I2C7 ------------------------------------------------------------------- */
+static const unsigned int i2c7_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(5, 15), RCAR_GP_PIN(5, 16),
+};
+static const unsigned int i2c7_mux[] = {
+	SCL7_MARK, SDA7_MARK,
+};
+static const unsigned int i2c7_b_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(2, 2), RCAR_GP_PIN(2, 3),
+};
+static const unsigned int i2c7_b_mux[] = {
+	SCL7_B_MARK, SDA7_B_MARK,
+};
+static const unsigned int i2c7_c_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(6, 28), RCAR_GP_PIN(6, 29),
+};
+static const unsigned int i2c7_c_mux[] = {
+	SCL7_C_MARK, SDA7_C_MARK,
+};
+/* - I2C8 ------------------------------------------------------------------- */
+static const unsigned int i2c8_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(4, 13), RCAR_GP_PIN(4, 14),
+};
+static const unsigned int i2c8_mux[] = {
+	SCL8_MARK, SDA8_MARK,
+};
+static const unsigned int i2c8_b_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(2, 4), RCAR_GP_PIN(2, 5),
+};
+static const unsigned int i2c8_b_mux[] = {
+	SCL8_B_MARK, SDA8_B_MARK,
+};
+static const unsigned int i2c8_c_pins[] = {
+	/* SCL, SDA */
+	RCAR_GP_PIN(6, 22), RCAR_GP_PIN(6, 23),
+};
+static const unsigned int i2c8_c_mux[] = {
+	SCL8_C_MARK, SDA8_C_MARK,
+};
 /* - INTC ------------------------------------------------------------------- */
 static const unsigned int intc_irq0_pins[] = {
 	/* IRQ */
@@ -2756,6 +2982,359 @@ static const unsigned int scif5_data_b_mux[] = {
 	RX5_B_MARK, TX5_B_MARK,
 };
 
+/* - SCIFA0 ----------------------------------------------------------------- */
+static const unsigned int scifa0_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 7), RCAR_GP_PIN(1, 6),
+};
+static const unsigned int scifa0_data_mux[] = {
+	SCIFA0_RXD_MARK, SCIFA0_TXD_MARK,
+};
+static const unsigned int scifa0_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(3, 1), RCAR_GP_PIN(3, 0),
+};
+static const unsigned int scifa0_data_b_mux[] = {
+	SCIFA0_RXD_B_MARK, SCIFA0_TXD_B_MARK
+};
+/* - SCIFA1 ----------------------------------------------------------------- */
+static const unsigned int scifa1_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 9), RCAR_GP_PIN(1, 8),
+};
+static const unsigned int scifa1_data_mux[] = {
+	SCIFA1_RXD_MARK, SCIFA1_TXD_MARK,
+};
+static const unsigned int scifa1_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(3, 10),
+};
+static const unsigned int scifa1_clk_mux[] = {
+	SCIFA1_SCK_MARK,
+};
+static const unsigned int scifa1_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(3, 9), RCAR_GP_PIN(3, 8),
+};
+static const unsigned int scifa1_data_b_mux[] = {
+	SCIFA1_RXD_B_MARK, SCIFA1_TXD_B_MARK,
+};
+static const unsigned int scifa1_clk_b_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(1, 0),
+};
+static const unsigned int scifa1_clk_b_mux[] = {
+	SCIFA1_SCK_B_MARK,
+};
+static const unsigned int scifa1_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 2), RCAR_GP_PIN(1, 3),
+};
+static const unsigned int scifa1_data_c_mux[] = {
+	SCIFA1_RXD_C_MARK, SCIFA1_TXD_C_MARK,
+};
+/* - SCIFA2 ----------------------------------------------------------------- */
+static const unsigned int scifa2_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(2, 30), RCAR_GP_PIN(2, 31),
+};
+static const unsigned int scifa2_data_mux[] = {
+	SCIFA2_RXD_MARK, SCIFA2_TXD_MARK,
+};
+static const unsigned int scifa2_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(3, 18),
+};
+static const unsigned int scifa2_clk_mux[] = {
+	SCIFA2_SCK_MARK,
+};
+static const unsigned int scifa2_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(3, 17), RCAR_GP_PIN(3, 16),
+};
+static const unsigned int scifa2_data_b_mux[] = {
+	SCIFA2_RXD_B_MARK, SCIFA2_TXD_B_MARK,
+};
+/* - SCIFA3 ----------------------------------------------------------------- */
+static const unsigned int scifa3_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(3, 22), RCAR_GP_PIN(3, 21),
+};
+static const unsigned int scifa3_data_mux[] = {
+	SCIFA3_RXD_MARK, SCIFA3_TXD_MARK,
+};
+static const unsigned int scifa3_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(3, 23),
+};
+static const unsigned int scifa3_clk_mux[] = {
+	SCIFA3_SCK_MARK,
+};
+static const unsigned int scifa3_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(5, 19), RCAR_GP_PIN(5, 20),
+};
+static const unsigned int scifa3_data_b_mux[] = {
+	SCIFA3_RXD_B_MARK, SCIFA3_TXD_B_MARK,
+};
+static const unsigned int scifa3_clk_b_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(4, 8),
+};
+static const unsigned int scifa3_clk_b_mux[] = {
+	SCIFA3_SCK_B_MARK,
+};
+static const unsigned int scifa3_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(7, 21), RCAR_GP_PIN(7, 20),
+};
+static const unsigned int scifa3_data_c_mux[] = {
+	SCIFA3_RXD_C_MARK, SCIFA3_TXD_C_MARK,
+};
+static const unsigned int scifa3_clk_c_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(7, 22),
+};
+static const unsigned int scifa3_clk_c_mux[] = {
+	SCIFA3_SCK_C_MARK,
+};
+/* - SCIFA4 ----------------------------------------------------------------- */
+static const unsigned int scifa4_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(4, 2), RCAR_GP_PIN(4, 1),
+};
+static const unsigned int scifa4_data_mux[] = {
+	SCIFA4_RXD_MARK, SCIFA4_TXD_MARK,
+};
+static const unsigned int scifa4_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(5, 1), RCAR_GP_PIN(5, 0),
+};
+static const unsigned int scifa4_data_b_mux[] = {
+	SCIFA4_RXD_B_MARK, SCIFA4_TXD_B_MARK,
+};
+static const unsigned int scifa4_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(7, 22), RCAR_GP_PIN(7, 21),
+};
+static const unsigned int scifa4_data_c_mux[] = {
+	SCIFA4_RXD_C_MARK, SCIFA4_TXD_C_MARK,
+};
+/* - SCIFA5 ----------------------------------------------------------------- */
+static const unsigned int scifa5_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(4, 4), RCAR_GP_PIN(4, 3),
+};
+static const unsigned int scifa5_data_mux[] = {
+	SCIFA5_RXD_MARK, SCIFA5_TXD_MARK,
+};
+static const unsigned int scifa5_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(6, 7), RCAR_GP_PIN(6, 6),
+};
+static const unsigned int scifa5_data_b_mux[] = {
+	SCIFA5_RXD_B_MARK, SCIFA5_TXD_B_MARK,
+};
+static const unsigned int scifa5_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(6, 23), RCAR_GP_PIN(6, 22),
+};
+static const unsigned int scifa5_data_c_mux[] = {
+	SCIFA5_RXD_C_MARK, SCIFA5_TXD_C_MARK,
+};
+/* - SCIFB0 ----------------------------------------------------------------- */
+static const unsigned int scifb0_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(7, 3), RCAR_GP_PIN(7, 4),
+};
+static const unsigned int scifb0_data_mux[] = {
+	SCIFB0_RXD_MARK, SCIFB0_TXD_MARK,
+};
+static const unsigned int scifb0_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(7, 2),
+};
+static const unsigned int scifb0_clk_mux[] = {
+	SCIFB0_SCK_MARK,
+};
+static const unsigned int scifb0_ctrl_pins[] = {
+	/* RTS, CTS */
+	RCAR_GP_PIN(7, 1), RCAR_GP_PIN(7, 0),
+};
+static const unsigned int scifb0_ctrl_mux[] = {
+	SCIFB0_RTS_N_MARK, SCIFB0_CTS_N_MARK,
+};
+static const unsigned int scifb0_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 20), RCAR_GP_PIN(1, 21),
+};
+static const unsigned int scifb0_data_b_mux[] = {
+	SCIFB0_RXD_B_MARK, SCIFB0_TXD_B_MARK,
+};
+static const unsigned int scifb0_clk_b_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(5, 31),
+};
+static const unsigned int scifb0_clk_b_mux[] = {
+	SCIFB0_SCK_B_MARK,
+};
+static const unsigned int scifb0_ctrl_b_pins[] = {
+	/* RTS, CTS */
+	RCAR_GP_PIN(1, 22), RCAR_GP_PIN(1, 23),
+};
+static const unsigned int scifb0_ctrl_b_mux[] = {
+	SCIFB0_RTS_N_B_MARK, SCIFB0_CTS_N_B_MARK,
+};
+static const unsigned int scifb0_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(2, 0), RCAR_GP_PIN(2, 1),
+};
+static const unsigned int scifb0_data_c_mux[] = {
+	SCIFB0_RXD_C_MARK, SCIFB0_TXD_C_MARK,
+};
+static const unsigned int scifb0_clk_c_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(2, 30),
+};
+static const unsigned int scifb0_clk_c_mux[] = {
+	SCIFB0_SCK_C_MARK,
+};
+static const unsigned int scifb0_data_d_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(4, 28), RCAR_GP_PIN(4, 18),
+};
+static const unsigned int scifb0_data_d_mux[] = {
+	SCIFB0_RXD_D_MARK, SCIFB0_TXD_D_MARK,
+};
+static const unsigned int scifb0_clk_d_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(4, 17),
+};
+static const unsigned int scifb0_clk_d_mux[] = {
+	SCIFB0_SCK_D_MARK,
+};
+/* - SCIFB1 ----------------------------------------------------------------- */
+static const unsigned int scifb1_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(7, 5), RCAR_GP_PIN(7, 6),
+};
+static const unsigned int scifb1_data_mux[] = {
+	SCIFB1_RXD_MARK, SCIFB1_TXD_MARK,
+};
+static const unsigned int scifb1_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(7, 7),
+};
+static const unsigned int scifb1_clk_mux[] = {
+	SCIFB1_SCK_MARK,
+};
+static const unsigned int scifb1_ctrl_pins[] = {
+	/* RTS, CTS */
+	RCAR_GP_PIN(7, 9), RCAR_GP_PIN(7, 8),
+};
+static const unsigned int scifb1_ctrl_mux[] = {
+	SCIFB1_RTS_N_MARK, SCIFB1_CTS_N_MARK,
+};
+static const unsigned int scifb1_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 17), RCAR_GP_PIN(1, 18),
+};
+static const unsigned int scifb1_data_b_mux[] = {
+	SCIFB1_RXD_B_MARK, SCIFB1_TXD_B_MARK,
+};
+static const unsigned int scifb1_clk_b_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(1, 3),
+};
+static const unsigned int scifb1_clk_b_mux[] = {
+	SCIFB1_SCK_B_MARK,
+};
+static const unsigned int scifb1_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(1, 2), RCAR_GP_PIN(1, 3),
+};
+static const unsigned int scifb1_data_c_mux[] = {
+	SCIFB1_RXD_C_MARK, SCIFB1_TXD_C_MARK,
+};
+static const unsigned int scifb1_clk_c_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(7, 11),
+};
+static const unsigned int scifb1_clk_c_mux[] = {
+	SCIFB1_SCK_C_MARK,
+};
+static const unsigned int scifb1_data_d_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(7, 10), RCAR_GP_PIN(7, 12),
+};
+static const unsigned int scifb1_data_d_mux[] = {
+	SCIFB1_RXD_D_MARK, SCIFB1_TXD_D_MARK,
+};
+/* - SCIFB2 ----------------------------------------------------------------- */
+static const unsigned int scifb2_data_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(4, 16), RCAR_GP_PIN(4, 17),
+};
+static const unsigned int scifb2_data_mux[] = {
+	SCIFB2_RXD_MARK, SCIFB2_TXD_MARK,
+};
+static const unsigned int scifb2_clk_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(4, 15),
+};
+static const unsigned int scifb2_clk_mux[] = {
+	SCIFB2_SCK_MARK,
+};
+static const unsigned int scifb2_ctrl_pins[] = {
+	/* RTS, CTS */
+	RCAR_GP_PIN(4, 14), RCAR_GP_PIN(4, 13),
+};
+static const unsigned int scifb2_ctrl_mux[] = {
+	SCIFB2_RTS_N_MARK, SCIFB2_CTS_N_MARK,
+};
+static const unsigned int scifb2_data_b_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(3, 12), RCAR_GP_PIN(3, 13),
+};
+static const unsigned int scifb2_data_b_mux[] = {
+	SCIFB2_RXD_B_MARK, SCIFB2_TXD_B_MARK,
+};
+static const unsigned int scifb2_clk_b_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(5, 31),
+};
+static const unsigned int scifb2_clk_b_mux[] = {
+	SCIFB2_SCK_B_MARK,
+};
+static const unsigned int scifb2_ctrl_b_pins[] = {
+	/* RTS, CTS */
+	RCAR_GP_PIN(3, 15), RCAR_GP_PIN(3, 14),
+};
+static const unsigned int scifb2_ctrl_b_mux[] = {
+	SCIFB2_RTS_N_B_MARK, SCIFB2_CTS_N_B_MARK,
+};
+static const unsigned int scifb2_data_c_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(2, 0), RCAR_GP_PIN(2, 1),
+};
+static const unsigned int scifb2_data_c_mux[] = {
+	SCIFB2_RXD_C_MARK, SCIFB2_TXD_C_MARK,
+};
+static const unsigned int scifb2_clk_c_pins[] = {
+	/* SCK */
+	RCAR_GP_PIN(5, 27),
+};
+static const unsigned int scifb2_clk_c_mux[] = {
+	SCIFB2_SCK_C_MARK,
+};
+static const unsigned int scifb2_data_d_pins[] = {
+	/* RXD, TXD */
+	RCAR_GP_PIN(5, 26), RCAR_GP_PIN(5, 25),
+};
+static const unsigned int scifb2_data_d_mux[] = {
+	SCIFB2_RXD_D_MARK, SCIFB2_TXD_D_MARK,
+};
+
 /* - SDHI0 ------------------------------------------------------------------ */
 static const unsigned int sdhi0_data1_pins[] = {
 	/* D0 */
@@ -3485,6 +4064,7 @@ static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(audio_clk_b_b),
 	SH_PFC_PIN_GROUP(audio_clk_c),
 	SH_PFC_PIN_GROUP(audio_clkout),
+	SH_PFC_PIN_GROUP(tpu_to3),
 	SH_PFC_PIN_GROUP(can0_data),
 	SH_PFC_PIN_GROUP(can0_data_b),
 	SH_PFC_PIN_GROUP(can0_data_c),
@@ -3564,6 +4144,12 @@ static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(i2c4),
 	SH_PFC_PIN_GROUP(i2c4_b),
 	SH_PFC_PIN_GROUP(i2c4_c),
+	SH_PFC_PIN_GROUP(i2c7),
+	SH_PFC_PIN_GROUP(i2c7_b),
+	SH_PFC_PIN_GROUP(i2c7_c),
+	SH_PFC_PIN_GROUP(i2c8),
+	SH_PFC_PIN_GROUP(i2c8_b),
+	SH_PFC_PIN_GROUP(i2c8_c),
 	SH_PFC_PIN_GROUP(intc_irq0),
 	SH_PFC_PIN_GROUP(intc_irq1),
 	SH_PFC_PIN_GROUP(intc_irq2),
@@ -3673,6 +4259,55 @@ static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(scif4_data_c),
 	SH_PFC_PIN_GROUP(scif5_data),
 	SH_PFC_PIN_GROUP(scif5_data_b),
+	SH_PFC_PIN_GROUP(scifa0_data),
+	SH_PFC_PIN_GROUP(scifa0_data_b),
+	SH_PFC_PIN_GROUP(scifa1_data),
+	SH_PFC_PIN_GROUP(scifa1_clk),
+	SH_PFC_PIN_GROUP(scifa1_data_b),
+	SH_PFC_PIN_GROUP(scifa1_clk_b),
+	SH_PFC_PIN_GROUP(scifa1_data_c),
+	SH_PFC_PIN_GROUP(scifa2_data),
+	SH_PFC_PIN_GROUP(scifa2_clk),
+	SH_PFC_PIN_GROUP(scifa2_data_b),
+	SH_PFC_PIN_GROUP(scifa3_data),
+	SH_PFC_PIN_GROUP(scifa3_clk),
+	SH_PFC_PIN_GROUP(scifa3_data_b),
+	SH_PFC_PIN_GROUP(scifa3_clk_b),
+	SH_PFC_PIN_GROUP(scifa3_data_c),
+	SH_PFC_PIN_GROUP(scifa3_clk_c),
+	SH_PFC_PIN_GROUP(scifa4_data),
+	SH_PFC_PIN_GROUP(scifa4_data_b),
+	SH_PFC_PIN_GROUP(scifa4_data_c),
+	SH_PFC_PIN_GROUP(scifa5_data),
+	SH_PFC_PIN_GROUP(scifa5_data_b),
+	SH_PFC_PIN_GROUP(scifa5_data_c),
+	SH_PFC_PIN_GROUP(scifb0_data),
+	SH_PFC_PIN_GROUP(scifb0_clk),
+	SH_PFC_PIN_GROUP(scifb0_ctrl),
+	SH_PFC_PIN_GROUP(scifb0_data_b),
+	SH_PFC_PIN_GROUP(scifb0_clk_b),
+	SH_PFC_PIN_GROUP(scifb0_ctrl_b),
+	SH_PFC_PIN_GROUP(scifb0_data_c),
+	SH_PFC_PIN_GROUP(scifb0_clk_c),
+	SH_PFC_PIN_GROUP(scifb0_data_d),
+	SH_PFC_PIN_GROUP(scifb0_clk_d),
+	SH_PFC_PIN_GROUP(scifb1_data),
+	SH_PFC_PIN_GROUP(scifb1_clk),
+	SH_PFC_PIN_GROUP(scifb1_ctrl),
+	SH_PFC_PIN_GROUP(scifb1_data_b),
+	SH_PFC_PIN_GROUP(scifb1_clk_b),
+	SH_PFC_PIN_GROUP(scifb1_data_c),
+	SH_PFC_PIN_GROUP(scifb1_clk_c),
+	SH_PFC_PIN_GROUP(scifb1_data_d),
+	SH_PFC_PIN_GROUP(scifb2_data),
+	SH_PFC_PIN_GROUP(scifb2_clk),
+	SH_PFC_PIN_GROUP(scifb2_ctrl),
+	SH_PFC_PIN_GROUP(scifb2_data_b),
+	SH_PFC_PIN_GROUP(scifb2_clk_b),
+	SH_PFC_PIN_GROUP(scifb2_ctrl_b),
+	SH_PFC_PIN_GROUP(scifb2_data_c),
+	SH_PFC_PIN_GROUP(scifb2_clk_c),
+	SH_PFC_PIN_GROUP(scifb2_data_d),
 	SH_PFC_PIN_GROUP(sdhi0_data1),
 	SH_PFC_PIN_GROUP(sdhi0_data4),
 	SH_PFC_PIN_GROUP(sdhi0_ctrl),
@@ -3785,6 +4420,9 @@ static const char * const can1_groups[] = {
 	"can_clk_d",
 };
 
+static const char * const tpu_groups[] = {
+	"tpu_to3",
+};
 
 static const char * const du_groups[] = {
 	"du_rgb666",
@@ -3882,6 +4520,18 @@ static const char * const i2c4_groups[] = {
 	"i2c4_c",
 };
 
+static const char * const i2c7_groups[] = {
+	"i2c7",
+	"i2c7_b",
+	"i2c7_c",
+};
+
+static const char * const i2c8_groups[] = {
+	"i2c8",
+	"i2c8_b",
+	"i2c8_c",
+};
+
 static const char * const intc_groups[] = {
 	"intc_irq0",
 	"intc_irq1",
@@ -4023,6 +4673,73 @@ static const char * const scif5_groups[] = {
 	"scif5_data",
 	"scif5_data_b",
 };
+static const char * const scifa0_groups[] = {
+	"scifa0_data",
+	"scifa0_data_b",
+};
+static const char * const scifa1_groups[] = {
+	"scifa1_data",
+	"scifa1_clk",
+	"scifa1_data_b",
+	"scifa1_clk_b",
+	"scifa1_data_c",
+};
+static const char * const scifa2_groups[] = {
+	"scifa2_data",
+	"scifa2_clk",
+	"scifa2_data_b",
+};
+static const char * const scifa3_groups[] = {
+	"scifa3_data",
+	"scifa3_clk",
+	"scifa3_data_b",
+	"scifa3_clk_b",
+	"scifa3_data_c",
+	"scifa3_clk_c",
+};
+static const char * const scifa4_groups[] = {
+	"scifa4_data",
+	"scifa4_data_b",
+	"scifa4_data_c",
+};
+static const char * const scifa5_groups[] = {
+	"scifa5_data",
+	"scifa5_data_b",
+	"scifa5_data_c",
+};
+static const char * const scifb0_groups[] = {
+	"scifb0_data",
+	"scifb0_clk",
+	"scifb0_ctrl",
+	"scifb0_data_b",
+	"scifb0_clk_b",
+	"scifb0_ctrl_b",
+	"scifb0_data_c",
+	"scifb0_clk_c",
+	"scifb0_data_d",
+	"scifb0_clk_d",
+};
+static const char * const scifb1_groups[] = {
+	"scifb1_data",
+	"scifb1_clk",
+	"scifb1_ctrl",
+	"scifb1_data_b",
+	"scifb1_clk_b",
+	"scifb1_data_c",
+	"scifb1_clk_c",
+	"scifb1_data_d",
+};
+static const char * const scifb2_groups[] = {
+	"scifb2_data",
+	"scifb2_clk",
+	"scifb2_ctrl",
+	"scifb2_data_b",
+	"scifb2_clk_b",
+	"scifb2_ctrl_b",
+	"scifb0_data_c",
+	"scifb2_clk_c",
+	"scifb2_data_d",
+};
 
 static const char * const sdhi0_groups[] = {
 	"sdhi0_data1",
@@ -4141,6 +4858,7 @@ static const char * const avb_groups[] = {
 
 static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(audio_clk),
+	SH_PFC_FUNCTION(tpu),
 	SH_PFC_FUNCTION(can0),
 	SH_PFC_FUNCTION(can1),
 	SH_PFC_FUNCTION(du),
@@ -4156,6 +4874,8 @@ static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(i2c2),
 	SH_PFC_FUNCTION(i2c3),
 	SH_PFC_FUNCTION(i2c4),
+	SH_PFC_FUNCTION(i2c7),
+	SH_PFC_FUNCTION(i2c8),
 	SH_PFC_FUNCTION(intc),
 	SH_PFC_FUNCTION(mmc),
 	SH_PFC_FUNCTION(msiof0),
@@ -4168,6 +4888,15 @@ static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(scif3),
 	SH_PFC_FUNCTION(scif4),
 	SH_PFC_FUNCTION(scif5),
+	SH_PFC_FUNCTION(scifa0),
+	SH_PFC_FUNCTION(scifa1),
+	SH_PFC_FUNCTION(scifa2),
+	SH_PFC_FUNCTION(scifa3),
+	SH_PFC_FUNCTION(scifa4),
+	SH_PFC_FUNCTION(scifa5),
+	SH_PFC_FUNCTION(scifb0),
+	SH_PFC_FUNCTION(scifb1),
+	SH_PFC_FUNCTION(scifb2),
 	SH_PFC_FUNCTION(sdhi0),
 	SH_PFC_FUNCTION(sdhi1),
 	SH_PFC_FUNCTION(sdhi2),
@@ -4514,13 +5243,13 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 	{ PINMUX_CFG_REG_VAR("IPSR1", 0xE6060024, 32,
 			     3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2) {
 		/* IP1_31_29 [3] */
-		FN_A18, FN_DREQ1, 0, 0, 0,
+		FN_A18, FN_DREQ1, FN_SCIFA1_RXD_C, 0, FN_SCIFB1_RXD_C,
 		0, 0, 0,
 		/* IP1_28_26 [3] */
 		FN_A17, FN_DACK2_B, 0, FN_SDA0_C,
 		0, 0, 0, 0,
 		/* IP1_25_23 [3] */
-		FN_A16, FN_DREQ2_B, 0, 0, 0,
+		FN_A16, FN_DREQ2_B, 0, 0, FN_SCIFA1_SCK_B,
 		0, 0, 0,
 		/* IP1_22_20 [3] */
 		FN_A15, 0,
@@ -4564,24 +5293,24 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP2_20_19 [2] */
 		FN_CS0_N, FN_ATAG0_N_B, FN_SCL1, 0,
 		/* IP2_18_16 [3] */
-		FN_A25, FN_DACK2, FN_SSL, FN_DREQ1_C, FN_RX1, 0,
+		FN_A25, FN_DACK2, FN_SSL, FN_DREQ1_C, FN_RX1, FN_SCIFA1_RXD,
 		0, 0,
 		/* IP2_15_13 [3] */
-		FN_A24, FN_DREQ2, FN_IO3, FN_TX1, 0,
+		FN_A24, FN_DREQ2, FN_IO3, FN_TX1, FN_SCIFA1_TXD,
 		0, 0, 0,
-		/* IP2_12_0 [3] */
-		FN_A23, FN_IO2, 0, FN_RX0, 0,
+		/* IP2_12_10 [3] */
+		FN_A23, FN_IO2, 0, FN_RX0, FN_SCIFA0_RXD,
 		0, 0, 0,
 		/* IP2_9_7 [3] */
-		FN_A22, FN_MISO_IO1, 0, FN_TX0, 0,
+		FN_A22, FN_MISO_IO1, 0, FN_TX0, FN_SCIFA0_TXD,
 		0, 0, 0,
 		/* IP2_6_5 [2] */
 		FN_A21, FN_ATAWR0_N_B, FN_MOSI_IO0, 0,
 		/* IP2_4_3 [2] */
 		FN_A20, FN_SPCLK, 0, 0,
 		/* IP2_2_0 [3] */
-		FN_A19, FN_DACK1, 0, 0,
-		0, 0, 0, 0, }
+		FN_A19, FN_DACK1, FN_SCIFA1_TXD_C, 0,
+		FN_SCIFB1_TXD_C, 0, FN_SCIFB1_SCK_B, 0, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR3", 0xE606002C, 32,
 			     1, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3) {
@@ -4589,34 +5318,34 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0,
 		/* IP3_30_28 [3] */
 		FN_SSI_WS0129, FN_HTX0_C, FN_HTX2_C,
-		0, 0,
+		FN_SCIFB0_TXD_C, FN_SCIFB2_TXD_C,
 		0, 0, 0,
 		/* IP3_27_25 [3] */
 		FN_SSI_SCK0129, FN_HRX0_C, FN_HRX2_C,
-		0, 0,
+		FN_SCIFB0_RXD_C, FN_SCIFB2_RXD_C,
 		0, 0, 0,
 		/* IP3_24_22 [3] */
-		0, 0, FN_HSCK0_C, FN_HSCK2_C, 0,
-		0, FN_DREQ2_C, FN_HTX2_D,
+		0, 0, FN_HSCK0_C, FN_HSCK2_C, FN_SCIFB0_SCK_B,
+		FN_SCIFB2_SCK_B, FN_DREQ2_C, FN_HTX2_D,
 		/* IP3_21_20 [2] */
 		FN_DACK0, FN_DRACK0, 0, 0,
 		/* IP3_19_18 [2] */
 		FN_DREQ0, FN_PWM3, FN_TPU_TO3, 0,
 		/* IP3_17_16 [2] */
-		FN_EX_WAIT0, FN_HRTS2_N_B, 0, 0,
+		FN_EX_WAIT0, FN_HRTS2_N_B, FN_SCIFB0_CTS_N_B, 0,
 		/* IP3_15_14 [2] */
-		FN_WE1_N, FN_ATARD0_N_B, FN_HTX2_B, 0,
+		FN_WE1_N, FN_ATARD0_N_B, FN_HTX2_B, FN_SCIFB0_RTS_N_B,
 		/* IP3_13_12 [2] */
-		FN_WE0_N, FN_HCTS2_N_B, 0, 0,
+		FN_WE0_N, FN_HCTS2_N_B, FN_SCIFB0_TXD_B, 0,
 		/* IP3_11_9 [3] */
-		FN_RD_WR_N, FN_HRX2_B, 0, 0, FN_DREQ1_D,
+		FN_RD_WR_N, FN_HRX2_B, 0, FN_SCIFB0_RXD_B, FN_DREQ1_D,
 		0, 0, 0,
 		/* IP3_8_6 [3] */
 		FN_BS_N, FN_ATACS10_N, FN_MSIOF2_SS2, FN_HTX1_B,
-		0, FN_PWM2, FN_TPU_TO2, 0,
+		FN_SCIFB1_TXD_B, FN_PWM2, FN_TPU_TO2, 0,
 		/* IP3_5_3 [3] */
 		FN_EX_CS5_N, FN_ATACS00_N, FN_MSIOF2_SS1, FN_HRX1_B,
-		0, FN_PWM1, FN_TPU_TO1, 0,
+		FN_SCIFB1_RXD_B, FN_PWM1, FN_TPU_TO1, 0,
 		/* IP3_2_0 [3] */
 		FN_EX_CS4_N, FN_ATARD0_N, FN_MSIOF2_RXD, 0, FN_EX_WAIT2,
 		0, 0, 0, }
@@ -4645,23 +5374,22 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SSI_SDATA2, 0, FN_TX2_E, FN_HRTS1_N_E,
 		0, 0, 0, 0,
 		/* IP4_15_13 [3] */
-		FN_SSI_WS2, FN_SDA2, 0, FN_RX2_E,
-		0, FN_HCTS1_N_E,
+		FN_SSI_WS2, FN_SDA2, 0, FN_RX2_E, 0, FN_HCTS1_N_E,
 		0, 0,
 		/* IP4_12_10 [3] */
 		FN_SSI_SCK2, FN_SCL2, 0, 0, FN_HSCK1_E,
 		0, 0, 0,
 		/* IP4_9_8 [2] */
-		FN_SSI_SDATA1, FN_SDA1_B, 0, FN_MSIOF2_RXD_C,
+		FN_SSI_SDATA1, FN_SDA1_B, FN_SDA8_B, FN_MSIOF2_RXD_C,
 		/* IP4_7_5 [3] */
-		FN_SSI_WS1, FN_SCL1_B, 0, FN_MSIOF2_TXD_C, 0,
+		FN_SSI_WS1, FN_SCL1_B, FN_SCL8_B, FN_MSIOF2_TXD_C, 0,
 		0, 0, 0,
 		/* IP4_4_2 [3] */
-		FN_SSI_SCK1, FN_SDA0_B, 0,
+		FN_SSI_SCK1, FN_SDA0_B, FN_SDA7_B,
 		FN_MSIOF2_SYNC_C, 0,
 		0, 0, 0,
 		/* IP4_1_0 [2] */
-		FN_SSI_SDATA0, FN_SCL0_B, 0, FN_MSIOF2_SCK_C, }
+		FN_SSI_SDATA0, FN_SCL0_B, FN_SCL7_B, FN_MSIOF2_SCK_C, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR5", 0xE6060034, 32,
 			     3, 3, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3) {
@@ -4707,12 +5435,10 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0, 0, 0,
 		/* IP6_29_27 [3] */
 		FN_IRQ8, FN_HRTS1_N_C, FN_MSIOF1_RXD_B,
-		0, 0,
-		0, 0, 0,
+		0, 0, 0, 0, 0,
 		/* IP6_26_24 [3] */
 		FN_IRQ7, FN_HCTS1_N_C, FN_MSIOF1_TXD_B,
-		0, 0,
-		0, 0, 0,
+		0, 0, 0, 0, 0,
 		/* IP6_23_21 [3] */
 		FN_IRQ6, FN_HSCK1_C, FN_MSIOF1_SS2_B,
 		FN_SDA1_E, FN_MSIOF2_SYNC_E,
@@ -4725,20 +5451,20 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP6_15_14 [2] */
 		FN_IRQ3, FN_SCL4_C, FN_MSIOF2_TXD_E, 0,
 		/* IP6_13_12 [2] */
-		FN_IRQ2, 0, 0, 0,
+		FN_IRQ2, FN_SCIFB1_TXD_D, 0, 0,
 		/* IP6_11_10 [2] */
-		FN_IRQ1, 0, 0, 0,
+		FN_IRQ1, FN_SCIFB1_SCK_C, 0, 0,
 		/* IP6_9_8 [2] */
-		FN_IRQ0, 0, 0, 0,
+		FN_IRQ0, FN_SCIFB1_RXD_D, 0, 0,
 		/* IP6_7_6 [2] */
-		FN_AUDIO_CLKOUT, FN_MSIOF1_SS1_B, FN_TX2, 0,
+		FN_AUDIO_CLKOUT, FN_MSIOF1_SS1_B, FN_TX2, FN_SCIFA2_TXD,
 		/* IP6_5_3 [3] */
-		FN_AUDIO_CLKC, 0, FN_MSIOF1_SYNC_B, FN_RX2,
-		0, 0,
+		FN_AUDIO_CLKC, FN_SCIFB0_SCK_C, FN_MSIOF1_SYNC_B, FN_RX2,
+		FN_SCIFA2_RXD, 0,
 		0, 0,
 		/* IP6_2_0 [3] */
 		FN_AUDIO_CLKB, 0, FN_MSIOF1_SCK_B,
-		FN_SCIF_CLK, 0, 0,
+		FN_SCIF_CLK, FN_DVC_MUTE, 0,
 		0, 0, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR7", 0xE606003C, 32,
@@ -4747,15 +5473,15 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0, 0, 0,
 		/* IP7_29_27 [3] */
 		FN_DU1_DG2, 0, FN_VI1_DATA4_B, FN_SCIF1_SCK_B,
-		0, FN_SSI_SCK78_B,
+		FN_SCIFA1_SCK, FN_SSI_SCK78_B,
 		0, 0,
 		/* IP7_26_24 [3] */
 		FN_DU1_DG1, 0, FN_VI1_DATA3_B, FN_RX1_B,
-		0, FN_MSIOF2_SS2_B,
+		FN_SCIFA1_RXD_B, FN_MSIOF2_SS2_B,
 		0, 0,
 		/* IP7_23_21 [3] */
 		FN_DU1_DG0, 0, FN_VI1_DATA2_B, FN_TX1_B,
-		0, FN_MSIOF2_SS1_B,
+		FN_SCIFA1_TXD_B, FN_MSIOF2_SS1_B,
 		0, 0,
 		/* IP7_20_19 [2] */
 		FN_DU1_DR7, 0, FN_SSI_SDATA1_B, 0,
@@ -4771,11 +5497,11 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_DU1_DR2, 0, FN_SSI_SCK0129_B, 0,
 		/* IP7_8_6 [3] */
 		FN_DU1_DR1, 0, FN_VI1_DATA1_B, FN_RX0_B,
-		0, FN_MSIOF2_SYNC_B,
+		FN_SCIFA0_RXD_B, FN_MSIOF2_SYNC_B,
 		0, 0,
 		/* IP7_5_3 [3] */
 		FN_DU1_DR0, 0, FN_VI1_DATA0_B, FN_TX0_B,
-		0, FN_MSIOF2_SCK_B,
+		FN_SCIFA0_TXD_B, FN_MSIOF2_SCK_B,
 		0, 0,
 		/* IP7_2_0 [3] */
 		FN_IRQ9, FN_DU1_DOTCLKIN_B, FN_CAN_CLK_D, 0,
@@ -4787,7 +5513,7 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP8_31 [1] */
 		0, 0,
 		/* IP8_30_28 [3] */
-		FN_DU1_DB5, 0, FN_TX3, 0, FN_CAN1_TX,
+		FN_DU1_DB5, 0, FN_TX3, FN_SCIFA3_TXD, FN_CAN1_TX,
 		0, 0, 0,
 		/* IP8_27_26 [2] */
 		FN_DU1_DB4, 0, FN_VI1_FIELD_B, FN_CAN1_RX,
@@ -4795,31 +5521,31 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_DU1_DB3, 0, FN_VI1_CLKENB_B, 0,
 		/* IP8_23_21 [3] */
 		FN_DU1_DB2, 0, FN_VI1_VSYNC_N_B, FN_SCIF2_SCK_B,
-		0, FN_SSI_SDATA9_B,
+		FN_SCIFA2_SCK, FN_SSI_SDATA9_B,
 		0, 0,
 		/* IP8_20_18 [3] */
 		FN_DU1_DB1, 0, FN_VI1_HSYNC_N_B, FN_RX2_B,
-		0, FN_MSIOF2_RXD_B,
+		FN_SCIFA2_RXD_B, FN_MSIOF2_RXD_B,
 		0, 0,
 		/* IP8_17_15 [3] */
 		FN_DU1_DB0, 0, FN_VI1_CLK_B, FN_TX2_B,
-		0, FN_MSIOF2_TXD_B,
+		FN_SCIFA2_TXD_B, FN_MSIOF2_TXD_B,
 		0, 0,
 		/* IP8_14_12 [3] */
 		FN_DU1_DG7, 0, FN_HTX0_B,
-		0, FN_SSI_WS9_B,
+		FN_SCIFB2_RTS_N_B, FN_SSI_WS9_B,
 		0, 0, 0,
 		/* IP8_11_9 [3] */
 		FN_DU1_DG6, 0, FN_HRTS0_N_B,
-		0, FN_SSI_SCK9_B,
+		FN_SCIFB2_CTS_N_B, FN_SSI_SCK9_B,
 		0, 0, 0,
 		/* IP8_8_6 [3] */
 		FN_DU1_DG5, 0, FN_VI1_DATA7_B, FN_HCTS0_N_B,
-		0, FN_SSI_SDATA8_B,
+		FN_SCIFB2_TXD_B, FN_SSI_SDATA8_B,
 		0, 0,
 		/* IP8_5_3 [3] */
 		FN_DU1_DG4, 0, FN_VI1_DATA6_B, FN_HRX0_B,
-		0, FN_SSI_SDATA7_B,
+		FN_SCIFB2_RXD_B, FN_SSI_SDATA7_B,
 		0, 0,
 		/* IP8_2_0 [3] */
 		FN_DU1_DG3, 0, FN_VI1_DATA5_B, 0, FN_SSI_WS78_B,
@@ -4828,18 +5554,18 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 	{ PINMUX_CFG_REG_VAR("IPSR9", 0xE6060044, 32,
 			     3, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 3, 1, 1, 3, 3) {
 		/* IP9_31_29 [3] */
-		FN_VI0_G0, 0, 0, FN_SCL4,
-		FN_HCTS2_N, 0, FN_ATAWR1_N, 0,
+		FN_VI0_G0, FN_SCL8, 0, FN_SCL4,
+		FN_HCTS2_N, FN_SCIFB2_CTS_N, FN_ATAWR1_N, 0,
 		/* IP9_28_27 [2] */
-		FN_VI0_DATA3_VI0_B3, FN_SCIF3_SCK_B, 0, 0,
+		FN_VI0_DATA3_VI0_B3, FN_SCIF3_SCK_B, FN_SCIFA3_SCK_B, 0,
 		/* IP9_26_25 [2] */
-		FN_VI0_VSYNC_N, FN_RX5, 0, FN_TS_SPSYNC0_D,
+		FN_VI0_VSYNC_N, FN_RX5, FN_SCIFA5_RXD, FN_TS_SPSYNC0_D,
 		/* IP9_24_23 [2] */
-		FN_VI0_HSYNC_N, FN_TX5, 0, FN_TS_SDEN0_D,
+		FN_VI0_HSYNC_N, FN_TX5, FN_SCIFA5_TXD, FN_TS_SDEN0_D,
 		/* IP9_22_21 [2] */
-		FN_VI0_FIELD, FN_RX4, 0, FN_TS_SCK0_D,
+		FN_VI0_FIELD, FN_RX4, FN_SCIFA4_RXD, FN_TS_SCK0_D,
 		/* IP9_20_19 [2] */
-		FN_VI0_CLKENB, FN_TX4, 0, FN_TS_SDATA0_D,
+		FN_VI0_CLKENB, FN_TX4, FN_SCIFA4_TXD, FN_TS_SDATA0_D,
 		/* IP9_18_17 [2] */
 		FN_DU1_CDE, 0, FN_PWM4_B, 0,
 		/* IP9_16 [1] */
@@ -4862,10 +5588,10 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_DU1_DOTCLKIN, 0,
 		/* IP9_5_3 [3] */
 		FN_DU1_DB7, 0, FN_SDA3_C,
-		FN_SCIF3_SCK, 0,
+		FN_SCIF3_SCK, FN_SCIFA3_SCK,
 		0, 0, 0,
 		/* IP9_2_0 [3] */
-		FN_DU1_DB6, 0, FN_SCL3_C, FN_RX3, 0,
+		FN_DU1_DB6, 0, FN_SCL3_C, FN_RX3, FN_SCIFA3_RXD,
 		0, 0, 0, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR10", 0xE6060048, 32,
@@ -4890,20 +5616,20 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_VI0_G6, FN_VI2_CLK, 0, 0,
 		/* IP10_14_12 [3] */
 		FN_VI0_G5, FN_VI2_FIELD, 0, 0,
-		FN_CAN0_TX_E, FN_HTX1_D, 0, 0,
+		FN_CAN0_TX_E, FN_HTX1_D, FN_SCIFB0_TXD_D, 0,
 		/* IP10_11_9 [3] */
 		FN_VI0_G4, FN_VI2_CLKENB, 0,
-		FN_HTX2, 0, 0,
+		FN_HTX2, FN_SCIFB2_TXD, FN_SCIFB0_SCK_D,
 		0, 0,
 		/* IP10_8_6 [3] */
 		FN_VI0_G3, FN_VI2_VSYNC_N, 0, FN_SDA3_B,
-		FN_HRX2, 0, FN_ATACS01_N, 0,
+		FN_HRX2, FN_SCIFB2_RXD, FN_ATACS01_N, 0,
 		/* IP10_5_3 [3] */
 		FN_VI0_G2, FN_VI2_HSYNC_N, 0, FN_SCL3_B,
-		FN_HSCK2, 0, FN_ATARD1_N, 0,
+		FN_HSCK2, FN_SCIFB2_SCK, FN_ATARD1_N, 0,
 		/* IP10_2_0 [3] */
-		FN_VI0_G1, 0, 0, FN_SDA4,
-		FN_HRTS2_N, 0, FN_ATADIR1_N, 0, }
+		FN_VI0_G1, FN_SDA8, 0, FN_SDA4,
+		FN_HRTS2_N, FN_SCIFB2_RTS_N, FN_ATADIR1_N, 0, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR11", 0xE606004C, 32,
 			     2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
@@ -4936,15 +5662,15 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_VI1_CLKENB, FN_AVB_RXD2, FN_TS_SDEN0_B, 0,
 		/* IP11_14_12 [3] */
 		FN_VI1_VSYNC_N, FN_AVB_RXD1, FN_TS_SCK0_B,
-		FN_RX4_B, 0,
+		FN_RX4_B, FN_SCIFA4_RXD_B,
 		0, 0, 0,
 		/* IP11_11_9 [3] */
 		FN_VI1_HSYNC_N, FN_AVB_RXD0, FN_TS_SDATA0_B,
-		FN_TX4_B, 0,
+		FN_TX4_B, FN_SCIFA4_TXD_B,
 		0, 0, 0,
 		/* IP11_8_6 [3] */
 		FN_VI0_R7, 0, FN_RX1_C, FN_CAN0_RX_E,
-		FN_SDA4_B, FN_HRX1_D, 0, 0,
+		FN_SDA4_B, FN_HRX1_D, FN_SCIFB0_RXD_D, 0,
 		/* IP11_5_3 [3] */
 		FN_VI0_R6, FN_VI2_DATA7, 0, FN_TX1_C, FN_SCL4_B,
 		0, 0, 0,
@@ -4957,11 +5683,11 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP12_31_30 [2] */
 		0, 0, 0, 0,
 		/* IP12_29_27 [3] */
-		0, FN_AVB_TX_EN, 0,
+		0, FN_AVB_TX_EN, FN_SCIFB2_RXD_D,
 		0, FN_MSIOF0_SCK_C,
 		0, 0, 0,
 		/* IP12_26_24 [3] */
-		0, FN_AVB_TXD7, 0,
+		0, FN_AVB_TXD7, FN_SCIFB2_TXD_D,
 		0, FN_MSIOF0_SYNC_C,
 		0, 0, 0,
 		/* IP12_23_22 [2] */
@@ -4973,11 +5699,11 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP12_17_16 [2] */
 		FN_ETH_TX_EN, FN_AVB_TXD3, FN_TCLK1_B, FN_CAN_CLK_B,
 		/* IP12_15_13 [3] */
-		FN_ETH_TXD1, FN_AVB_TXD2, 0,
+		FN_ETH_TXD1, FN_AVB_TXD2, FN_SCIFA3_TXD_B,
 		FN_CAN1_TX_C, FN_MSIOF1_TXD_E,
 		0, 0, 0,
 		/* IP12_12_10 [3] */
-		FN_ETH_REFCLK, FN_AVB_TXD1, 0,
+		FN_ETH_REFCLK, FN_AVB_TXD1, FN_SCIFA3_RXD_B,
 		FN_CAN1_RX_C, FN_MSIOF1_SYNC_E,
 		0, 0, 0,
 		/* IP12_9_7 [3] */
@@ -4989,9 +5715,9 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SCL2_D, FN_MSIOF1_RXD_E,
 		0, 0, 0,
 		/* IP12_3_2 [2] */
-		FN_ETH_RXD0, FN_AVB_PHY_INT, FN_SDA3, 0,
+		FN_ETH_RXD0, FN_AVB_PHY_INT, FN_SDA3, FN_SDA7,
 		/* IP12_1_0 [2] */
-		FN_ETH_RX_ER, FN_AVB_CRS, FN_SCL3, 0, }
+		FN_ETH_RX_ER, FN_AVB_CRS, FN_SCL3, FN_SCL7, }
 	},
 	{ PINMUX_CFG_REG_VAR("IPSR13", 0xE6060054, 32,
 			     1, 3, 1, 1, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 1,
@@ -5013,11 +5739,11 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SD1_CMD, 0,
 		/* IP13_21_19 [3] */
 		FN_SD0_WP, FN_MMC_D7_B, 0, FN_CAN0_TX_F,
-		0, FN_RX3_C,
+		FN_SCIFA5_RXD_B, FN_RX3_C,
 		0, 0,
 		/* IP13_18_16 [3] */
 		FN_SD0_CD, FN_MMC_D6_B, 0, FN_CAN0_RX_F,
-		0, FN_TX3_C,
+		FN_SCIFA5_TXD_B, FN_TX3_C,
 		0, 0,
 		/* IP13_15 [1] */
 		FN_SD0_DATA3, FN_SSL_B,
@@ -5040,7 +5766,7 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP13_4_3 [2] */
 		0, FN_AVB_TX_CLK, 0, FN_MSIOF0_SS2_C,
 		/* IP13_2_0 [3] */
-		0, FN_AVB_TX_ER, 0,
+		0, FN_AVB_TX_ER, FN_SCIFB2_SCK_C,
 		0, FN_MSIOF0_SS1_C,
 		0, 0, 0, }
 	},
@@ -5048,10 +5774,10 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 			     3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 2) {
 		/* IP14_31_29 [3] */
 		FN_MSIOF0_SS2, FN_MMC_D7, 0, FN_RX0_E,
-		FN_VI1_VSYNC_N_C, 0, FN_VI1_G5_B, 0,
+		FN_VI1_VSYNC_N_C, FN_SDA7_C, FN_VI1_G5_B, 0,
 		/* IP14_28_26 [3] */
 		FN_MSIOF0_SS1, FN_MMC_D6, 0, FN_TX0_E,
-		FN_VI1_HSYNC_N_C, 0, FN_VI1_G4_B, 0,
+		FN_VI1_HSYNC_N_C, FN_SCL7_C, FN_VI1_G4_B, 0,
 		/* IP14_25_23 [3] */
 		FN_MSIOF0_RXD, 0, 0, FN_VI1_DATA0_C, FN_VI1_G3_B,
 		0, 0, 0,
@@ -5067,10 +5793,10 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_VI1_CLK_C, FN_VI1_G0_B,
 		0, 0,
 		/* IP14_13_11 [3] */
-		FN_SD2_WP, FN_MMC_D5, 0, FN_RX5_B, 0,
+		FN_SD2_WP, FN_MMC_D5, FN_SDA8_C, FN_RX5_B, FN_SCIFA5_RXD_C,
 		0, 0, 0,
 		/* IP14_10_8 [3] */
-		FN_SD2_CD, FN_MMC_D4, 0, FN_TX5_B, 0,
+		FN_SD2_CD, FN_MMC_D4, FN_SCL8_C, FN_TX5_B, FN_SCIFA5_TXD_C,
 		0, 0, 0,
 		/* IP14_7 [1] */
 		FN_SD2_DATA3, FN_MMC_D3,
@@ -5092,34 +5818,34 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		/* IP15_31_30 [2] */
 		0, 0, 0, 0,
 		/* IP15_29_27 [3] */
-		FN_HTX0, 0, 0, 0,
+		FN_HTX0, FN_SCIFB0_TXD, 0, 0,
 		FN_CAN0_TX_B, FN_VI1_DATA5_C,
 		0, 0,
 		/* IP15_26_24 [3] */
-		FN_HRX0, 0, 0, 0,
+		FN_HRX0, FN_SCIFB0_RXD, 0, 0,
 		FN_CAN0_RX_B, FN_VI1_DATA4_C,
 		0, 0,
 		/* IP15_23_21 [3] */
-		FN_HSCK0, 0, 0, 0, FN_CAN_CLK,
+		FN_HSCK0, FN_SCIFB0_SCK, 0, 0, FN_CAN_CLK,
 		FN_TCLK2, FN_VI1_DATA3_C, 0,
 		/* IP15_20_18 [3] */
-		FN_HRTS0_N, 0, 0, 0, FN_VI1_DATA2_C,
+		FN_HRTS0_N, FN_SCIFB0_RTS_N, 0, 0, FN_VI1_DATA2_C,
 		0, 0, 0,
 		/* IP15_17_15 [3] */
-		FN_HCTS0_N, 0, 0, 0,
+		FN_HCTS0_N, FN_SCIFB0_CTS_N, 0, 0,
 		FN_TCLK1, FN_VI1_DATA1_C,
 		0, 0,
 		/* IP15_14_12 [3] */
-		0, FN_RX4_C, 0, FN_PWM6,
-		FN_VI1_G7_B, 0,
+		0, FN_RX4_C, FN_SCIFA4_RXD_C, FN_PWM6,
+		FN_VI1_G7_B, FN_SCIFA3_SCK_C,
 		0, 0,
 		/* IP15_11_9 [3] */
-		0, FN_TX4_C, 0, FN_PWM5,
-		FN_VI1_G6_B, 0,
+		0, FN_TX4_C, FN_SCIFA4_TXD_C, FN_PWM5,
+		FN_VI1_G6_B, FN_SCIFA3_RXD_C,
 		0, 0,
 		/* IP15_8_6 [3] */
 		0, FN_DU1_DOTCLKIN_C, FN_AUDIO_CLKB_B,
-		FN_PWM5_B, 0,
+		FN_PWM5_B, FN_SCIFA3_TXD_C,
 		0, 0, 0,
 		/* IP15_5_4 [2] */
 		0, 0, FN_CAN1_RX_D, 0,
@@ -5146,17 +5872,17 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0, 0, 0, 0, 0, 0, 0,
 		0, 0, 0, 0, 0, 0, 0, 0,
 		/* IP16_11_10 [2] */
-		FN_HRTS1_N, 0, 0, FN_CAN1_RX_B,
+		FN_HRTS1_N, FN_SCIFB1_RTS_N, 0, FN_CAN1_RX_B,
 		/* IP16_9_8 [2] */
-		FN_HCTS1_N, 0, 0, FN_CAN1_TX_B,
+		FN_HCTS1_N, FN_SCIFB1_CTS_N, 0, FN_CAN1_TX_B,
 		/* IP16_7_6 [2] */
-		FN_HSCK1, 0, 0, 0,
+		FN_HSCK1, FN_SCIFB1_SCK, 0, 0,
 		/* IP16_5_3 [3] */
-		FN_HTX1, 0, FN_VI1_R1_B,
+		FN_HTX1, FN_SCIFB1_TXD, FN_VI1_R1_B,
 		0, FN_VI1_DATA7_C,
 		0, 0, 0,
 		/* IP16_2_0 [3] */
-		FN_HRX1, 0, FN_VI1_R0_B,
+		FN_HRX1, FN_SCIFB1_RXD, FN_VI1_R0_B,
 		0, FN_VI1_DATA6_C,
 		0, 0, 0, }
 	},
@@ -5167,16 +5893,21 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0,
 		/* SEL_SCIF1 [2] */
 		FN_SEL_SCIF1_0, FN_SEL_SCIF1_1, FN_SEL_SCIF1_2, FN_SEL_SCIF1_3,
+		/* SEL_SCIFB [2] */
+		FN_SEL_SCIFB_0, FN_SEL_SCIFB_1, FN_SEL_SCIFB_2, FN_SEL_SCIFB_3,
+		/* SEL_SCIFB2 [2] */
+		FN_SEL_SCIFB2_0, FN_SEL_SCIFB2_1,
+		FN_SEL_SCIFB2_2, FN_SEL_SCIFB2_3,
+		/* SEL_SCIFB1 [3] */
+		FN_SEL_SCIFB1_0, FN_SEL_SCIFB1_1,
+		FN_SEL_SCIFB1_2, FN_SEL_SCIFB1_3,
 		0, 0, 0, 0,
-		0, 0,
-		0, 0,
-		0, 0,
-		0, 0,
-		0, 0, 0, 0,
-		0, 0, 0, 0,
+		/* SEL_SCIFA1 [2] */
+		FN_SEL_SCIFA1_0, FN_SEL_SCIFA1_1, FN_SEL_SCIFA1_2, 0,
 		/* SEL_SSI9 [1] */
 		FN_SEL_SSI9_0, FN_SEL_SSI9_1,
-		0, 0,
+		/* SEL_SCFA [1] */
+		FN_SEL_SCFA_0, FN_SEL_SCFA_1,
 		/* SEL_QSP [1] */
 		FN_SEL_QSP_0, FN_SEL_QSP_1,
 		/* SEL_SSI7 [1] */
@@ -5202,7 +5933,7 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 	},
 	{ PINMUX_CFG_REG_VAR("MOD_SEL2", 0xE6060094, 32,
 			     3, 1, 1, 3, 2, 1, 1, 2, 2,
-			     1, 3, 2, 1, 2, 2, 2, 1, 1, 1) {
+			     1, 3, 2, 3, 2, 2, 2, 1) {
 		/* SEL_SCIF0 [3] */
 		FN_SEL_SCIF0_0, FN_SEL_SCIF0_1, FN_SEL_SCIF0_2,
 		FN_SEL_SCIF0_3, FN_SEL_SCIF0_4,
@@ -5219,45 +5950,49 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SEL_CAN1_0, FN_SEL_CAN1_1, FN_SEL_CAN1_2, FN_SEL_CAN1_3,
 		/* RESEVED [1] */
 		0, 0,
-		0, 0,
+		/* SEL_SCIFA2 [1] */
+		FN_SEL_SCIFA2_0, FN_SEL_SCIFA2_1,
 		/* SEL_SCIF4 [2] */
 		FN_SEL_SCIF4_0, FN_SEL_SCIF4_1, FN_SEL_SCIF4_2, 0,
 		/* RESEVED [2] */
 		0, 0, 0, 0,
 		/* SEL_ADG [1] */
 		FN_SEL_ADG_0, FN_SEL_ADG_1,
-		0, 0, 0,
-		0, 0,
-		0, 0, 0,
-		0, 0, 0, 0,
-		/* RESEVED [1] */
-		0, 0,
-		0, 0, 0, 0,
-		0, 0, 0, 0,
+		/* RESEVED [3] */
+		0, 0, 0, 0, 0, 0, 0, 0,
+		/* SEL_SCIFA5 [2] */
+		FN_SEL_SCIFA5_0, FN_SEL_SCIFA5_1, FN_SEL_SCIFA5_2, 0,
+		/* RESEVED [3] */
+		0, 0, 0, 0, 0, 0, 0, 0,
+		/* SEL_SCIFA4 [2] */
+		FN_SEL_SCIFA4_0, FN_SEL_SCIFA4_1, FN_SEL_SCIFA4_2, 0,
+		/* SEL_SCIFA3 [2] */
+		FN_SEL_SCIFA3_0, FN_SEL_SCIFA3_1, FN_SEL_SCIFA3_2, 0,
+		/* RESEVED [2] */
 		0, 0, 0, 0,
-		0, 0,
-		/* RESEVED [1] */
-		0, 0,
 		/* SEL_SSI8 [1] */
 		FN_SEL_SSI8_0, FN_SEL_SSI8_1, }
 	},
 	{ PINMUX_CFG_REG_VAR("MOD_SEL3", 0xE6060098, 32,
 			     2, 2, 2, 2, 2, 2, 2, 2,
-			     1, 1, 2, 2, 3, 2, 2, 2, 1) {
+			     1, 1, 2, 2, 3, 2, 2, 3, 1) {
 		/* SEL_HSCIF2 [2] */
 		FN_SEL_HSCIF2_0, FN_SEL_HSCIF2_1,
 		FN_SEL_HSCIF2_2, FN_SEL_HSCIF2_3,
 		/* SEL_CANCLK [2] */
 		FN_SEL_CANCLK_0, FN_SEL_CANCLK_1,
 		FN_SEL_CANCLK_2, FN_SEL_CANCLK_3,
-		0, 0, 0, 0,
-		0, 0, 0, 0,
+		/* SEL_IIC8 [2] */
+		FN_SEL_IIC8_0, FN_SEL_IIC8_1, FN_SEL_IIC8_2, 0,
+		/* SEL_IIC7 [2] */
+		FN_SEL_IIC7_0, FN_SEL_IIC7_1, FN_SEL_IIC7_2, 0,
 		/* SEL_IIC4 [2] */
 		FN_SEL_IIC4_0, FN_SEL_IIC4_1, FN_SEL_IIC4_2, 0,
 		/* SEL_IIC3 [2] */
 		FN_SEL_IIC3_0, FN_SEL_IIC3_1, FN_SEL_IIC3_2, FN_SEL_IIC3_3,
 		/* SEL_SCIF3 [2] */
 		FN_SEL_SCIF3_0, FN_SEL_SCIF3_1, FN_SEL_SCIF3_2, FN_SEL_SCIF3_3,
+		/* RESEVED [2] */
 		0, 0, 0, 0,
 		/* SEL_MMC [1] */
 		FN_SEL_MMC_0, FN_SEL_MMC_1,
@@ -5281,7 +6016,7 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		0, 0, }
 	},
 	{ PINMUX_CFG_REG_VAR("MOD_SEL4", 0xE606009C, 32,
-			     3, 2, 2, 1, 1, 1, 1, 3, 2,
+			     3, 2, 2, 2, 2, 3, 2,
 			     2, 3, 1, 1, 1, 2, 2, 2, 2) {
 		/* SEL_SOF1 [3] */
 		FN_SEL_SOF1_0, FN_SEL_SOF1_1, FN_SEL_SOF1_2, FN_SEL_SOF1_3,
@@ -5291,15 +6026,14 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SEL_HSCIF0_0, FN_SEL_HSCIF0_1, FN_SEL_HSCIF0_2, 0,
 		/* SEL_DIS [2] */
 		FN_SEL_DIS_0, FN_SEL_DIS_1, FN_SEL_DIS_2, 0,
-		/* RESEVED [1] */
-		0, 0,
-		0, 0,
-		0, 0,
-		0, 0,
+		/* RESEVED [2] */
+		0, 0, 0, 0,
+		/* RESEVED [2] */
+		0, 0, 0, 0,
 		/* SEL_SCIF2 [3] */
 		FN_SEL_SCIF2_0, FN_SEL_SCIF2_1, FN_SEL_SCIF2_2,
-		FN_SEL_SCIF2_3, FN_SEL_SCIF2_4,
-		0, 0, 0,
+		FN_SEL_SCIF2_3,
+		0, 0, 0, 0,
 		/* RESEVED [2] */
 		0, 0, 0, 0,
 		/* RESEVED [2] */
@@ -5314,6 +6048,7 @@ static const struct pinmux_cfg_reg pinmux_config_regs[] = {
 		FN_SEL_SSI1_0, FN_SEL_SSI1_1,
 		/* SEL_SSI0 [1] */
 		FN_SEL_SSI0_0, FN_SEL_SSI0_1,
+		/* RESEVED [2] */
 		0, 0, 0, 0,
 		/* RESEVED [2] */
 		0, 0, 0, 0,
diff --git a/include/dt-bindings/clock/r8a7743-clock.h b/include/dt-bindings/clock/r8a7743-clock.h
index 66eb98e..0be0287 100644
--- a/include/dt-bindings/clock/r8a7743-clock.h
+++ b/include/dt-bindings/clock/r8a7743-clock.h
@@ -35,13 +35,20 @@
 #define R8A7743_CLK_TMU3		21
 #define R8A7743_CLK_TMU2		22
 #define R8A7743_CLK_CMT0		24
+#define R8A7743_CLK_TMU0		25
 #define R8A7743_CLK_VSP1_DU1		27
 #define R8A7743_CLK_VSP1_DU0		28
 #define R8A7743_CLK_VSP1_S		31
 
 /* MSTP2 */
+#define R8A7743_CLK_SCIFA2		2
+#define R8A7743_CLK_SCIFA1		3
+#define R8A7743_CLK_SCIFA0		4
 #define R8A7743_CLK_MSIOF2		5
+#define R8A7743_CLK_SCIFB0		6
+#define R8A7743_CLK_SCIFB1		7
 #define R8A7743_CLK_MSIOF1		8
+#define R8A7743_CLK_SCIFB2		16
 #define R8A7743_CLK_SYS_DMAC1		18
 #define R8A7743_CLK_SYS_DMAC0		19
 
@@ -51,12 +58,18 @@
 #define R8A7743_CLK_SDHI1		12
 #define R8A7743_CLK_SDHI0		14
 #define R8A7743_CLK_MMCIF0		15
+#define R8A7743_CLK_IIC0		18
 #define R8A7743_CLK_PCIEC		19
+#define R8A7743_CLK_IIC1		23
 #define R8A7743_CLK_SSUSB		28
 #define R8A7743_CLK_CMT1		29
 #define R8A7743_CLK_USBDMAC0		30
 #define R8A7743_CLK_USBDMAC1		31
 
+/* MSTP4 */
+#define R8A7743_CLK_RWDT		2
+#define R8A7743_CLK_IRQC		7
+
 /* MSTP5 */
 #define R8A7743_CLK_AUDIO_DMAC1		1
 #define R8A7743_CLK_AUDIO_DMAC0		2
@@ -102,6 +115,7 @@
 #define R8A7743_CLK_RCAN0		16
 #define R8A7743_CLK_QSPI_MOD		17
 #define R8A7743_CLK_I2C5		25
+#define R8A7743_CLK_IICDVFS		26
 #define R8A7743_CLK_I2C4		27
 #define R8A7743_CLK_I2C3		28
 #define R8A7743_CLK_I2C2		29
@@ -134,5 +148,9 @@
 #define R8A7743_CLK_SRC1		30
 #define R8A7743_CLK_SRC0		31
 
+/* MSTP11 */
+#define R8A7743_CLK_SCIFA3		6
+#define R8A7743_CLK_SCIFA4		7
+#define R8A7743_CLK_SCIFA5		8
 
 #endif /* __DT_BINDINGS_CLOCK_R8A7743_H__ */
-- 
1.9.1


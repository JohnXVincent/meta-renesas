From 2869beec94cef232cfb4a38e100b2b5eac3c84ca Mon Sep 17 00:00:00 2001
From: Loc Pham <loc.pham.xh@rvc.renesas.com>
Date: Wed, 1 Nov 2017 15:09:05 +0700
Subject: [PATCH 2/2] sh-sci.c: Fix issue "exit" command doesn't work correctly

Function "sci_tx_dma_release" usually receives NULL value from variable "chan"
when "exit" command is used on UART console terminal. When passing "chan"
as a parameter or uses its field members, function "dmaengine_terminate_all",
"dma_unmap_single", and "dma_release_channel" will generate the below error:

|    Unable to handle kernel NULL pointer dereference at virtual address 00000000
|      pgd = c0003000
|      [00000000] *pgd=80000040004003, *pmd=00000000
|
|      Backtrace:
|      [<c02a9aa0>] (work_fn_tx) from [<c003999c>] (process_one_work+0x1d0/0x308)
|       r9:00000000 r8:c12eed00 r7:00000000 r6:c12e87c0 r5:c09c39d4 r4:c466df80
|      [<c00397cc>] (process_one_work) from [<c003a624>] (worker_thread+0x2c4/0x404)
|       r10:00000008 r9:c466df98 r8:c12e87d4 r7:c0958100 r6:c12e87c0 r5:c12e87c0
|       r4:c466df80
|      [<c003a360>] (worker_thread) from [<c003edb0>] (kthread+0xdc/0xf4)
|       r10:00000000 r9:00000000 r8:00000000 r7:c003a360 r6:c466df80 r5:00000000
|       r4:c45f3300
|      [<c003ecd4>] (kthread) from [<c0010088>] (ret_from_fork+0x14/0x2c)
|       r7:00000000 r6:00000000 r5:c003ecd4 r4:c45f3300

In conlusion, it's a good idea to call the above functions when "chan" is not NULL. Moreover,
the reason for removing the below message is that most of the time "exit" command is called,
terminal will display this message. So, it will impact user's experience.

|    dev_warn(port->dev, "Failed preparing Tx DMA descriptor\n");

Signed-off-by: Loc Pham <loc.pham.xh@rvc.renesas.com>
---
 drivers/tty/serial/sh-sci.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 63a06ab..a4ae218 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1156,10 +1156,14 @@ static void sci_tx_dma_release(struct sci_port *s, bool enable_pio)
 	s->chan_tx = NULL;
 	s->cookie_tx = -EINVAL;
 	spin_unlock_irqrestore(&port->lock, flags);
-	dmaengine_terminate_all(chan);
-	dma_unmap_single(chan->device->dev, s->tx_dma_addr, UART_XMIT_SIZE,
-			 DMA_TO_DEVICE);
-	dma_release_channel(chan);
+
+	if (chan) {
+		dmaengine_terminate_all(chan);
+		dma_unmap_single(chan->device->dev, s->tx_dma_addr, UART_XMIT_SIZE,
+				 DMA_TO_DEVICE);
+		dma_release_channel(chan);
+	}
+
 	if (enable_pio)
 		sci_start_tx(port);
 }
@@ -1231,7 +1235,6 @@ static void work_fn_tx(struct work_struct *work)
 					   DMA_MEM_TO_DEV,
 					   DMA_PREP_INTERRUPT | DMA_CTRL_ACK);
 	if (!desc) {
-		dev_warn(port->dev, "Failed preparing Tx DMA descriptor\n");
 		/* switch to PIO */
 		sci_tx_dma_release(s, true);
 		return;
-- 
2.7.4


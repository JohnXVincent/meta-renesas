From d6923efb06a9c3dbe5aacddad51b7d067eaac6f2 Mon Sep 17 00:00:00 2001
From: Khai Nguyen <khai.nguyen.wx@renesas.com>
Date: Wed, 13 Apr 2022 11:22:36 +0700
Subject: [PATCH] soc-renesas-rzv2m

Signed-off-by: Khai Nguyen <khai.nguyen.wx@renesas.com>
---
 drivers/soc/renesas/Kconfig       |  7 ++++++-
 drivers/soc/renesas/Makefile      |  1 +
 drivers/soc/renesas/rcar-rst.c    |  1 +
 drivers/soc/renesas/rcar-sysc.c   |  7 +++++++
 drivers/soc/renesas/rcar-sysc.h   |  1 +
 drivers/soc/renesas/renesas-soc.c | 21 +++++++++++++++++++++
 6 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/drivers/soc/renesas/Kconfig b/drivers/soc/renesas/Kconfig
index 15975d193234a..16c18ca860bd9 100644
--- a/drivers/soc/renesas/Kconfig
+++ b/drivers/soc/renesas/Kconfig
@@ -28,8 +28,9 @@ config ARCH_RCAR_GEN2
 	select PM
 	select PM_GENERIC_DOMAINS
 	select RENESAS_IRQC
-	select RST_RCAR
+	select RST_RCAR if ARCH_R9A09G011GBG
 	select SYS_SUPPORTS_SH_CMT
+	select SYSC_R9A09G011GBG if ARCH_R9A09G011GBG
 
 config ARCH_RCAR_GEN3
 	bool
@@ -394,6 +395,10 @@ config SYSC_R8A774E1
 	bool "System Controller support for RZ/G2H" if COMPILE_TEST
 	select SYSC_RCAR
 
+config SYSC_R9A09G011GBG
+       bool "System Controller support for RZV2M" if COMPILE_TEST
+       select SYSC_RCAR
+
 config SYSC_R8A774A1
 	bool "System Controller support for RZ/G2M v1.3" if COMPILE_TEST
 	select SYSC_RCAR
diff --git a/drivers/soc/renesas/Makefile b/drivers/soc/renesas/Makefile
index 77c456396d9a2..bb18a9c88d9bb 100644
--- a/drivers/soc/renesas/Makefile
+++ b/drivers/soc/renesas/Makefile
@@ -12,6 +12,7 @@ obj-$(CONFIG_SYSC_R8A774A3)	+= r8a774a1-sysc.o
 obj-$(CONFIG_SYSC_R8A774B1)	+= r8a774b1-sysc.o
 obj-$(CONFIG_SYSC_R8A774C0)	+= r8a774c0-sysc.o
 obj-$(CONFIG_SYSC_R8A774E1)	+= r8a774e1-sysc.o
+obj-$(CONFIG_SYSC_R9A09G011GBG) += r9a09g011gbg-sysc.o
 obj-$(CONFIG_SYSC_R8A7779)	+= r8a7779-sysc.o
 obj-$(CONFIG_SYSC_R8A7790)	+= r8a7790-sysc.o
 obj-$(CONFIG_SYSC_R8A7791)	+= r8a7791-sysc.o
diff --git a/drivers/soc/renesas/rcar-rst.c b/drivers/soc/renesas/rcar-rst.c
index ae5813ef44894..58181e9c48301 100644
--- a/drivers/soc/renesas/rcar-rst.c
+++ b/drivers/soc/renesas/rcar-rst.c
@@ -56,6 +56,7 @@ static const struct of_device_id rcar_rst_matches[] __initconst = {
 	{ .compatible = "renesas,r8a774b1-rst", .data = &rcar_rst_gen3 },
 	{ .compatible = "renesas,r8a774c0-rst", .data = &rcar_rst_gen3 },
 	{ .compatible = "renesas,r8a774e1-rst", .data = &rcar_rst_gen3 },
+	{ .compatible = "renesas,r8arzv2m-rst", .data = &rcar_rst_gen3 },
 	/* R-Car Gen1 */
 	{ .compatible = "renesas,r8a7778-reset-wdt", .data = &rcar_rst_gen1 },
 	{ .compatible = "renesas,r8a7779-reset-wdt", .data = &rcar_rst_gen1 },
diff --git a/drivers/soc/renesas/rcar-sysc.c b/drivers/soc/renesas/rcar-sysc.c
index 0ccfe0583579c..eb0b96d6ad456 100644
--- a/drivers/soc/renesas/rcar-sysc.c
+++ b/drivers/soc/renesas/rcar-sysc.c
@@ -307,6 +307,9 @@ static const struct of_device_id rcar_sysc_matches[] __initconst = {
 #ifdef CONFIG_SYSC_R8A7779
 	{ .compatible = "renesas,r8a7779-sysc", .data = &r8a7779_sysc_info },
 #endif
+#ifdef CONFIG_SYSC_R9A09G011GBG
+       { .compatible = "renesas,r8arzv2m-sysc", .data = &r8arzv2m_sysc_info },
+#endif
 #ifdef CONFIG_SYSC_R8A7790
 	{ .compatible = "renesas,r8a7790-sysc", .data = &r8a7790_sysc_info },
 #endif
@@ -365,6 +368,10 @@ static int __init rcar_sysc_pd_init(void)
 	unsigned int i;
 	int error;
 
+#ifdef CONFIG_SYSC_R9A09G011GBG
+	return 0;
+#endif
+
 	np = of_find_matching_node_and_match(NULL, rcar_sysc_matches, &match);
 	if (!np)
 		return -ENODEV;
diff --git a/drivers/soc/renesas/rcar-sysc.h b/drivers/soc/renesas/rcar-sysc.h
index ad3d401676199..e3e48fe53779f 100644
--- a/drivers/soc/renesas/rcar-sysc.h
+++ b/drivers/soc/renesas/rcar-sysc.h
@@ -56,6 +56,7 @@ extern const struct rcar_sysc_info r8a7743_sysc_info;
 extern const struct rcar_sysc_info r8a7745_sysc_info;
 extern const struct rcar_sysc_info r8a77470_sysc_info;
 extern const struct rcar_sysc_info r8a774a1_sysc_info;
+extern const struct rcar_sysc_info r8arzv2m_sysc_info;
 extern const struct rcar_sysc_info r8a774a3_sysc_info;
 extern const struct rcar_sysc_info r8a774b1_sysc_info;
 extern const struct rcar_sysc_info r8a774c0_sysc_info;
diff --git a/drivers/soc/renesas/renesas-soc.c b/drivers/soc/renesas/renesas-soc.c
index ec3b315d5f045..805b807e442ba 100644
--- a/drivers/soc/renesas/renesas-soc.c
+++ b/drivers/soc/renesas/renesas-soc.c
@@ -57,6 +57,11 @@ static const struct renesas_family fam_rzg2 __initconst __maybe_unused = {
 	.reg	= 0xfff00044,		/* PRR (Product Register) */
 };
 
+static const struct renesas_family fam_rzv2 __initconst __maybe_unused = {
+       .name   = "RZ/V2",
+       .reg    = 0xA3F03104,           /* SYS (Version Register) */
+};
+
 static const struct renesas_family fam_rzg2l __initconst __maybe_unused = {
 	.name	= "RZ/G2L",
 };
@@ -141,6 +146,11 @@ static const struct renesas_soc soc_rz_g2h __initconst __maybe_unused = {
 	.id	= 0x4f,
 };
 
+static const struct renesas_soc soc_rz_v2m __initconst __maybe_unused = {
+	.family = &fam_rzv2,
+	.id     = 0x10,
+};
+
 static const struct renesas_soc soc_rz_g2l __initconst __maybe_unused = {
 	.family = &fam_rzg2l,
 	.id     = 0x841c447,
@@ -274,6 +284,9 @@ static const struct of_device_id renesas_socs[] __initconst = {
 #ifdef CONFIG_ARCH_R8A774E1
 	{ .compatible = "renesas,r8a774e1",	.data = &soc_rz_g2h },
 #endif
+#ifdef CONFIG_ARCH_R9A09G011GBG
+	{ .compatible = "renesas,r8arzv2m",      .data = &soc_rz_v2m },
+#endif
 #ifdef CONFIG_ARCH_R8A7778
 	{ .compatible = "renesas,r8a7778",	.data = &soc_rcar_m1a },
 #endif
@@ -404,6 +417,7 @@ static int __init renesas_soc_init(void)
 	} else if (soc->id && family->reg) {
 		chipid = ioremap(family->reg, 4);
 	}
+#ifndef CONFIG_ARCH_R9A09G011GBG 
 	if (chipid) {
 		product = readl(chipid);
 		iounmap(chipid);
@@ -420,6 +434,7 @@ static int __init renesas_soc_init(void)
 		eshi = ((product >> 4) & 0x0f) + 1;
 		eslo = product & 0xf;
 	}
+#endif
 
 done:
 	soc_dev_attr = kzalloc(sizeof(*soc_dev_attr), GFP_KERNEL);
@@ -433,9 +448,15 @@ static int __init renesas_soc_init(void)
 	soc_dev_attr->family = kstrdup_const(family->name, GFP_KERNEL);
 	soc_dev_attr->soc_id = kstrdup_const(strchr(match->compatible, ',') + 1,
 					     GFP_KERNEL);
+#ifndef CONFIG_ARCH_R9A09G011GBG
 	if (eshi)
 		soc_dev_attr->revision = kasprintf(GFP_KERNEL, "ES%u.%u", eshi,
 						   eslo);
+#else
+       product = 0x0;
+       soc_dev_attr->revision = kasprintf(GFP_KERNEL, "ES%u.%u", eshi,
+                                                 eslo);
+#endif
 
 	/*FIXME: current RZG2UL family do not support product revision*/
 	if (strcmp(soc_dev_attr->family, fam_rzg2ul.name))
-- 
2.25.1


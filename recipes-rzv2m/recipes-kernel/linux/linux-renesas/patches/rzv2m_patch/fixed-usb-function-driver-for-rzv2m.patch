diff --git a/drivers/usb/gadget/udc/renesas_usb3_rzv2m.c b/drivers/usb/gadget/udc/renesas_usb3_rzv2m.c
index 3e4f56c..19add54 100755
--- a/drivers/usb/gadget/udc/renesas_usb3_rzv2m.c
+++ b/drivers/usb/gadget/udc/renesas_usb3_rzv2m.c
@@ -263,7 +263,7 @@
 #define USB3_EP0_SS_MAX_PACKET_SIZE	512
 #define USB3_EP0_HSFS_MAX_PACKET_SIZE	64
 #define USB3_EP0_BUF_SIZE		8
-#define USB3_MAX_NUM_PIPES              9       /* This includes PIPE 0 */
+#define USB3_MAX_NUM_PIPES		9	/* This includes PIPE 0 */
 #define USB3_WAIT_US			3
 #define USB3_DMA_NUM_SETTING_AREA	4
 /*
@@ -370,7 +370,7 @@ struct renesas_usb3 {
 	bool extcon_usb;		/* check vbus and set EXTCON_USB */
 	bool forced_b_device;
 	bool start_to_connect;
-	bool role_sw_by_connector;
+	bool usb_role_switch_property;
 };
 
 #define gadget_to_renesas_usb3(_gadget)	\
@@ -713,7 +713,7 @@ static void usb3_mode_config(struct renesas_usb3 *usb3, bool host, bool a_dev)
 	unsigned long flags;
 
 	spin_lock_irqsave(&usb3->lock, flags);
-	if (!usb3->role_sw_by_connector ||
+	if (!usb3->usb_role_switch_property ||
 	    usb3->connection_state != USB_ROLE_NONE) {
 		usb3_set_mode_by_role_sw(usb3, host);
 		usb3_vbus_out(usb3, a_dev);
@@ -732,14 +732,14 @@ static bool usb3_is_a_device(struct renesas_usb3 *usb3)
 static void usb3_check_id(struct renesas_usb3 *usb3)
 {
 	usb3->extcon_host = usb3_is_a_device(usb3);
-
+	
         if( usb3->extcon_host ){
                 usb3->connection_state = USB_ROLE_HOST;
         }
         else{
                 usb3->connection_state = USB_ROLE_DEVICE;
         }
-	if ((!usb3->role_sw_by_connector && 	
+ 	if ((!usb3->usb_role_switch_property &&
 	     usb3->extcon_host && !usb3->forced_b_device) ||
 	     usb3->connection_state == USB_ROLE_HOST)
 		usb3_mode_config(usb3, true, true);
@@ -2302,12 +2302,12 @@ static int renesas_usb3_start(struct usb_gadget *gadget,
 
 	usb3 = gadget_to_renesas_usb3(gadget);
 
-	/* hook up the driver */
-	usb3->driver = driver;
-
         if(usb3_is_a_device(usb3))
                 return -EBUSY;
 
+	/* hook up the driver */
+	usb3->driver = driver;
+
 	if (usb3->phy)
 		phy_init(usb3->phy);
 
@@ -2325,11 +2325,9 @@ static int renesas_usb3_stop(struct usb_gadget *gadget)
 	usb3->softconnect = false;
 	usb3->gadget.speed = USB_SPEED_UNKNOWN;
 	usb3->driver = NULL;
-
         if(!usb3_is_a_device(usb3)){
                 renesas_usb3_stop_controller(usb3);
         }
-
 	if (usb3->phy)
 		phy_exit(usb3->phy);
 
@@ -2389,8 +2387,6 @@ static void handle_ext_role_switch_states(struct device *dev,
 	switch (role) {
 	case USB_ROLE_NONE:
 		usb3->connection_state = USB_ROLE_NONE;
-		if (cur_role == USB_ROLE_HOST)
-			device_release_driver(host);
 		if (usb3->driver)
 			usb3_disconnect(usb3);
 		usb3_vbus_out(usb3, false);
@@ -2459,7 +2455,7 @@ static int renesas_usb3_role_switch_set(struct usb_role_switch *sw,
 
 	pm_runtime_get_sync(usb3_to_dev(usb3));
 
-	if (usb3->role_sw_by_connector)
+	if (usb3->usb_role_switch_property)
 		handle_ext_role_switch_states(usb3_to_dev(usb3), role);
 	else
 		handle_role_switch_states(usb3_to_dev(usb3), role);
@@ -2719,9 +2715,9 @@ static const struct renesas_usb3_priv renesas_usb3_priv_r8a77990 = {
 };
 
 static const struct renesas_usb3_priv renesas_usb3_priv_rzv2m = {
-       .ramsize_per_ramif = SZ_32K,
-       .num_ramif = 1,
-       .ramsize_per_pipe = SZ_4K,
+	.ramsize_per_ramif = SZ_32K,
+	.num_ramif = 1,
+	.ramsize_per_pipe = SZ_4K,
 };
 
 static const struct of_device_id usb3_of_match[] = {
@@ -2854,7 +2850,7 @@ static int renesas_usb3_probe(struct platform_device *pdev)
 		goto err_dev_create;
 
 	if (device_property_read_bool(&pdev->dev, "renesas,usb-role-switch")) {
-	 	usb3->role_sw_by_connector = true;
+		usb3->usb_role_switch_property = true;
 		renesas_usb3_role_switch_desc.fwnode = dev_fwnode(&pdev->dev);
 	}
 
